
bin_hdr_phy.elf:     file format elf32-littlearm
bin_hdr_phy.elf

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000394c  40004030  40004030  00004030  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000300  4000797c  4000797c  0000797c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         0000010c  40007c7c  40007c7c  00007c7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .got          00000004  40007d88  40007d88  00007d88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .got.plt      0000000c  40007d8c  40007d8c  00007d8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data.rel     00000254  40007d98  40007d98  00007d98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ARM.attributes 0000002b  00000000  00000000  00007fec  2**0
                  CONTENTS, READONLY
  7 .comment      00000046  00000000  00000000  00008017  2**0
                  CONTENTS, READONLY
  8 .debug_info   000019eb  00000000  00000000  0000805d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000064c  00000000  00000000  00009a48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009a0  00000000  00000000  0000a094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000000a0  00000000  00000000  0000aa34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00000a92  00000000  00000000  0000aad4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000b94  00000000  00000000  0000b566  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000005cc  00000000  00000000  0000c0fc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

40004030 <_start>:
_start():
40004030:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40004034:	fa00019c 	blx	400046ac <mvCtrlHighSpeedSerdesPhyConfig>
40004038:	e3a00000 	mov	r0, #0
4000403c:	e8bd9fff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

40004040 <cache_inv>:
cache_inv():
40004040:	e92d1ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
40004044:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40004048:	e8bd1ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
4000404c:	e12fff1e 	bx	lr

40004050 <flush_l1_v6>:
flush_l1_v6():
40004050:	e92d1ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
40004054:	ee070fba 	mcr	15, 0, r0, cr7, cr10, {5}
40004058:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
4000405c:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40004060:	e8bd1ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
40004064:	e12fff1e 	bx	lr

40004068 <flush_l1_v7>:
flush_l1_v7():
40004068:	e92d1ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
4000406c:	f57ff05f 	dmb	sy
40004070:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40004074:	f57ff04f 	dsb	sy
40004078:	e8bd1ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
4000407c:	e12fff1e 	bx	lr

40004080 <changeResetVecBase>:
changeResetVecBase():
40004080:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
40004084:	e3c11a02 	bic	r1, r1, #8192	; 0x2000
40004088:	e1811000 	orr	r1, r1, r0
4000408c:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
40004090:	f57ff04f 	dsb	sy
40004094:	e12fff1e 	bx	lr

40004098 <setCPSR>:
setCPSR():
40004098:	e10f1000 	mrs	r1, CPSR
4000409c:	e3c11c01 	bic	r1, r1, #256	; 0x100
400040a0:	e1811000 	orr	r1, r1, r0
400040a4:	e122f001 	msr	CPSR_x, r1
400040a8:	e12fff1e 	bx	lr

400040ac <MV_MEMIO_LE32_READ>:
MV_MEMIO_LE32_READ():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:387
#define MV_MEMIO_LE32_WRITE(addr, data) \
        MV_MEMIO32_WRITE(addr, MV_32BIT_LE_FAST(data))

/* 32bit read in little endian mode */
static __inline MV_U32 MV_MEMIO_LE32_READ(MV_U32 addr)
{
400040ac:	b480      	push	{r7}
400040ae:	b085      	sub	sp, #20
400040b0:	af00      	add	r7, sp, #0
400040b2:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:390
	MV_U32 data;

	data= (MV_U32)MV_MEMIO32_READ(addr);
400040b4:	687b      	ldr	r3, [r7, #4]
400040b6:	681b      	ldr	r3, [r3, #0]
400040b8:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:392

	return (MV_U32)MV_32BIT_LE_FAST(data);
400040ba:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:393
}
400040bc:	4618      	mov	r0, r3
400040be:	f107 0714 	add.w	r7, r7, #20
400040c2:	46bd      	mov	sp, r7
400040c4:	bc80      	pop	{r7}
400040c6:	4770      	bx	lr

400040c8 <mvBoardIdGet>:
mvBoardIdGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:102
MV_BOOL PexModule = 0;
MV_BOOL SwitchModule = 0;

/*********************************************************************/
MV_U32 mvBoardIdGet(MV_VOID)
{
400040c8:	b480      	push	{r7}
400040ca:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:112
#elif defined(RD_78460_SERVER_REV2)
	return RD_78460_SERVER_REV2_ID;
#elif defined(DB_78X60_PCAC)
	return DB_78X60_PCAC_ID;
#elif defined(DB_88F78X60_REV2)
	return DB_88F78XX0_BP_REV2_ID;
400040cc:	f04f 0304 	mov.w	r3, #4
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:128
#else
	while (1) {
		continue;
	}
#endif
}
400040d0:	4618      	mov	r0, r3
400040d2:	46bd      	mov	sp, r7
400040d4:	bc80      	pop	{r7}
400040d6:	4770      	bx	lr

400040d8 <mvBoardTclkGet>:
mvBoardTclkGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:131
/*********************************************************************/
MV_U32 mvBoardTclkGet(MV_VOID)
{
400040d8:	b580      	push	{r7, lr}
400040da:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:132
	if ((MV_REG_READ(MPP_SAMPLE_AT_RESET(0)) & MSAR_TCLK_MASK) != 0)
400040dc:	f248 2030 	movw	r0, #33328	; 0x8230
400040e0:	f2cd 0001 	movt	r0, #53249	; 0xd001
400040e4:	f7ff ffe2 	bl	400040ac <MV_MEMIO_LE32_READ>
400040e8:	4603      	mov	r3, r0
400040ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
400040ee:	2b00      	cmp	r3, #0
400040f0:	d004      	beq.n	400040fc <mvBoardTclkGet+0x24>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:133
		return MV_BOARD_TCLK_200MHZ;
400040f2:	f44f 4342 	mov.w	r3, #49664	; 0xc200
400040f6:	f6c0 33eb 	movt	r3, #3051	; 0xbeb
400040fa:	e003      	b.n	40004104 <mvBoardTclkGet+0x2c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:135
	else
		return MV_BOARD_TCLK_250MHZ;
400040fc:	f24b 2380 	movw	r3, #45696	; 0xb280
40004100:	f6c0 63e6 	movt	r3, #3814	; 0xee6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:136
}
40004104:	4618      	mov	r0, r3
40004106:	46bd      	mov	sp, r7
40004108:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
4000410c:	4770      	bx	lr
4000410e:	bf00      	nop

40004110 <mvCtrlRevGet>:
mvCtrlRevGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:155
* RETURN:
*       8bit desscribing Marvell controller revision number
*
*******************************************************************************/
MV_U8 mvCtrlRevGet(MV_VOID)
{
40004110:	b580      	push	{r7, lr}
40004112:	b082      	sub	sp, #8
40004114:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:157
	MV_U8 revNum;
	revNum = (MV_U8) MV_REG_READ(PEX_CFG_DIRECT_ACCESS(0, PCI_CLASS_CODE_AND_REVISION_ID));
40004116:	f04f 0008 	mov.w	r0, #8
4000411a:	f2cd 0004 	movt	r0, #53252	; 0xd004
4000411e:	f7ff ffc5 	bl	400040ac <MV_MEMIO_LE32_READ>
40004122:	4603      	mov	r3, r0
40004124:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:158
	return ((revNum & PCCRIR_REVID_MASK) >> PCCRIR_REVID_OFFS);
40004126:	79fb      	ldrb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:159
}
40004128:	4618      	mov	r0, r3
4000412a:	f107 0708 	add.w	r7, r7, #8
4000412e:	46bd      	mov	sp, r7
40004130:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40004134:	4770      	bx	lr
40004136:	bf00      	nop

40004138 <mvBoardTwsiSatRGet>:
mvBoardTwsiSatRGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:162
/*********************************************************************/
MV_U8 mvBoardTwsiSatRGet(MV_U8 devNum, MV_U8 regNum)
{
40004138:	b580      	push	{r7, lr}
4000413a:	b08c      	sub	sp, #48	; 0x30
4000413c:	af02      	add	r7, sp, #8
4000413e:	4602      	mov	r2, r0
40004140:	460b      	mov	r3, r1
40004142:	71fa      	strb	r2, [r7, #7]
40004144:	71bb      	strb	r3, [r7, #6]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:168
        MV_TWSI_SLAVE twsiSlave;
        MV_TWSI_ADDR slave;
        MV_U8 data;

        /* TWSI init */
        slave.type = ADDR7_BIT;
40004146:	f04f 0300 	mov.w	r3, #0
4000414a:	743b      	strb	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:169
        slave.address = 0;
4000414c:	f04f 0300 	mov.w	r3, #0
40004150:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:170
		mvTwsiInit(0, CONFIG_SYS_I2C_SPEED, CONFIG_SYS_TCLK, &slave, 0);
40004152:	f107 030c 	add.w	r3, r7, #12
40004156:	f04f 0200 	mov.w	r2, #0
4000415a:	9200      	str	r2, [sp, #0]
4000415c:	f04f 0000 	mov.w	r0, #0
40004160:	f248 61a0 	movw	r1, #34464	; 0x86a0
40004164:	f2c0 0101 	movt	r1, #1
40004168:	f44f 4242 	mov.w	r2, #49664	; 0xc200
4000416c:	f6c0 32eb 	movt	r2, #3051	; 0xbeb
40004170:	f002 fd0e 	bl	40006b90 <mvTwsiInit>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:173

        /* Read MPP module ID */
        twsiSlave.slaveAddr.address = 0x4D;
40004174:	f04f 034d 	mov.w	r3, #77	; 0x4d
40004178:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:174
        twsiSlave.slaveAddr.type = ADDR7_BIT;
4000417a:	f04f 0300 	mov.w	r3, #0
4000417e:	763b      	strb	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:175
        twsiSlave.validOffset = MV_TRUE;
40004180:	f04f 0301 	mov.w	r3, #1
40004184:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:176
        twsiSlave.offset = regNum;	        /* Use offset as command */ 
40004186:	79bb      	ldrb	r3, [r7, #6]
40004188:	623b      	str	r3, [r7, #32]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:177
        twsiSlave.moreThen256 = MV_FALSE;
4000418a:	f04f 0300 	mov.w	r3, #0
4000418e:	627b      	str	r3, [r7, #36]	; 0x24
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:178
        if (MV_OK != mvTwsiRead(0, &twsiSlave, &data, 1)) {
40004190:	f107 0214 	add.w	r2, r7, #20
40004194:	f107 030b 	add.w	r3, r7, #11
40004198:	f04f 0000 	mov.w	r0, #0
4000419c:	4611      	mov	r1, r2
4000419e:	461a      	mov	r2, r3
400041a0:	f04f 0301 	mov.w	r3, #1
400041a4:	f003 f8f4 	bl	40007390 <mvTwsiRead>
400041a8:	4603      	mov	r3, r0
400041aa:	2b00      	cmp	r3, #0
400041ac:	d002      	beq.n	400041b4 <mvBoardTwsiSatRGet+0x7c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:179
                return MV_ERROR;
400041ae:	f04f 03ff 	mov.w	r3, #255	; 0xff
400041b2:	e000      	b.n	400041b6 <mvBoardTwsiSatRGet+0x7e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:181
        }
        return data;
400041b4:	7afb      	ldrb	r3, [r7, #11]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:182
}
400041b6:	4618      	mov	r0, r3
400041b8:	f107 0728 	add.w	r7, r7, #40	; 0x28
400041bc:	46bd      	mov	sp, r7
400041be:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400041c2:	4770      	bx	lr

400041c4 <mvBoardModulesScan>:
mvBoardModulesScan():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:185
/*********************************************************************/
MV_STATUS mvBoardModulesScan(void)
{
400041c4:	b580      	push	{r7, lr}
400041c6:	b08c      	sub	sp, #48	; 0x30
400041c8:	af02      	add	r7, sp, #8
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:189
	MV_U8 regVal;
	MV_TWSI_SLAVE twsiSlave;
	MV_TWSI_ADDR slave;
	MV_U32 boardId = mvBoardIdGet();
400041ca:	f7ff ff7d 	bl	400040c8 <mvBoardIdGet>
400041ce:	6278      	str	r0, [r7, #36]	; 0x24
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:192

	/* Perform scan only for DB board */
	if ( (boardId == DB_88F78XX0_BP_ID) || (boardId == DB_88F78XX0_BP_REV2_ID) ) {
400041d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
400041d2:	2b00      	cmp	r3, #0
400041d4:	d002      	beq.n	400041dc <mvBoardModulesScan+0x18>
400041d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
400041d8:	2b04      	cmp	r3, #4
400041da:	d143      	bne.n	40004264 <mvBoardModulesScan+0xa0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:194
		/* reset modules flags */
		PexModule = 0;
400041dc:	4b33      	ldr	r3, [pc, #204]	; (400042ac <mvBoardModulesScan+0xe8>)
400041de:	447b      	add	r3, pc
400041e0:	f04f 0200 	mov.w	r2, #0
400041e4:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:196
        /* TWSI init */
        slave.type = ADDR7_BIT;
400041e6:	f04f 0300 	mov.w	r3, #0
400041ea:	723b      	strb	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:197
        slave.address = 0;
400041ec:	f04f 0300 	mov.w	r3, #0
400041f0:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:198
		mvTwsiInit(0, CONFIG_SYS_I2C_SPEED, CONFIG_SYS_TCLK, &slave, 0);
400041f2:	f107 0304 	add.w	r3, r7, #4
400041f6:	f04f 0200 	mov.w	r2, #0
400041fa:	9200      	str	r2, [sp, #0]
400041fc:	f04f 0000 	mov.w	r0, #0
40004200:	f248 61a0 	movw	r1, #34464	; 0x86a0
40004204:	f2c0 0101 	movt	r1, #1
40004208:	f44f 4242 	mov.w	r2, #49664	; 0xc200
4000420c:	f6c0 32eb 	movt	r2, #3051	; 0xbeb
40004210:	f002 fcbe 	bl	40006b90 <mvTwsiInit>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:201

		/* SERDES module (only PEX moduel is supported now) */
		twsiSlave.slaveAddr.address = MV_BOARD_PEX_MODULE_ADDR;
40004214:	f04f 0323 	mov.w	r3, #35	; 0x23
40004218:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:202
		twsiSlave.slaveAddr.type = MV_BOARD_PEX_MODULE_ADDR_TYPE;
4000421a:	f04f 0300 	mov.w	r3, #0
4000421e:	743b      	strb	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:203
		twsiSlave.validOffset = MV_TRUE;
40004220:	f04f 0301 	mov.w	r3, #1
40004224:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:204
		twsiSlave.offset = 0;
40004226:	f04f 0300 	mov.w	r3, #0
4000422a:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:205
		twsiSlave.moreThen256 = MV_FALSE;
4000422c:	f04f 0300 	mov.w	r3, #0
40004230:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:206
		if (mvTwsiRead(0, &twsiSlave, &regVal, 1) == MV_OK) {
40004232:	f107 020c 	add.w	r2, r7, #12
40004236:	f107 0323 	add.w	r3, r7, #35	; 0x23
4000423a:	f04f 0000 	mov.w	r0, #0
4000423e:	4611      	mov	r1, r2
40004240:	461a      	mov	r2, r3
40004242:	f04f 0301 	mov.w	r3, #1
40004246:	f003 f8a3 	bl	40007390 <mvTwsiRead>
4000424a:	4603      	mov	r3, r0
4000424c:	2b00      	cmp	r3, #0
4000424e:	d122      	bne.n	40004296 <mvBoardModulesScan+0xd2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:207
			if (regVal == MV_BOARD_PEX_MODULE_ID)
40004250:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
40004254:	2b00      	cmp	r3, #0
40004256:	d11e      	bne.n	40004296 <mvBoardModulesScan+0xd2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:208
				PexModule = 1;			
40004258:	4b15      	ldr	r3, [pc, #84]	; (400042b0 <mvBoardModulesScan+0xec>)
4000425a:	447b      	add	r3, pc
4000425c:	f04f 0201 	mov.w	r2, #1
40004260:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:206
		twsiSlave.slaveAddr.address = MV_BOARD_PEX_MODULE_ADDR;
		twsiSlave.slaveAddr.type = MV_BOARD_PEX_MODULE_ADDR_TYPE;
		twsiSlave.validOffset = MV_TRUE;
		twsiSlave.offset = 0;
		twsiSlave.moreThen256 = MV_FALSE;
		if (mvTwsiRead(0, &twsiSlave, &regVal, 1) == MV_OK) {
40004262:	e018      	b.n	40004296 <mvBoardModulesScan+0xd2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:211
			if (regVal == MV_BOARD_PEX_MODULE_ID)
				PexModule = 1;			
		}
		
	} else if (boardId == RD_78460_NAS_ID) {
40004264:	6a7b      	ldr	r3, [r7, #36]	; 0x24
40004266:	2b05      	cmp	r3, #5
40004268:	d116      	bne.n	40004298 <mvBoardModulesScan+0xd4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:212
		SwitchModule = 0;
4000426a:	4b12      	ldr	r3, [pc, #72]	; (400042b4 <mvBoardModulesScan+0xf0>)
4000426c:	447b      	add	r3, pc
4000426e:	f04f 0200 	mov.w	r2, #0
40004272:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:213
		if ((MV_REG_READ(GPP_DATA_IN_REG(2)) & MV_GPP66) == 0x0)
40004274:	f248 1090 	movw	r0, #33168	; 0x8190
40004278:	f2cd 0001 	movt	r0, #53249	; 0xd001
4000427c:	f7ff ff16 	bl	400040ac <MV_MEMIO_LE32_READ>
40004280:	4603      	mov	r3, r0
40004282:	f003 0304 	and.w	r3, r3, #4
40004286:	2b00      	cmp	r3, #0
40004288:	d106      	bne.n	40004298 <mvBoardModulesScan+0xd4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:214
			SwitchModule = 1;
4000428a:	4b0b      	ldr	r3, [pc, #44]	; (400042b8 <mvBoardModulesScan+0xf4>)
4000428c:	447b      	add	r3, pc
4000428e:	f04f 0201 	mov.w	r2, #1
40004292:	601a      	str	r2, [r3, #0]
40004294:	e000      	b.n	40004298 <mvBoardModulesScan+0xd4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:206
		twsiSlave.slaveAddr.address = MV_BOARD_PEX_MODULE_ADDR;
		twsiSlave.slaveAddr.type = MV_BOARD_PEX_MODULE_ADDR_TYPE;
		twsiSlave.validOffset = MV_TRUE;
		twsiSlave.offset = 0;
		twsiSlave.moreThen256 = MV_FALSE;
		if (mvTwsiRead(0, &twsiSlave, &regVal, 1) == MV_OK) {
40004296:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:216
	} else if (boardId == RD_78460_NAS_ID) {
		SwitchModule = 0;
		if ((MV_REG_READ(GPP_DATA_IN_REG(2)) & MV_GPP66) == 0x0)
			SwitchModule = 1;
	}
	return MV_OK;
40004298:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:217
}
4000429c:	4618      	mov	r0, r3
4000429e:	f107 0728 	add.w	r7, r7, #40	; 0x28
400042a2:	46bd      	mov	sp, r7
400042a4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400042a8:	4770      	bx	lr
400042aa:	bf00      	nop
400042ac:	00003a9a 	muleq	r0, sl, sl
400042b0:	00003a1e 	andeq	r3, r0, lr, lsl sl
400042b4:	00003a10 	andeq	r3, r0, r0, lsl sl
400042b8:	000039f0 	strdeq	r3, [r0], -r0

400042bc <mvBoardIsPexModuleConnected>:
mvBoardIsPexModuleConnected():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:220
/*********************************************************************/
MV_BOOL mvBoardIsPexModuleConnected(void)
{
400042bc:	b480      	push	{r7}
400042be:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:221
        return PexModule;
400042c0:	4b03      	ldr	r3, [pc, #12]	; (400042d0 <mvBoardIsPexModuleConnected+0x14>)
400042c2:	447b      	add	r3, pc
400042c4:	681b      	ldr	r3, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:222
}
400042c6:	4618      	mov	r0, r3
400042c8:	46bd      	mov	sp, r7
400042ca:	bc80      	pop	{r7}
400042cc:	4770      	bx	lr
400042ce:	bf00      	nop
400042d0:	000039b6 			; <UNDEFINED> instruction: 0x000039b6

400042d4 <mvCtrlModelGet>:
mvCtrlModelGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:225
/*********************************************************************/
MV_U16 mvCtrlModelGet(MV_VOID)
{
400042d4:	b580      	push	{r7, lr}
400042d6:	b084      	sub	sp, #16
400042d8:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:227
        MV_U32 devId;
        MV_U16 model = 0;
400042da:	f04f 0300 	mov.w	r3, #0
400042de:	81fb      	strh	r3, [r7, #14]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:231
        MV_U32 reg, reg2;

        /* if PEX0 clocks are disabled - enabled it to read */
        reg = MV_REG_READ(POWER_MNG_CTRL_REG);
400042e0:	f248 2020 	movw	r0, #33312	; 0x8220
400042e4:	f2cd 0001 	movt	r0, #53249	; 0xd001
400042e8:	f7ff fee0 	bl	400040ac <MV_MEMIO_LE32_READ>
400042ec:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:232
        if ((reg & PMC_PEXSTOPCLOCK_MASK(0)) == PMC_PEXSTOPCLOCK_STOP(0)) {
400042ee:	68bb      	ldr	r3, [r7, #8]
400042f0:	f003 0320 	and.w	r3, r3, #32
400042f4:	2b00      	cmp	r3, #0
400042f6:	d109      	bne.n	4000430c <mvCtrlModelGet+0x38>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:233
                reg2 = ((reg & ~PMC_PEXSTOPCLOCK_MASK(0)) | PMC_PEXSTOPCLOCK_EN(0));
400042f8:	68bb      	ldr	r3, [r7, #8]
400042fa:	f043 0320 	orr.w	r3, r3, #32
400042fe:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:234
                MV_REG_WRITE(POWER_MNG_CTRL_REG, reg2);
40004300:	f248 2320 	movw	r3, #33312	; 0x8220
40004304:	f2cd 0301 	movt	r3, #53249	; 0xd001
40004308:	687a      	ldr	r2, [r7, #4]
4000430a:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:236
        }
        devId = MV_REG_READ(PEX_CFG_DIRECT_ACCESS(0, PEX_DEVICE_AND_VENDOR_ID));
4000430c:	f04f 0000 	mov.w	r0, #0
40004310:	f2cd 0004 	movt	r0, #53252	; 0xd004
40004314:	f7ff feca 	bl	400040ac <MV_MEMIO_LE32_READ>
40004318:	6038      	str	r0, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:239

        /* Reset the original value of the PEX0 clock */
        if ((reg & PMC_PEXSTOPCLOCK_MASK(0)) == PMC_PEXSTOPCLOCK_STOP(0))
4000431a:	68bb      	ldr	r3, [r7, #8]
4000431c:	f003 0320 	and.w	r3, r3, #32
40004320:	2b00      	cmp	r3, #0
40004322:	d105      	bne.n	40004330 <mvCtrlModelGet+0x5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:240
                MV_REG_WRITE(POWER_MNG_CTRL_REG, reg);
40004324:	f248 2320 	movw	r3, #33312	; 0x8220
40004328:	f2cd 0301 	movt	r3, #53249	; 0xd001
4000432c:	68ba      	ldr	r2, [r7, #8]
4000432e:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:242

        model = (MV_U16) ((devId >> 16) & 0xFFFF);
40004330:	683b      	ldr	r3, [r7, #0]
40004332:	ea4f 4313 	mov.w	r3, r3, lsr #16
40004336:	81fb      	strh	r3, [r7, #14]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:243
        return model;
40004338:	89fb      	ldrh	r3, [r7, #14]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:244
}
4000433a:	4618      	mov	r0, r3
4000433c:	f107 0710 	add.w	r7, r7, #16
40004340:	46bd      	mov	sp, r7
40004342:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40004346:	4770      	bx	lr

40004348 <mvBoardSledCpuNumGet>:
mvBoardSledCpuNumGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:247
/*********************************************************************/
MV_U32 mvBoardSledCpuNumGet(MV_VOID)
{
40004348:	b580      	push	{r7, lr}
4000434a:	b082      	sub	sp, #8
4000434c:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:249
	MV_U32 reg;
	reg = MV_REG_READ(GPP_DATA_IN_REG(0));
4000434e:	f248 1010 	movw	r0, #33040	; 0x8110
40004352:	f2cd 0001 	movt	r0, #53249	; 0xd001
40004356:	f7ff fea9 	bl	400040ac <MV_MEMIO_LE32_READ>
4000435a:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:250
	return ((reg & 0xF0000) >> 16);
4000435c:	687b      	ldr	r3, [r7, #4]
4000435e:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
40004362:	ea4f 4313 	mov.w	r3, r3, lsr #16
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:251
}
40004366:	4618      	mov	r0, r3
40004368:	f107 0708 	add.w	r7, r7, #8
4000436c:	46bd      	mov	sp, r7
4000436e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40004372:	4770      	bx	lr

40004374 <mvBoardSerdesCfgGet>:
mvBoardSerdesCfgGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:254
/*********************************************************************/
MV_BIN_SERDES_CFG *mvBoardSerdesCfgGet(MV_U8 pexMode)
{
40004374:	b590      	push	{r4, r7, lr}
40004376:	b089      	sub	sp, #36	; 0x24
40004378:	af00      	add	r7, sp, #0
4000437a:	4603      	mov	r3, r0
4000437c:	71fb      	strb	r3, [r7, #7]
4000437e:	4c6b      	ldr	r4, [pc, #428]	; (4000452c <mvBoardSerdesCfgGet+0x1b8>)
40004380:	447c      	add	r4, pc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:256
	MV_U32 boardId;
	MV_U32 serdesCfg_val = 0; /* default */
40004382:	f04f 0300 	mov.w	r3, #0
40004386:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:257
	int pex0 = 1;
40004388:	f04f 0301 	mov.w	r3, #1
4000438c:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:258
	int pex1 = 1;
4000438e:	f04f 0301 	mov.w	r3, #1
40004392:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:259
	MV_BOOL moduleConnected = mvBoardIsPexModuleConnected();
40004394:	f7ff ff92 	bl	400042bc <mvBoardIsPexModuleConnected>
40004398:	6138      	str	r0, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:261
	
	switch (pexMode) {
4000439a:	79fb      	ldrb	r3, [r7, #7]
4000439c:	2b03      	cmp	r3, #3
4000439e:	d829      	bhi.n	400043f4 <mvBoardSerdesCfgGet+0x80>
400043a0:	a102      	add	r1, pc, #8	; (adr r1, 400043ac <mvBoardSerdesCfgGet+0x38>)
400043a2:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
400043a6:	4411      	add	r1, r2
400043a8:	4708      	bx	r1
400043aa:	bf00      	nop
400043ac:	00000011 	andeq	r0, r0, r1, lsl r0
400043b0:	0000001f 	andeq	r0, r0, pc, lsl r0
400043b4:	0000002d 	andeq	r0, r0, sp, lsr #32
400043b8:	0000003b 	andeq	r0, r0, fp, lsr r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:263
	case 0:
		pex0 = 1;
400043bc:	f04f 0301 	mov.w	r3, #1
400043c0:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:264
		pex1 = 1;
400043c2:	f04f 0301 	mov.w	r3, #1
400043c6:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:265
		break;
400043c8:	e014      	b.n	400043f4 <mvBoardSerdesCfgGet+0x80>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:267
	case 1:
		pex0 = 4;
400043ca:	f04f 0304 	mov.w	r3, #4
400043ce:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:268
		pex1 = 1;
400043d0:	f04f 0301 	mov.w	r3, #1
400043d4:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:269
		break;
400043d6:	e00d      	b.n	400043f4 <mvBoardSerdesCfgGet+0x80>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:271
	case 2:
		pex0 = 1;
400043d8:	f04f 0301 	mov.w	r3, #1
400043dc:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:272
		pex1 = 4;
400043de:	f04f 0304 	mov.w	r3, #4
400043e2:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:273
		break;
400043e4:	e006      	b.n	400043f4 <mvBoardSerdesCfgGet+0x80>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:275
	case 3:
		pex0 = 4;
400043e6:	f04f 0304 	mov.w	r3, #4
400043ea:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:276
		pex1 = 4;
400043ec:	f04f 0304 	mov.w	r3, #4
400043f0:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:277
		break;
400043f2:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:279
	}
	boardId = mvBoardIdGet();
400043f4:	f7ff fe68 	bl	400040c8 <mvBoardIdGet>
400043f8:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:281

	switch (boardId) {
400043fa:	68fb      	ldr	r3, [r7, #12]
400043fc:	2b09      	cmp	r3, #9
400043fe:	f200 8080 	bhi.w	40004502 <mvBoardSerdesCfgGet+0x18e>
40004402:	a102      	add	r1, pc, #8	; (adr r1, 4000440c <mvBoardSerdesCfgGet+0x98>)
40004404:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
40004408:	4411      	add	r1, r2
4000440a:	4708      	bx	r1
4000440c:	00000029 	andeq	r0, r0, r9, lsr #32
40004410:	00000037 	andeq	r0, r0, r7, lsr r0
40004414:	000000f7 	strdeq	r0, [r0], -r7
40004418:	000000f7 	strdeq	r0, [r0], -r7
4000441c:	00000049 	andeq	r0, r0, r9, asr #32
40004420:	000000d7 	ldrdeq	r0, [r0], -r7
40004424:	000000f7 	strdeq	r0, [r0], -r7
40004428:	000000f7 	strdeq	r0, [r0], -r7
4000442c:	00000037 	andeq	r0, r0, r7, lsr r0
40004430:	000000cf 	andeq	r0, r0, pc, asr #1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:283
	case DB_88F78XX0_BP_ID:
		if (moduleConnected)
40004434:	693b      	ldr	r3, [r7, #16]
40004436:	2b00      	cmp	r3, #0
40004438:	d05c      	beq.n	400044f4 <mvBoardSerdesCfgGet+0x180>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:284
			serdesCfg_val = 1;
4000443a:	f04f 0301 	mov.w	r3, #1
4000443e:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:285
		break;
40004440:	e058      	b.n	400044f4 <mvBoardSerdesCfgGet+0x180>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:288
	case RD_78460_SERVER_ID:
	case RD_78460_SERVER_REV2_ID:
		if (mvBoardSledCpuNumGet() > 0)
40004442:	f7ff ff81 	bl	40004348 <mvBoardSledCpuNumGet>
40004446:	4603      	mov	r3, r0
40004448:	2b00      	cmp	r3, #0
4000444a:	d055      	beq.n	400044f8 <mvBoardSerdesCfgGet+0x184>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:289
			serdesCfg_val = 1;
4000444c:	f04f 0301 	mov.w	r3, #1
40004450:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:290
		break;
40004452:	e051      	b.n	400044f8 <mvBoardSerdesCfgGet+0x184>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:292
	case DB_88F78XX0_BP_REV2_ID:
		if ( (!moduleConnected) && (pex0 == 1)) /*if the module is not connected the PEX1 mode is not relevant*/
40004454:	693b      	ldr	r3, [r7, #16]
40004456:	2b00      	cmp	r3, #0
40004458:	d105      	bne.n	40004466 <mvBoardSerdesCfgGet+0xf2>
4000445a:	69bb      	ldr	r3, [r7, #24]
4000445c:	2b01      	cmp	r3, #1
4000445e:	d102      	bne.n	40004466 <mvBoardSerdesCfgGet+0xf2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:293
			serdesCfg_val = 0;
40004460:	f04f 0300 	mov.w	r3, #0
40004464:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:294
		if ( (moduleConnected) && (pex0 == 1) && (pex1 == 1))
40004466:	693b      	ldr	r3, [r7, #16]
40004468:	2b00      	cmp	r3, #0
4000446a:	d008      	beq.n	4000447e <mvBoardSerdesCfgGet+0x10a>
4000446c:	69bb      	ldr	r3, [r7, #24]
4000446e:	2b01      	cmp	r3, #1
40004470:	d105      	bne.n	4000447e <mvBoardSerdesCfgGet+0x10a>
40004472:	697b      	ldr	r3, [r7, #20]
40004474:	2b01      	cmp	r3, #1
40004476:	d102      	bne.n	4000447e <mvBoardSerdesCfgGet+0x10a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:295
			serdesCfg_val = 1;
40004478:	f04f 0301 	mov.w	r3, #1
4000447c:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:296
		if ( (!moduleConnected) && (pex0 == 4))  /*if the module is not connected the PEX1 mode is not relevant*/
4000447e:	693b      	ldr	r3, [r7, #16]
40004480:	2b00      	cmp	r3, #0
40004482:	d105      	bne.n	40004490 <mvBoardSerdesCfgGet+0x11c>
40004484:	69bb      	ldr	r3, [r7, #24]
40004486:	2b04      	cmp	r3, #4
40004488:	d102      	bne.n	40004490 <mvBoardSerdesCfgGet+0x11c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:297
			serdesCfg_val = 2;
4000448a:	f04f 0302 	mov.w	r3, #2
4000448e:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:298
		if ( (moduleConnected) && (pex0 == 4) && (pex1 == 1))
40004490:	693b      	ldr	r3, [r7, #16]
40004492:	2b00      	cmp	r3, #0
40004494:	d008      	beq.n	400044a8 <mvBoardSerdesCfgGet+0x134>
40004496:	69bb      	ldr	r3, [r7, #24]
40004498:	2b04      	cmp	r3, #4
4000449a:	d105      	bne.n	400044a8 <mvBoardSerdesCfgGet+0x134>
4000449c:	697b      	ldr	r3, [r7, #20]
4000449e:	2b01      	cmp	r3, #1
400044a0:	d102      	bne.n	400044a8 <mvBoardSerdesCfgGet+0x134>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:299
			serdesCfg_val = 3;
400044a2:	f04f 0303 	mov.w	r3, #3
400044a6:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:300
		if ( (moduleConnected) && (pex0 == 1) && (pex1 == 4))
400044a8:	693b      	ldr	r3, [r7, #16]
400044aa:	2b00      	cmp	r3, #0
400044ac:	d008      	beq.n	400044c0 <mvBoardSerdesCfgGet+0x14c>
400044ae:	69bb      	ldr	r3, [r7, #24]
400044b0:	2b01      	cmp	r3, #1
400044b2:	d105      	bne.n	400044c0 <mvBoardSerdesCfgGet+0x14c>
400044b4:	697b      	ldr	r3, [r7, #20]
400044b6:	2b04      	cmp	r3, #4
400044b8:	d102      	bne.n	400044c0 <mvBoardSerdesCfgGet+0x14c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:301
			serdesCfg_val = 4;
400044ba:	f04f 0304 	mov.w	r3, #4
400044be:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:302
		if ( (moduleConnected) && (pex0 == 4) && (pex1 == 4))
400044c0:	693b      	ldr	r3, [r7, #16]
400044c2:	2b00      	cmp	r3, #0
400044c4:	d01a      	beq.n	400044fc <mvBoardSerdesCfgGet+0x188>
400044c6:	69bb      	ldr	r3, [r7, #24]
400044c8:	2b04      	cmp	r3, #4
400044ca:	d117      	bne.n	400044fc <mvBoardSerdesCfgGet+0x188>
400044cc:	697b      	ldr	r3, [r7, #20]
400044ce:	2b04      	cmp	r3, #4
400044d0:	d114      	bne.n	400044fc <mvBoardSerdesCfgGet+0x188>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:303
			serdesCfg_val = 5;
400044d2:	f04f 0305 	mov.w	r3, #5
400044d6:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:304
		break;
400044d8:	e010      	b.n	400044fc <mvBoardSerdesCfgGet+0x188>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:306
	case DB_784MP_GP_ID:
		serdesCfg_val = 0;
400044da:	f04f 0300 	mov.w	r3, #0
400044de:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:307
		break;
400044e0:	e00f      	b.n	40004502 <mvBoardSerdesCfgGet+0x18e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:309
	case RD_78460_NAS_ID:
		if (SwitchModule)
400044e2:	4b13      	ldr	r3, [pc, #76]	; (40004530 <mvBoardSerdesCfgGet+0x1bc>)
400044e4:	447b      	add	r3, pc
400044e6:	681b      	ldr	r3, [r3, #0]
400044e8:	2b00      	cmp	r3, #0
400044ea:	d009      	beq.n	40004500 <mvBoardSerdesCfgGet+0x18c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:310
			serdesCfg_val = 1;
400044ec:	f04f 0301 	mov.w	r3, #1
400044f0:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:311
		break;
400044f2:	e005      	b.n	40004500 <mvBoardSerdesCfgGet+0x18c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:285

	switch (boardId) {
	case DB_88F78XX0_BP_ID:
		if (moduleConnected)
			serdesCfg_val = 1;
		break;
400044f4:	bf00      	nop
400044f6:	e004      	b.n	40004502 <mvBoardSerdesCfgGet+0x18e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:290
	case RD_78460_SERVER_ID:
	case RD_78460_SERVER_REV2_ID:
		if (mvBoardSledCpuNumGet() > 0)
			serdesCfg_val = 1;
		break;
400044f8:	bf00      	nop
400044fa:	e002      	b.n	40004502 <mvBoardSerdesCfgGet+0x18e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:304
			serdesCfg_val = 3;
		if ( (moduleConnected) && (pex0 == 1) && (pex1 == 4))
			serdesCfg_val = 4;
		if ( (moduleConnected) && (pex0 == 4) && (pex1 == 4))
			serdesCfg_val = 5;
		break;
400044fc:	bf00      	nop
400044fe:	e000      	b.n	40004502 <mvBoardSerdesCfgGet+0x18e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:311
		serdesCfg_val = 0;
		break;
	case RD_78460_NAS_ID:
		if (SwitchModule)
			serdesCfg_val = 1;
		break;
40004500:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:313
	}
	return &SerdesInfoTbl[boardId-BOARD_ID_BASE][serdesCfg_val];
40004502:	4b0c      	ldr	r3, [pc, #48]	; (40004534 <mvBoardSerdesCfgGet+0x1c0>)
40004504:	58e3      	ldr	r3, [r4, r3]
40004506:	68fa      	ldr	r2, [r7, #12]
40004508:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
4000450c:	69fa      	ldr	r2, [r7, #28]
4000450e:	4613      	mov	r3, r2
40004510:	ea4f 0343 	mov.w	r3, r3, lsl #1
40004514:	189b      	adds	r3, r3, r2
40004516:	ea4f 03c3 	mov.w	r3, r3, lsl #3
4000451a:	18cb      	adds	r3, r1, r3
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:314
}
4000451c:	4618      	mov	r0, r3
4000451e:	f107 0724 	add.w	r7, r7, #36	; 0x24
40004522:	46bd      	mov	sp, r7
40004524:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
40004528:	4770      	bx	lr
4000452a:	bf00      	nop
4000452c:	00003a04 	andeq	r3, r0, r4, lsl #20
40004530:	00003798 	muleq	r0, r8, r7
40004534:	00000000 	andeq	r0, r0, r0

40004538 <mvCtrlSerdesMaxLinesGet>:
mvCtrlSerdesMaxLinesGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:333
*       Marvell controller number of PEX units. If controller
*               ID is undefined the function returns '0'.
*
*******************************************************************************/
MV_U32 mvCtrlSerdesMaxLinesGet(MV_VOID)
{        
40004538:	b580      	push	{r7, lr}
4000453a:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:334
      switch (mvCtrlModelGet()) {
4000453c:	f7ff feca 	bl	400042d4 <mvCtrlModelGet>
40004540:	4603      	mov	r3, r0
40004542:	f647 0223 	movw	r2, #30755	; 0x7823
40004546:	4293      	cmp	r3, r2
40004548:	d01d      	beq.n	40004586 <mvCtrlSerdesMaxLinesGet+0x4e>
4000454a:	f647 0223 	movw	r2, #30755	; 0x7823
4000454e:	4293      	cmp	r3, r2
40004550:	dc0c      	bgt.n	4000456c <mvCtrlSerdesMaxLinesGet+0x34>
40004552:	f647 0213 	movw	r2, #30739	; 0x7813
40004556:	4293      	cmp	r3, r2
40004558:	d015      	beq.n	40004586 <mvCtrlSerdesMaxLinesGet+0x4e>
4000455a:	f647 0216 	movw	r2, #30742	; 0x7816
4000455e:	4293      	cmp	r3, r2
40004560:	d014      	beq.n	4000458c <mvCtrlSerdesMaxLinesGet+0x54>
40004562:	f246 7210 	movw	r2, #26384	; 0x6710
40004566:	4293      	cmp	r3, r2
40004568:	d00d      	beq.n	40004586 <mvCtrlSerdesMaxLinesGet+0x4e>
4000456a:	e015      	b.n	40004598 <mvCtrlSerdesMaxLinesGet+0x60>
4000456c:	f647 0246 	movw	r2, #30790	; 0x7846
40004570:	4293      	cmp	r3, r2
40004572:	d00e      	beq.n	40004592 <mvCtrlSerdesMaxLinesGet+0x5a>
40004574:	f647 0288 	movw	r2, #30856	; 0x7888
40004578:	4293      	cmp	r3, r2
4000457a:	d00a      	beq.n	40004592 <mvCtrlSerdesMaxLinesGet+0x5a>
4000457c:	f647 0226 	movw	r2, #30758	; 0x7826
40004580:	4293      	cmp	r3, r2
40004582:	d003      	beq.n	4000458c <mvCtrlSerdesMaxLinesGet+0x54>
40004584:	e008      	b.n	40004598 <mvCtrlSerdesMaxLinesGet+0x60>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:338
        case MV_78130_DEV_ID:
        case MV_6710_DEV_ID:
        case MV_78230_DEV_ID:
                return 7;
40004586:	f04f 0307 	mov.w	r3, #7
4000458a:	e007      	b.n	4000459c <mvCtrlSerdesMaxLinesGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:341
        case MV_78160_DEV_ID:
        case MV_78260_DEV_ID:
                return 12;
4000458c:	f04f 030c 	mov.w	r3, #12
40004590:	e004      	b.n	4000459c <mvCtrlSerdesMaxLinesGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:345
                break;
        case MV_78460_DEV_ID:
        case MV_78000_DEV_ID:
                return 16;
40004592:	f04f 0310 	mov.w	r3, #16
40004596:	e001      	b.n	4000459c <mvCtrlSerdesMaxLinesGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:347
        default:
                return 0;
40004598:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:349
	}
}
4000459c:	4618      	mov	r0, r3
4000459e:	46bd      	mov	sp, r7
400045a0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400045a4:	4770      	bx	lr
400045a6:	bf00      	nop

400045a8 <mvCtrlPexMaxUnitGet>:
mvCtrlPexMaxUnitGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:352
/*******************************************************************************/
MV_U32 mvCtrlPexMaxUnitGet(MV_VOID)
{
400045a8:	b580      	push	{r7, lr}
400045aa:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:353
      switch (mvCtrlModelGet()) {
400045ac:	f7ff fe92 	bl	400042d4 <mvCtrlModelGet>
400045b0:	4603      	mov	r3, r0
400045b2:	f647 0223 	movw	r2, #30755	; 0x7823
400045b6:	4293      	cmp	r3, r2
400045b8:	d01d      	beq.n	400045f6 <mvCtrlPexMaxUnitGet+0x4e>
400045ba:	f647 0223 	movw	r2, #30755	; 0x7823
400045be:	4293      	cmp	r3, r2
400045c0:	dc0c      	bgt.n	400045dc <mvCtrlPexMaxUnitGet+0x34>
400045c2:	f647 0213 	movw	r2, #30739	; 0x7813
400045c6:	4293      	cmp	r3, r2
400045c8:	d015      	beq.n	400045f6 <mvCtrlPexMaxUnitGet+0x4e>
400045ca:	f647 0216 	movw	r2, #30742	; 0x7816
400045ce:	4293      	cmp	r3, r2
400045d0:	d014      	beq.n	400045fc <mvCtrlPexMaxUnitGet+0x54>
400045d2:	f246 7210 	movw	r2, #26384	; 0x6710
400045d6:	4293      	cmp	r3, r2
400045d8:	d00d      	beq.n	400045f6 <mvCtrlPexMaxUnitGet+0x4e>
400045da:	e015      	b.n	40004608 <mvCtrlPexMaxUnitGet+0x60>
400045dc:	f647 0246 	movw	r2, #30790	; 0x7846
400045e0:	4293      	cmp	r3, r2
400045e2:	d00e      	beq.n	40004602 <mvCtrlPexMaxUnitGet+0x5a>
400045e4:	f647 0288 	movw	r2, #30856	; 0x7888
400045e8:	4293      	cmp	r3, r2
400045ea:	d00a      	beq.n	40004602 <mvCtrlPexMaxUnitGet+0x5a>
400045ec:	f647 0226 	movw	r2, #30758	; 0x7826
400045f0:	4293      	cmp	r3, r2
400045f2:	d003      	beq.n	400045fc <mvCtrlPexMaxUnitGet+0x54>
400045f4:	e008      	b.n	40004608 <mvCtrlPexMaxUnitGet+0x60>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:357
        case MV_78130_DEV_ID:
        case MV_6710_DEV_ID:
        case MV_78230_DEV_ID:
                return 2;
400045f6:	f04f 0302 	mov.w	r3, #2
400045fa:	e007      	b.n	4000460c <mvCtrlPexMaxUnitGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:361

        case MV_78160_DEV_ID:
        case MV_78260_DEV_ID:
                return 3;
400045fc:	f04f 0303 	mov.w	r3, #3
40004600:	e004      	b.n	4000460c <mvCtrlPexMaxUnitGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:365

        case MV_78460_DEV_ID:
        case MV_78000_DEV_ID:
                return MV_PEX_MAX_UNIT;
40004602:	f04f 0304 	mov.w	r3, #4
40004606:	e001      	b.n	4000460c <mvCtrlPexMaxUnitGet+0x64>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:368

        default:
                return 0;
40004608:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:370
        }
}
4000460c:	4618      	mov	r0, r3
4000460e:	46bd      	mov	sp, r7
40004610:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40004614:	4770      	bx	lr
40004616:	bf00      	nop

40004618 <mvBoardCpuFreqGet>:
mvBoardCpuFreqGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:372
MV_U8 mvBoardCpuFreqGet(MV_VOID)
{
40004618:	b580      	push	{r7, lr}
4000461a:	b082      	sub	sp, #8
4000461c:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:376
	MV_U32 sar;
	MV_U32 sarMsb;

	sar = MV_REG_READ(MPP_SAMPLE_AT_RESET(0));
4000461e:	f248 2030 	movw	r0, #33328	; 0x8230
40004622:	f2cd 0001 	movt	r0, #53249	; 0xd001
40004626:	f7ff fd41 	bl	400040ac <MV_MEMIO_LE32_READ>
4000462a:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:377
	sarMsb = MV_REG_READ(MPP_SAMPLE_AT_RESET(1));
4000462c:	f248 2034 	movw	r0, #33332	; 0x8234
40004630:	f2cd 0001 	movt	r0, #53249	; 0xd001
40004634:	f7ff fd3a 	bl	400040ac <MV_MEMIO_LE32_READ>
40004638:	6038      	str	r0, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:378
	return (((sarMsb & 0x100000) >> 17) | ((sar & 0xe00000) >> 21));
4000463a:	683b      	ldr	r3, [r7, #0]
4000463c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
40004640:	ea4f 4353 	mov.w	r3, r3, lsr #17
40004644:	b2da      	uxtb	r2, r3
40004646:	687b      	ldr	r3, [r7, #4]
40004648:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
4000464c:	ea4f 5353 	mov.w	r3, r3, lsr #21
40004650:	b2db      	uxtb	r3, r3
40004652:	4313      	orrs	r3, r2
40004654:	b2db      	uxtb	r3, r3
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:379
}
40004656:	4618      	mov	r0, r3
40004658:	f107 0708 	add.w	r7, r7, #8
4000465c:	46bd      	mov	sp, r7
4000465e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40004662:	4770      	bx	lr

40004664 <get_serdesLineCfg>:
get_serdesLineCfg():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:383

/*********************************************************************/
MV_U32 get_serdesLineCfg(MV_U32 serdesLineNum,MV_BIN_SERDES_CFG *pSerdesInfo) 
{
40004664:	b480      	push	{r7}
40004666:	b083      	sub	sp, #12
40004668:	af00      	add	r7, sp, #0
4000466a:	6078      	str	r0, [r7, #4]
4000466c:	6039      	str	r1, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:384
	if (serdesLineNum < 8)
4000466e:	687b      	ldr	r3, [r7, #4]
40004670:	2b07      	cmp	r3, #7
40004672:	d809      	bhi.n	40004688 <get_serdesLineCfg+0x24>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:385
		return (pSerdesInfo->serdesLine0_7 >> (serdesLineNum << 2)) & 0xF;
40004674:	683b      	ldr	r3, [r7, #0]
40004676:	685a      	ldr	r2, [r3, #4]
40004678:	687b      	ldr	r3, [r7, #4]
4000467a:	ea4f 0383 	mov.w	r3, r3, lsl #2
4000467e:	fa22 f303 	lsr.w	r3, r2, r3
40004682:	f003 030f 	and.w	r3, r3, #15
40004686:	e00a      	b.n	4000469e <get_serdesLineCfg+0x3a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:387
	else
		return (pSerdesInfo->serdesLine8_15 >> ((serdesLineNum - 8) << 2)) & 0xF;
40004688:	683b      	ldr	r3, [r7, #0]
4000468a:	689a      	ldr	r2, [r3, #8]
4000468c:	687b      	ldr	r3, [r7, #4]
4000468e:	f1a3 0308 	sub.w	r3, r3, #8
40004692:	ea4f 0383 	mov.w	r3, r3, lsl #2
40004696:	fa22 f303 	lsr.w	r3, r2, r3
4000469a:	f003 030f 	and.w	r3, r3, #15
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:388
}
4000469e:	4618      	mov	r0, r3
400046a0:	f107 070c 	add.w	r7, r7, #12
400046a4:	46bd      	mov	sp, r7
400046a6:	bc80      	pop	{r7}
400046a8:	4770      	bx	lr
400046aa:	bf00      	nop

400046ac <mvCtrlHighSpeedSerdesPhyConfig>:
mvCtrlHighSpeedSerdesPhyConfig():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:391
/*********************************************************************/
MV_STATUS mvCtrlHighSpeedSerdesPhyConfig(MV_VOID)
{
400046ac:	b590      	push	{r4, r7, lr}
400046ae:	f2ad 5dd4 	subw	sp, sp, #1492	; 0x5d4
400046b2:	af02      	add	r7, sp, #8
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:392
	MV_STATUS	status = MV_OK;
400046b4:	f04f 0300 	mov.w	r3, #0
400046b8:	f8c7 35c4 	str.w	r3, [r7, #1476]	; 0x5c4
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:397
	MV_U32		serdesLineCfg;
	MV_U8		serdesLineNum;
	MV_U32		regAddr[16][11], regVal[16][11]; /* addr/value for each line @ every setup step */
	MV_U8		pexUnit, pexLineNum;
	MV_U8   	sgmiiPort = 0;
400046bc:	f04f 0300 	mov.w	r3, #0
400046c0:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:407
	MV_U8 		satr11;
	MV_U8   	sataPort;
	MV_U8		freq;
	MV_U8		device_rev;
	MV_U32		rxHighImpedanceMode;
	MV_U32 boardId = mvBoardIdGet();
400046c4:	f7ff fd00 	bl	400040c8 <mvBoardIdGet>
400046c8:	f8c7 05a8 	str.w	r0, [r7, #1448]	; 0x5a8
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:408
	maxSerdesLines = mvCtrlSerdesMaxLinesGet();
400046cc:	f7ff ff34 	bl	40004538 <mvCtrlSerdesMaxLinesGet>
400046d0:	4603      	mov	r3, r0
400046d2:	f887 35a7 	strb.w	r3, [r7, #1447]	; 0x5a7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:413

	MV_TWSI_ADDR slave;

	/* TWSI init */
	slave.type = ADDR7_BIT;
400046d6:	f107 0304 	add.w	r3, r7, #4
400046da:	f04f 0200 	mov.w	r2, #0
400046de:	711a      	strb	r2, [r3, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:414
	slave.address = 0;
400046e0:	f107 0304 	add.w	r3, r7, #4
400046e4:	f04f 0200 	mov.w	r2, #0
400046e8:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:415
	mvTwsiInit(0, CONFIG_SYS_I2C_SPEED, CONFIG_SYS_TCLK, &slave, 0);
400046ea:	f107 0304 	add.w	r3, r7, #4
400046ee:	f04f 0200 	mov.w	r2, #0
400046f2:	9200      	str	r2, [sp, #0]
400046f4:	f04f 0000 	mov.w	r0, #0
400046f8:	f248 61a0 	movw	r1, #34464	; 0x86a0
400046fc:	f2c0 0101 	movt	r1, #1
40004700:	f44f 4242 	mov.w	r2, #49664	; 0xc200
40004704:	f6c0 32eb 	movt	r2, #3051	; 0xbeb
40004708:	f002 fa42 	bl	40006b90 <mvTwsiInit>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:416
	if (maxSerdesLines == 0)
4000470c:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40004710:	2b00      	cmp	r3, #0
40004712:	d103      	bne.n	4000471c <mvCtrlHighSpeedSerdesPhyConfig+0x70>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:417
		return MV_OK;
40004714:	f04f 0300 	mov.w	r3, #0
40004718:	f001 bf53 	b.w	400065c2 <mvCtrlHighSpeedSerdesPhyConfig+0x1f16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:420


	switch (boardId) {
4000471c:	f8d7 35a8 	ldr.w	r3, [r7, #1448]	; 0x5a8
40004720:	2b0a      	cmp	r3, #10
40004722:	d84d      	bhi.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
40004724:	a002      	add	r0, pc, #8	; (adr r0, 40004730 <mvCtrlHighSpeedSerdesPhyConfig+0x84>)
40004726:	f850 1023 	ldr.w	r1, [r0, r3, lsl #2]
4000472a:	4408      	add	r0, r1
4000472c:	4700      	bx	r0
4000472e:	bf00      	nop
40004730:	0000002d 	andeq	r0, r0, sp, lsr #32
40004734:	00000041 	andeq	r0, r0, r1, asr #32
40004738:	00000041 	andeq	r0, r0, r1, asr #32
4000473c:	0000004b 	andeq	r0, r0, fp, asr #32
40004740:	00000055 	andeq	r0, r0, r5, asr r0
40004744:	00000069 	andeq	r0, r0, r9, rrx
40004748:	00000073 	andeq	r0, r0, r3, ror r0
4000474c:	0000007d 	andeq	r0, r0, sp, ror r0
40004750:	00000041 	andeq	r0, r0, r1, asr #32
40004754:	00000069 	andeq	r0, r0, r9, rrx
40004758:	00000087 	andeq	r0, r0, r7, lsl #1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:422
	case DB_88F78XX0_BP_ID:
		satr11 = mvBoardTwsiSatRGet(1, 1);
4000475c:	f04f 0001 	mov.w	r0, #1
40004760:	f04f 0101 	mov.w	r1, #1
40004764:	f7ff fce8 	bl	40004138 <mvBoardTwsiSatRGet>
40004768:	4603      	mov	r3, r0
4000476a:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:423
		break;
4000476e:	e027      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:427
	case RD_78460_SERVER_ID:
	case RD_78460_SERVER_REV2_ID:
	case DB_78X60_PCAC_ID:
		satr11 = (0x1 << 1) | 1;
40004770:	f04f 0303 	mov.w	r3, #3
40004774:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:428
		break;
40004778:	e022      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:430
	case FPGA_88F78XX0_ID:
		satr11 = (0x0 << 1) | 1;
4000477a:	f04f 0301 	mov.w	r3, #1
4000477e:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:431
		break;
40004782:	e01d      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:433
	case DB_88F78XX0_BP_REV2_ID:
		satr11 = mvBoardTwsiSatRGet(1, 1);
40004784:	f04f 0001 	mov.w	r0, #1
40004788:	f04f 0101 	mov.w	r1, #1
4000478c:	f7ff fcd4 	bl	40004138 <mvBoardTwsiSatRGet>
40004790:	4603      	mov	r3, r0
40004792:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:434
		break;
40004796:	e013      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:437
	case DB_784MP_GP_ID:
	case RD_78460_NAS_ID:
		satr11 = (0x0 << 1) | 1;
40004798:	f04f 0301 	mov.w	r3, #1
4000479c:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:438
		break;
400047a0:	e00e      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:440
	case DB_78X60_AMC_ID:
		satr11 = (0x1 << 1) | 1;
400047a2:	f04f 0303 	mov.w	r3, #3
400047a6:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:441
		break;
400047aa:	e009      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:443
	case DB_78X60_PCAC_REV2_ID:
		satr11 = (0x1 << 1) | 1;
400047ac:	f04f 0303 	mov.w	r3, #3
400047b0:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:444
		break;
400047b4:	e004      	b.n	400047c0 <mvCtrlHighSpeedSerdesPhyConfig+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:446
	case RD_78460_CUSTOMER_ID:
		satr11 = (0x1 << 1) | 1;
400047b6:	f04f 0303 	mov.w	r3, #3
400047ba:	f887 35b7 	strb.w	r3, [r7, #1463]	; 0x5b7
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:447
		break;
400047be:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:450
	}

	if ((MV_8)MV_ERROR == (MV_8)satr11)
400047c0:	f897 35b7 	ldrb.w	r3, [r7, #1463]	; 0x5b7
400047c4:	2bff      	cmp	r3, #255	; 0xff
400047c6:	d103      	bne.n	400047d0 <mvCtrlHighSpeedSerdesPhyConfig+0x124>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:451
		return MV_ERROR;
400047c8:	f04f 33ff 	mov.w	r3, #4294967295
400047cc:	f001 bef9 	b.w	400065c2 <mvCtrlHighSpeedSerdesPhyConfig+0x1f16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:453

	mvBoardModulesScan();
400047d0:	f7ff fcf8 	bl	400041c4 <mvBoardModulesScan>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:454
	memset(regAddr, 0, sizeof(regAddr));
400047d4:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
400047d8:	4618      	mov	r0, r3
400047da:	f04f 0100 	mov.w	r1, #0
400047de:	f44f 7230 	mov.w	r2, #704	; 0x2c0
400047e2:	f002 ff1b 	bl	4000761c <memset>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:455
	memset(regVal,  0, sizeof(regVal));
400047e6:	f107 030c 	add.w	r3, r7, #12
400047ea:	4618      	mov	r0, r3
400047ec:	f04f 0100 	mov.w	r1, #0
400047f0:	f44f 7230 	mov.w	r2, #704	; 0x2c0
400047f4:	f002 ff12 	bl	4000761c <memset>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:457

	mvUartInit();
400047f8:	f001 fefe 	bl	400065f8 <mvUartInit>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:460

	/* Check if DRAM is already initialized  */
	if (MV_REG_READ(REG_BOOTROM_ROUTINE_ADDR) & (1 << REG_BOOTROM_ROUTINE_DRAM_INIT_OFFS)) {
400047fc:	f248 20d0 	movw	r0, #33488	; 0x82d0
40004800:	f2cd 0001 	movt	r0, #53249	; 0xd001
40004804:	f7ff fc52 	bl	400040ac <MV_MEMIO_LE32_READ>
40004808:	4603      	mov	r3, r0
4000480a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
4000480e:	2b00      	cmp	r3, #0
40004810:	d009      	beq.n	40004826 <mvCtrlHighSpeedSerdesPhyConfig+0x17a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:461
		DEBUG_INIT_S("High speed PHY - Ver 1.6.0 - 2nd boot - Skip \n");
40004812:	f8df 3d14 	ldr.w	r3, [pc, #3348]	; 40005528 <mvCtrlHighSpeedSerdesPhyConfig+0xe7c>
40004816:	447b      	add	r3, pc
40004818:	4618      	mov	r0, r3
4000481a:	f001 ff6d 	bl	400066f8 <putstring>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:462
		return MV_OK;
4000481e:	f04f 0300 	mov.w	r3, #0
40004822:	f001 bece 	b.w	400065c2 <mvCtrlHighSpeedSerdesPhyConfig+0x1f16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:464
	}
	DEBUG_INIT_S("High speed PHY - Ver 1.6.0 (COM-PHY-V20) \n");
40004826:	f8df 3d04 	ldr.w	r3, [pc, #3332]	; 4000552c <mvCtrlHighSpeedSerdesPhyConfig+0xe80>
4000482a:	447b      	add	r3, pc
4000482c:	4618      	mov	r0, r3
4000482e:	f001 ff63 	bl	400066f8 <putstring>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:468

/**********************************************************************************/
	/*   AVS :  disable AVS for frequency less than 1333*/
	freq = mvBoardCpuFreqGet();
40004832:	f7ff fef1 	bl	40004618 <mvBoardCpuFreqGet>
40004836:	4603      	mov	r3, r0
40004838:	f887 35a6 	strb.w	r3, [r7, #1446]	; 0x5a6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:469
	device_rev = mvCtrlRevGet();
4000483c:	f7ff fc68 	bl	40004110 <mvCtrlRevGet>
40004840:	4603      	mov	r3, r0
40004842:	f887 35a5 	strb.w	r3, [r7, #1445]	; 0x5a5
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:472

/* 	DEBUG_INIT_C("\n\n  **** Read SatR freq: ", freq,2); */
	if (device_rev == 2) {/*   for B0 only */
40004846:	f897 35a5 	ldrb.w	r3, [r7, #1445]	; 0x5a5
4000484a:	2b02      	cmp	r3, #2
4000484c:	d138      	bne.n	400048c0 <mvCtrlHighSpeedSerdesPhyConfig+0x214>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:473
		tmp = MV_REG_READ(AVS_CONTROL2_REG);
4000484e:	f640 0068 	movw	r0, #2152	; 0x868
40004852:	f2cd 0002 	movt	r0, #53250	; 0xd002
40004856:	f7ff fc29 	bl	400040ac <MV_MEMIO_LE32_READ>
4000485a:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:475
		DEBUG_RD_REG(AVS_CONTROL2_REG, tmp);
		if ((0x4 == freq) || (0xB == freq)){
4000485e:	f897 35a6 	ldrb.w	r3, [r7, #1446]	; 0x5a6
40004862:	2b04      	cmp	r3, #4
40004864:	d003      	beq.n	4000486e <mvCtrlHighSpeedSerdesPhyConfig+0x1c2>
40004866:	f897 35a6 	ldrb.w	r3, [r7, #1446]	; 0x5a6
4000486a:	2b0b      	cmp	r3, #11
4000486c:	d11b      	bne.n	400048a6 <mvCtrlHighSpeedSerdesPhyConfig+0x1fa>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:477
			MV_U32 tmp2;
			tmp2 = MV_REG_READ(AVS_LOW_VDD_LIMIT);
4000486e:	f44f 6006 	mov.w	r0, #2144	; 0x860
40004872:	f2cd 0002 	movt	r0, #53250	; 0xd002
40004876:	f7ff fc19 	bl	400040ac <MV_MEMIO_LE32_READ>
4000487a:	f8c7 05a0 	str.w	r0, [r7, #1440]	; 0x5a0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:479
			DEBUG_RD_REG(AVS_LOW_VDD_LIMIT, tmp2);
			tmp2 |= 0x0f0;
4000487e:	f8d7 35a0 	ldr.w	r3, [r7, #1440]	; 0x5a0
40004882:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
40004886:	f8c7 35a0 	str.w	r3, [r7, #1440]	; 0x5a0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:480
			MV_REG_WRITE(AVS_LOW_VDD_LIMIT , tmp2);
4000488a:	f44f 6306 	mov.w	r3, #2144	; 0x860
4000488e:	f2cd 0302 	movt	r3, #53250	; 0xd002
40004892:	f8d7 25a0 	ldr.w	r2, [r7, #1440]	; 0x5a0
40004896:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:482
			DEBUG_WR_REG(AVS_LOW_VDD_LIMIT , tmp2);
			tmp |= BIT9;
40004898:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
4000489c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
400048a0:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:475

/* 	DEBUG_INIT_C("\n\n  **** Read SatR freq: ", freq,2); */
	if (device_rev == 2) {/*   for B0 only */
		tmp = MV_REG_READ(AVS_CONTROL2_REG);
		DEBUG_RD_REG(AVS_CONTROL2_REG, tmp);
		if ((0x4 == freq) || (0xB == freq)){
400048a4:	e005      	b.n	400048b2 <mvCtrlHighSpeedSerdesPhyConfig+0x206>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:485
			MV_REG_WRITE(AVS_LOW_VDD_LIMIT , tmp2);
			DEBUG_WR_REG(AVS_LOW_VDD_LIMIT , tmp2);
			tmp |= BIT9;
		}
		else
			tmp &= ~BIT9;
400048a6:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400048aa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
400048ae:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:486
		MV_REG_WRITE(AVS_CONTROL2_REG , tmp);
400048b2:	f640 0368 	movw	r3, #2152	; 0x868
400048b6:	f2cd 0302 	movt	r3, #53250	; 0xd002
400048ba:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
400048be:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:490
		DEBUG_WR_REG(AVS_CONTROL2_REG , tmp);
	}
/**********************************************************************************/
	pSerdesInfo = mvBoardSerdesCfgGet(mvBoardPexModeGet(satr11));
400048c0:	f897 35b7 	ldrb.w	r3, [r7, #1463]	; 0x5b7
400048c4:	f003 0306 	and.w	r3, r3, #6
400048c8:	ea4f 0363 	mov.w	r3, r3, asr #1
400048cc:	b2db      	uxtb	r3, r3
400048ce:	4618      	mov	r0, r3
400048d0:	f7ff fd50 	bl	40004374 <mvBoardSerdesCfgGet>
400048d4:	f8c7 059c 	str.w	r0, [r7, #1436]	; 0x59c
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:491
	if (pSerdesInfo == NULL){
400048d8:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400048dc:	2b00      	cmp	r3, #0
400048de:	d109      	bne.n	400048f4 <mvCtrlHighSpeedSerdesPhyConfig+0x248>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:492
		DEBUG_INIT_S("Hight speed PHY Error #1\n");
400048e0:	f8df 3c4c 	ldr.w	r3, [pc, #3148]	; 40005530 <mvCtrlHighSpeedSerdesPhyConfig+0xe84>
400048e4:	447b      	add	r3, pc
400048e6:	4618      	mov	r0, r3
400048e8:	f001 ff06 	bl	400066f8 <putstring>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:493
		return MV_ERROR;
400048ec:	f04f 33ff 	mov.w	r3, #4294967295
400048f0:	f001 be67 	b.w	400065c2 <mvCtrlHighSpeedSerdesPhyConfig+0x1f16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:498
	}
	/* STEP -1 [PEX-Only] First phase of PEX-PIPE Configuration:*/
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 1: First phase of PEX-PIPE Configuration\n");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
400048f4:	f04f 0300 	mov.w	r3, #0
400048f8:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
400048fc:	e087      	b.n	40004a0e <mvCtrlHighSpeedSerdesPhyConfig+0x362>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:499
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
400048fe:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004902:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004906:	18d3      	adds	r3, r2, r3
40004908:	7b1b      	ldrb	r3, [r3, #12]
4000490a:	2b00      	cmp	r3, #0
4000490c:	d078      	beq.n	40004a00 <mvCtrlHighSpeedSerdesPhyConfig+0x354>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:502
			continue;

		MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), (0xC1 << 16) | 0x25);		/* 1.	GLOB_CLK_CTRL Reset and Clock Control */
4000490e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004912:	f003 0301 	and.w	r3, r3, #1
40004916:	f103 0301 	add.w	r3, r3, #1
4000491a:	ea4f 1243 	mov.w	r2, r3, lsl #5
4000491e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004922:	ea4f 0353 	mov.w	r3, r3, lsr #1
40004926:	b2db      	uxtb	r3, r3
40004928:	18d3      	adds	r3, r2, r3
4000492a:	ea4f 3343 	mov.w	r3, r3, lsl #13
4000492e:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
40004932:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004936:	461a      	mov	r2, r3
40004938:	f04f 0325 	mov.w	r3, #37	; 0x25
4000493c:	f2c0 03c1 	movt	r3, #193	; 0xc1
40004940:	6013      	str	r3, [r2, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:504
		DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), (0xC1 << 16) | 0x25);		/* 1.	GLOB_CLK_CTRL Reset and Clock Control */
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) {						/* 2.	GLOB_TEST_CTRL Test Mode Control */
40004942:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004946:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000494a:	18d3      	adds	r3, r2, r3
4000494c:	7b1b      	ldrb	r3, [r3, #12]
4000494e:	2b02      	cmp	r3, #2
40004950:	d119      	bne.n	40004986 <mvCtrlHighSpeedSerdesPhyConfig+0x2da>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:505
			MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), (0xC2 << 16) | 0x200);
40004952:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004956:	f003 0301 	and.w	r3, r3, #1
4000495a:	f103 0301 	add.w	r3, r3, #1
4000495e:	ea4f 1243 	mov.w	r2, r3, lsl #5
40004962:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004966:	ea4f 0353 	mov.w	r3, r3, lsr #1
4000496a:	b2db      	uxtb	r3, r3
4000496c:	18d3      	adds	r3, r2, r3
4000496e:	ea4f 3343 	mov.w	r3, r3, lsl #13
40004972:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
40004976:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000497a:	461a      	mov	r2, r3
4000497c:	f44f 7300 	mov.w	r3, #512	; 0x200
40004980:	f2c0 03c2 	movt	r3, #194	; 0xc2
40004984:	6013      	str	r3, [r2, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:509
			DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), (0xC2 << 16) | 0x200);
		}

		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1) {						/* 3.	GLOB_CLK_SRC_LO Clock Source Low */
40004986:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000498a:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000498e:	18d3      	adds	r3, r2, r3
40004990:	7b1b      	ldrb	r3, [r3, #12]
40004992:	2b01      	cmp	r3, #1
40004994:	d119      	bne.n	400049ca <mvCtrlHighSpeedSerdesPhyConfig+0x31e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:510
			MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), (0xC3 << 16) | 0x0F);
40004996:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000499a:	f003 0301 	and.w	r3, r3, #1
4000499e:	f103 0301 	add.w	r3, r3, #1
400049a2:	ea4f 1243 	mov.w	r2, r3, lsl #5
400049a6:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400049aa:	ea4f 0353 	mov.w	r3, r3, lsr #1
400049ae:	b2db      	uxtb	r3, r3
400049b0:	18d3      	adds	r3, r2, r3
400049b2:	ea4f 3343 	mov.w	r3, r3, lsl #13
400049b6:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
400049ba:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400049be:	461a      	mov	r2, r3
400049c0:	f04f 030f 	mov.w	r3, #15
400049c4:	f2c0 03c3 	movt	r3, #195	; 0xc3
400049c8:	6013      	str	r3, [r2, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:514
			DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), (0xC3 << 16) | 0x0F);
		}

		MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), (0xC5 << 16) | 0x11F);
400049ca:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400049ce:	f003 0301 	and.w	r3, r3, #1
400049d2:	f103 0301 	add.w	r3, r3, #1
400049d6:	ea4f 1243 	mov.w	r2, r3, lsl #5
400049da:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400049de:	ea4f 0353 	mov.w	r3, r3, lsr #1
400049e2:	b2db      	uxtb	r3, r3
400049e4:	18d3      	adds	r3, r2, r3
400049e6:	ea4f 3343 	mov.w	r3, r3, lsl #13
400049ea:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
400049ee:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400049f2:	461a      	mov	r2, r3
400049f4:	f240 131f 	movw	r3, #287	; 0x11f
400049f8:	f2c0 03c5 	movt	r3, #197	; 0xc5
400049fc:	6013      	str	r3, [r2, #0]
400049fe:	e000      	b.n	40004a02 <mvCtrlHighSpeedSerdesPhyConfig+0x356>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:500
	/* STEP -1 [PEX-Only] First phase of PEX-PIPE Configuration:*/
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 1: First phase of PEX-PIPE Configuration\n");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
			continue;
40004a00:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:498
		return MV_ERROR;
	}
	/* STEP -1 [PEX-Only] First phase of PEX-PIPE Configuration:*/
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 1: First phase of PEX-PIPE Configuration\n");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40004a02:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004a06:	f103 0301 	add.w	r3, r3, #1
40004a0a:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
40004a0e:	f897 45c2 	ldrb.w	r4, [r7, #1474]	; 0x5c2
40004a12:	f7ff fdc9 	bl	400045a8 <mvCtrlPexMaxUnitGet>
40004a16:	4603      	mov	r3, r0
40004a18:	429c      	cmp	r4, r3
40004a1a:	f4ff af70 	bcc.w	400048fe <mvCtrlHighSpeedSerdesPhyConfig+0x252>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:520
		DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), (0xC5 << 16) | 0x11F);
	}

	/*  2	Configure the desire PIN_PHY_GEN and do power down to the PU_PLL,PU_RX,PU_TX. (bits[12:5]) */
	DEBUG_INIT_FULL_S("Step 2: Configure the desire PIN_PHY_GEN\n");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40004a1e:	f04f 0300 	mov.w	r3, #0
40004a22:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40004a26:	e19a      	b.n	40004d5e <mvCtrlHighSpeedSerdesPhyConfig+0x6b2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:521
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40004a28:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004a2c:	4618      	mov	r0, r3
40004a2e:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
40004a32:	f7ff fe17 	bl	40004664 <get_serdesLineCfg>
40004a36:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:522
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED]) 
40004a3a:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004a3e:	f8df 3af4 	ldr.w	r3, [pc, #2804]	; 40005534 <mvCtrlHighSpeedSerdesPhyConfig+0xe88>
40004a42:	447b      	add	r3, pc
40004a44:	4619      	mov	r1, r3
40004a46:	4613      	mov	r3, r2
40004a48:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004a4c:	189b      	adds	r3, r3, r2
40004a4e:	18cb      	adds	r3, r1, r3
40004a50:	781b      	ldrb	r3, [r3, #0]
40004a52:	461a      	mov	r2, r3
40004a54:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004a58:	429a      	cmp	r2, r3
40004a5a:	f000 8175 	beq.w	40004d48 <mvCtrlHighSpeedSerdesPhyConfig+0x69c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:524
			continue;
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX])
40004a5e:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004a62:	f8df 3ad4 	ldr.w	r3, [pc, #2772]	; 40005538 <mvCtrlHighSpeedSerdesPhyConfig+0xe8c>
40004a66:	447b      	add	r3, pc
40004a68:	4619      	mov	r1, r3
40004a6a:	4613      	mov	r3, r2
40004a6c:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004a70:	189b      	adds	r3, r3, r2
40004a72:	18cb      	adds	r3, r1, r3
40004a74:	f103 0301 	add.w	r3, r3, #1
40004a78:	781b      	ldrb	r3, [r3, #0]
40004a7a:	461a      	mov	r2, r3
40004a7c:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004a80:	429a      	cmp	r2, r3
40004a82:	f000 8163 	beq.w	40004d4c <mvCtrlHighSpeedSerdesPhyConfig+0x6a0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:526
			continue;
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SATA]) {
40004a86:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004a8a:	f8df 3ab0 	ldr.w	r3, [pc, #2736]	; 4000553c <mvCtrlHighSpeedSerdesPhyConfig+0xe90>
40004a8e:	447b      	add	r3, pc
40004a90:	4619      	mov	r1, r3
40004a92:	4613      	mov	r3, r2
40004a94:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004a98:	189b      	adds	r3, r3, r2
40004a9a:	18cb      	adds	r3, r1, r3
40004a9c:	f103 0302 	add.w	r3, r3, #2
40004aa0:	781b      	ldrb	r3, [r3, #0]
40004aa2:	461a      	mov	r2, r3
40004aa4:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004aa8:	429a      	cmp	r2, r3
40004aaa:	d162      	bne.n	40004b72 <mvCtrlHighSpeedSerdesPhyConfig+0x4c6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:527
			switch (serdesLineNum) {
40004aac:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004ab0:	2b05      	cmp	r3, #5
40004ab2:	d008      	beq.n	40004ac6 <mvCtrlHighSpeedSerdesPhyConfig+0x41a>
40004ab4:	2b06      	cmp	r3, #6
40004ab6:	d001      	beq.n	40004abc <mvCtrlHighSpeedSerdesPhyConfig+0x410>
40004ab8:	2b04      	cmp	r3, #4
40004aba:	d109      	bne.n	40004ad0 <mvCtrlHighSpeedSerdesPhyConfig+0x424>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:530
			case 4:
			case 6:
				sataPort = 0;
40004abc:	f04f 0300 	mov.w	r3, #0
40004ac0:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:531
				break;
40004ac4:	e01b      	b.n	40004afe <mvCtrlHighSpeedSerdesPhyConfig+0x452>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:533
			case 5:
				sataPort = 1;
40004ac6:	f04f 0301 	mov.w	r3, #1
40004aca:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:534
				break;
40004ace:	e016      	b.n	40004afe <mvCtrlHighSpeedSerdesPhyConfig+0x452>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:536
			default:
				DEBUG_INIT_C ("SATA port error for serdes line: ", serdesLineNum,2);
40004ad0:	f8df 3a6c 	ldr.w	r3, [pc, #2668]	; 40005540 <mvCtrlHighSpeedSerdesPhyConfig+0xe94>
40004ad4:	447b      	add	r3, pc
40004ad6:	4618      	mov	r0, r3
40004ad8:	f001 fe0e 	bl	400066f8 <putstring>
40004adc:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004ae0:	4618      	mov	r0, r3
40004ae2:	f04f 0102 	mov.w	r1, #2
40004ae6:	f001 fe27 	bl	40006738 <putdata>
40004aea:	f8df 3a58 	ldr.w	r3, [pc, #2648]	; 40005544 <mvCtrlHighSpeedSerdesPhyConfig+0xe98>
40004aee:	447b      	add	r3, pc
40004af0:	4618      	mov	r0, r3
40004af2:	f001 fe01 	bl	400066f8 <putstring>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:537
				return MV_ERROR;
40004af6:	f04f 33ff 	mov.w	r3, #4294967295
40004afa:	f001 bd62 	b.w	400065c2 <mvCtrlHighSpeedSerdesPhyConfig+0x1f16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:539
			}
			tmp = MV_REG_READ(SATA_LP_PHY_EXT_CTRL_REG(sataPort));
40004afe:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40004b02:	f103 0351 	add.w	r3, r3, #81	; 0x51
40004b06:	ea4f 3343 	mov.w	r3, r3, lsl #13
40004b0a:	f103 0358 	add.w	r3, r3, #88	; 0x58
40004b0e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004b12:	4618      	mov	r0, r3
40004b14:	f7ff faca 	bl	400040ac <MV_MEMIO_LE32_READ>
40004b18:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:541
			DEBUG_RD_REG(SATA_LP_PHY_EXT_CTRL_REG(sataPort), tmp);
			tmp &= ~ ((0x1ff<<5) | 0x7);
40004b1c:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40004b20:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
40004b24:	f023 0327 	bic.w	r3, r3, #39	; 0x27
40004b28:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:542
			tmp |= ((pSerdesInfo->busSpeed & (1 << serdesLineNum)) != 0) ? (0x11 << 5) : 0x0; 
40004b2c:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40004b30:	691a      	ldr	r2, [r3, #16]
40004b32:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004b36:	f04f 0101 	mov.w	r1, #1
40004b3a:	fa01 f303 	lsl.w	r3, r1, r3
40004b3e:	4013      	ands	r3, r2
40004b40:	2b00      	cmp	r3, #0
40004b42:	d002      	beq.n	40004b4a <mvCtrlHighSpeedSerdesPhyConfig+0x49e>
40004b44:	f44f 7308 	mov.w	r3, #544	; 0x220
40004b48:	e001      	b.n	40004b4e <mvCtrlHighSpeedSerdesPhyConfig+0x4a2>
40004b4a:	f04f 0300 	mov.w	r3, #0
40004b4e:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004b52:	4313      	orrs	r3, r2
40004b54:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:544

			MV_REG_WRITE(SATA_LP_PHY_EXT_CTRL_REG(sataPort) , tmp);
40004b58:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40004b5c:	f103 0351 	add.w	r3, r3, #81	; 0x51
40004b60:	ea4f 3343 	mov.w	r3, r3, lsl #13
40004b64:	f103 0358 	add.w	r3, r3, #88	; 0x58
40004b68:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004b6c:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004b70:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:547
			DEBUG_WR_REG(SATA_LP_PHY_EXT_CTRL_REG(sataPort) , tmp);
		}
        if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
40004b72:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004b76:	f8df 39d0 	ldr.w	r3, [pc, #2512]	; 40005548 <mvCtrlHighSpeedSerdesPhyConfig+0xe9c>
40004b7a:	447b      	add	r3, pc
40004b7c:	4619      	mov	r1, r3
40004b7e:	4613      	mov	r3, r2
40004b80:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004b84:	189b      	adds	r3, r3, r2
40004b86:	18cb      	adds	r3, r1, r3
40004b88:	f103 0307 	add.w	r3, r3, #7
40004b8c:	781b      	ldrb	r3, [r3, #0]
40004b8e:	461a      	mov	r2, r3
40004b90:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004b94:	429a      	cmp	r2, r3
40004b96:	d11d      	bne.n	40004bd4 <mvCtrlHighSpeedSerdesPhyConfig+0x528>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:549
				/* 4)	Configure the desire PIN_PHY_GEN and do power down to the PU_PLL,PU_RX,PU_TX. (bits[12:5]) */
				tmp = MV_REG_READ(SGMII_SERDES_CFG_REG(0));
40004b98:	f242 40a0 	movw	r0, #9376	; 0x24a0
40004b9c:	f2cd 0007 	movt	r0, #53255	; 0xd007
40004ba0:	f7ff fa84 	bl	400040ac <MV_MEMIO_LE32_READ>
40004ba4:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:551
				DEBUG_RD_REG(SGMII_SERDES_CFG_REG(0), tmp);
				tmp &= ~ ((0x1ff<<5) | 0x7);
40004ba8:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40004bac:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
40004bb0:	f023 0327 	bic.w	r3, r3, #39	; 0x27
40004bb4:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:552
				tmp |= 0x660;
40004bb8:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40004bbc:	f443 63cc 	orr.w	r3, r3, #1632	; 0x660
40004bc0:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:553
				MV_REG_WRITE(SGMII_SERDES_CFG_REG(0), tmp);
40004bc4:	f242 43a0 	movw	r3, #9376	; 0x24a0
40004bc8:	f2cd 0307 	movt	r3, #53255	; 0xd007
40004bcc:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004bd0:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:555
				DEBUG_WR_REG(SGMII_SERDES_CFG_REG(0), tmp);
				continue;
40004bd2:	e0be      	b.n	40004d52 <mvCtrlHighSpeedSerdesPhyConfig+0x6a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:557
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII0]) 
40004bd4:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004bd8:	f8df 3970 	ldr.w	r3, [pc, #2416]	; 4000554c <mvCtrlHighSpeedSerdesPhyConfig+0xea0>
40004bdc:	447b      	add	r3, pc
40004bde:	4619      	mov	r1, r3
40004be0:	4613      	mov	r3, r2
40004be2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004be6:	189b      	adds	r3, r3, r2
40004be8:	18cb      	adds	r3, r1, r3
40004bea:	f103 0303 	add.w	r3, r3, #3
40004bee:	781b      	ldrb	r3, [r3, #0]
40004bf0:	461a      	mov	r2, r3
40004bf2:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004bf6:	429a      	cmp	r2, r3
40004bf8:	d104      	bne.n	40004c04 <mvCtrlHighSpeedSerdesPhyConfig+0x558>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:558
				sgmiiPort = 0;
40004bfa:	f04f 0300 	mov.w	r3, #0
40004bfe:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40004c02:	e046      	b.n	40004c92 <mvCtrlHighSpeedSerdesPhyConfig+0x5e6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:559
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII1])
40004c04:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004c08:	f8df 3944 	ldr.w	r3, [pc, #2372]	; 40005550 <mvCtrlHighSpeedSerdesPhyConfig+0xea4>
40004c0c:	447b      	add	r3, pc
40004c0e:	4619      	mov	r1, r3
40004c10:	4613      	mov	r3, r2
40004c12:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004c16:	189b      	adds	r3, r3, r2
40004c18:	18cb      	adds	r3, r1, r3
40004c1a:	f103 0304 	add.w	r3, r3, #4
40004c1e:	781b      	ldrb	r3, [r3, #0]
40004c20:	461a      	mov	r2, r3
40004c22:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004c26:	429a      	cmp	r2, r3
40004c28:	d104      	bne.n	40004c34 <mvCtrlHighSpeedSerdesPhyConfig+0x588>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:560
				sgmiiPort = 1;
40004c2a:	f04f 0301 	mov.w	r3, #1
40004c2e:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40004c32:	e02e      	b.n	40004c92 <mvCtrlHighSpeedSerdesPhyConfig+0x5e6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:561
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
40004c34:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004c38:	f8df 3918 	ldr.w	r3, [pc, #2328]	; 40005554 <mvCtrlHighSpeedSerdesPhyConfig+0xea8>
40004c3c:	447b      	add	r3, pc
40004c3e:	4619      	mov	r1, r3
40004c40:	4613      	mov	r3, r2
40004c42:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004c46:	189b      	adds	r3, r3, r2
40004c48:	18cb      	adds	r3, r1, r3
40004c4a:	f103 0305 	add.w	r3, r3, #5
40004c4e:	781b      	ldrb	r3, [r3, #0]
40004c50:	461a      	mov	r2, r3
40004c52:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004c56:	429a      	cmp	r2, r3
40004c58:	d104      	bne.n	40004c64 <mvCtrlHighSpeedSerdesPhyConfig+0x5b8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:562
				sgmiiPort = 2;
40004c5a:	f04f 0302 	mov.w	r3, #2
40004c5e:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40004c62:	e016      	b.n	40004c92 <mvCtrlHighSpeedSerdesPhyConfig+0x5e6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:563
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
40004c64:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004c68:	f8df 38ec 	ldr.w	r3, [pc, #2284]	; 40005558 <mvCtrlHighSpeedSerdesPhyConfig+0xeac>
40004c6c:	447b      	add	r3, pc
40004c6e:	4619      	mov	r1, r3
40004c70:	4613      	mov	r3, r2
40004c72:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004c76:	189b      	adds	r3, r3, r2
40004c78:	18cb      	adds	r3, r1, r3
40004c7a:	f103 0306 	add.w	r3, r3, #6
40004c7e:	781b      	ldrb	r3, [r3, #0]
40004c80:	461a      	mov	r2, r3
40004c82:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004c86:	429a      	cmp	r2, r3
40004c88:	d162      	bne.n	40004d50 <mvCtrlHighSpeedSerdesPhyConfig+0x6a4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:564
				sgmiiPort = 3;
40004c8a:	f04f 0303 	mov.w	r3, #3
40004c8e:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:567
		else
				continue;
			tmp = MV_REG_READ(SGMII_SERDES_CFG_REG(sgmiiPort));
40004c92:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40004c96:	ea4f 0353 	mov.w	r3, r3, lsr #1
40004c9a:	b2db      	uxtb	r3, r3
40004c9c:	461a      	mov	r2, r3
40004c9e:	4613      	mov	r3, r2
40004ca0:	ea4f 7303 	mov.w	r3, r3, lsl #28
40004ca4:	1a9b      	subs	r3, r3, r2
40004ca6:	ea4f 1303 	mov.w	r3, r3, lsl #4
40004caa:	461a      	mov	r2, r3
40004cac:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40004cb0:	f003 0301 	and.w	r3, r3, #1
40004cb4:	18d3      	adds	r3, r2, r3
40004cb6:	ea4f 3383 	mov.w	r3, r3, lsl #14
40004cba:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40004cbe:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
40004cc2:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004cc6:	4618      	mov	r0, r3
40004cc8:	f7ff f9f0 	bl	400040ac <MV_MEMIO_LE32_READ>
40004ccc:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:569
			DEBUG_RD_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
			tmp &= ~ ((0x1ff<<5) | 0x7);
40004cd0:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40004cd4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
40004cd8:	f023 0327 	bic.w	r3, r3, #39	; 0x27
40004cdc:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:570
			tmp  |= (((pSerdesInfo->busSpeed & (1 << serdesLineNum)) != 0) ? (0x88 << 5) : (0x66 << 5));
40004ce0:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40004ce4:	691a      	ldr	r2, [r3, #16]
40004ce6:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004cea:	f04f 0101 	mov.w	r1, #1
40004cee:	fa01 f303 	lsl.w	r3, r1, r3
40004cf2:	4013      	ands	r3, r2
40004cf4:	2b00      	cmp	r3, #0
40004cf6:	d002      	beq.n	40004cfe <mvCtrlHighSpeedSerdesPhyConfig+0x652>
40004cf8:	f44f 5388 	mov.w	r3, #4352	; 0x1100
40004cfc:	e001      	b.n	40004d02 <mvCtrlHighSpeedSerdesPhyConfig+0x656>
40004cfe:	f44f 634c 	mov.w	r3, #3264	; 0xcc0
40004d02:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004d06:	4313      	orrs	r3, r2
40004d08:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:571
			MV_REG_WRITE(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
40004d0c:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40004d10:	ea4f 0353 	mov.w	r3, r3, lsr #1
40004d14:	b2db      	uxtb	r3, r3
40004d16:	461a      	mov	r2, r3
40004d18:	4613      	mov	r3, r2
40004d1a:	ea4f 7303 	mov.w	r3, r3, lsl #28
40004d1e:	1a9b      	subs	r3, r3, r2
40004d20:	ea4f 1303 	mov.w	r3, r3, lsl #4
40004d24:	461a      	mov	r2, r3
40004d26:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40004d2a:	f003 0301 	and.w	r3, r3, #1
40004d2e:	18d3      	adds	r3, r2, r3
40004d30:	ea4f 3383 	mov.w	r3, r3, lsl #14
40004d34:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40004d38:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
40004d3c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004d40:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004d44:	601a      	str	r2, [r3, #0]
40004d46:	e004      	b.n	40004d52 <mvCtrlHighSpeedSerdesPhyConfig+0x6a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:523
	/*  2	Configure the desire PIN_PHY_GEN and do power down to the PU_PLL,PU_RX,PU_TX. (bits[12:5]) */
	DEBUG_INIT_FULL_S("Step 2: Configure the desire PIN_PHY_GEN\n");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED]) 
			continue;
40004d48:	bf00      	nop
40004d4a:	e002      	b.n	40004d52 <mvCtrlHighSpeedSerdesPhyConfig+0x6a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:525
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX])
			continue;
40004d4c:	bf00      	nop
40004d4e:	e000      	b.n	40004d52 <mvCtrlHighSpeedSerdesPhyConfig+0x6a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:566
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
				sgmiiPort = 2;
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
				sgmiiPort = 3;
		else
				continue;
40004d50:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:520
		DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), (0xC5 << 16) | 0x11F);
	}

	/*  2	Configure the desire PIN_PHY_GEN and do power down to the PU_PLL,PU_RX,PU_TX. (bits[12:5]) */
	DEBUG_INIT_FULL_S("Step 2: Configure the desire PIN_PHY_GEN\n");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40004d52:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004d56:	f103 0301 	add.w	r3, r3, #1
40004d5a:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40004d5e:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004d62:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40004d66:	429a      	cmp	r2, r3
40004d68:	f4ff ae5e 	bcc.w	40004a28 <mvCtrlHighSpeedSerdesPhyConfig+0x37c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:576
			MV_REG_WRITE(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
			DEBUG_WR_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
	}
	/* Step 3 - QSGMII enable */
	DEBUG_INIT_FULL_S("Step 3 QSGMII enable \n");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40004d6c:	f04f 0300 	mov.w	r3, #0
40004d70:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40004d74:	e036      	b.n	40004de4 <mvCtrlHighSpeedSerdesPhyConfig+0x738>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:577
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40004d76:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004d7a:	4618      	mov	r0, r3
40004d7c:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
40004d80:	f7ff fc70 	bl	40004664 <get_serdesLineCfg>
40004d84:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:578
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
40004d88:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004d8c:	f8df 37cc 	ldr.w	r3, [pc, #1996]	; 4000555c <mvCtrlHighSpeedSerdesPhyConfig+0xeb0>
40004d90:	447b      	add	r3, pc
40004d92:	4619      	mov	r1, r3
40004d94:	4613      	mov	r3, r2
40004d96:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004d9a:	189b      	adds	r3, r3, r2
40004d9c:	18cb      	adds	r3, r1, r3
40004d9e:	f103 0307 	add.w	r3, r3, #7
40004da2:	781b      	ldrb	r3, [r3, #0]
40004da4:	461a      	mov	r2, r3
40004da6:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004daa:	429a      	cmp	r2, r3
40004dac:	d114      	bne.n	40004dd8 <mvCtrlHighSpeedSerdesPhyConfig+0x72c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:580
			/* QSGMII Active bit set to true */
			tmp = MV_REG_READ(QSGMII_CONTROL_1_REG);
40004dae:	f248 4004 	movw	r0, #33796	; 0x8404
40004db2:	f2cd 0001 	movt	r0, #53249	; 0xd001
40004db6:	f7ff f979 	bl	400040ac <MV_MEMIO_LE32_READ>
40004dba:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:582
			DEBUG_RD_REG(QSGMII_CONTROL_1_REG, tmp );
			tmp |= BIT30;
40004dbe:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40004dc2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
40004dc6:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:583
			MV_REG_WRITE(QSGMII_CONTROL_1_REG,  tmp);
40004dca:	f248 4304 	movw	r3, #33796	; 0x8404
40004dce:	f2cd 0301 	movt	r3, #53249	; 0xd001
40004dd2:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40004dd6:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:576
			MV_REG_WRITE(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
			DEBUG_WR_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
	}
	/* Step 3 - QSGMII enable */
	DEBUG_INIT_FULL_S("Step 3 QSGMII enable \n");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40004dd8:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004ddc:	f103 0301 	add.w	r3, r3, #1
40004de0:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40004de4:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004de8:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40004dec:	429a      	cmp	r2, r3
40004dee:	d3c2      	bcc.n	40004d76 <mvCtrlHighSpeedSerdesPhyConfig+0x6ca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:591
	}

	/* Step 4 - configure SERDES MUXes */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 4: Configure SERDES MUXes \n");
	MV_REG_WRITE(SERDES_LINE_MUX_REG_0_7,  pSerdesInfo->serdesLine0_7);
40004df0:	f248 2370 	movw	r3, #33392	; 0x8270
40004df4:	f2cd 0301 	movt	r3, #53249	; 0xd001
40004df8:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004dfc:	6852      	ldr	r2, [r2, #4]
40004dfe:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:593
	DEBUG_WR_REG(SERDES_LINE_MUX_REG_0_7,  pSerdesInfo->serdesLine0_7);
	MV_REG_WRITE(SERDES_LINE_MUX_REG_8_15, pSerdesInfo->serdesLine8_15);
40004e00:	f248 2374 	movw	r3, #33396	; 0x8274
40004e04:	f2cd 0301 	movt	r3, #53249	; 0xd001
40004e08:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004e0c:	6892      	ldr	r2, [r2, #8]
40004e0e:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:598
	DEBUG_WR_REG(SERDES_LINE_MUX_REG_8_15, pSerdesInfo->serdesLine8_15);

	/* Step 5: Activate the RX High Impedance Mode  */
	DEBUG_INIT_FULL_S("Step 5: Activate the RX High Impedance Mode  \n");
	if (device_rev == 2) /*   for B0 only */
40004e10:	f897 35a5 	ldrb.w	r3, [r7, #1445]	; 0x5a5
40004e14:	2b02      	cmp	r3, #2
40004e16:	d104      	bne.n	40004e22 <mvCtrlHighSpeedSerdesPhyConfig+0x776>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:599
		rxHighImpedanceMode=0x8084;
40004e18:	f248 0384 	movw	r3, #32900	; 0x8084
40004e1c:	f8c7 35b0 	str.w	r3, [r7, #1456]	; 0x5b0
40004e20:	e003      	b.n	40004e2a <mvCtrlHighSpeedSerdesPhyConfig+0x77e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:601
	else
		rxHighImpedanceMode=0x8080;
40004e22:	f248 0380 	movw	r3, #32896	; 0x8080
40004e26:	f8c7 35b0 	str.w	r3, [r7, #1456]	; 0x5b0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:603

	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40004e2a:	f04f 0300 	mov.w	r3, #0
40004e2e:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40004e32:	e16f      	b.n	40005114 <mvCtrlHighSpeedSerdesPhyConfig+0xa68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:605
		/* for each serdes lane*/
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40004e34:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004e38:	4618      	mov	r0, r3
40004e3a:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
40004e3e:	f7ff fc11 	bl	40004664 <get_serdesLineCfg>
40004e42:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:606
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED]) 
40004e46:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004e4a:	f8df 3714 	ldr.w	r3, [pc, #1812]	; 40005560 <mvCtrlHighSpeedSerdesPhyConfig+0xeb4>
40004e4e:	447b      	add	r3, pc
40004e50:	4619      	mov	r1, r3
40004e52:	4613      	mov	r3, r2
40004e54:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004e58:	189b      	adds	r3, r3, r2
40004e5a:	18cb      	adds	r3, r1, r3
40004e5c:	781b      	ldrb	r3, [r3, #0]
40004e5e:	461a      	mov	r2, r3
40004e60:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004e64:	429a      	cmp	r2, r3
40004e66:	f000 8148 	beq.w	400050fa <mvCtrlHighSpeedSerdesPhyConfig+0xa4e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:608
			continue;
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX]) {
40004e6a:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004e6e:	f8df 36f4 	ldr.w	r3, [pc, #1780]	; 40005564 <mvCtrlHighSpeedSerdesPhyConfig+0xeb8>
40004e72:	447b      	add	r3, pc
40004e74:	4619      	mov	r1, r3
40004e76:	4613      	mov	r3, r2
40004e78:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004e7c:	189b      	adds	r3, r3, r2
40004e7e:	18cb      	adds	r3, r1, r3
40004e80:	f103 0301 	add.w	r3, r3, #1
40004e84:	781b      	ldrb	r3, [r3, #0]
40004e86:	461a      	mov	r2, r3
40004e88:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004e8c:	429a      	cmp	r2, r3
40004e8e:	d175      	bne.n	40004f7c <mvCtrlHighSpeedSerdesPhyConfig+0x8d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:609
			pexUnit    = serdesLineNum >> 2;
40004e90:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004e94:	ea4f 0393 	mov.w	r3, r3, lsr #2
40004e98:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:610
			pexLineNum = serdesLineNum % 4;
40004e9c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004ea0:	f003 0303 	and.w	r3, r3, #3
40004ea4:	f887 3597 	strb.w	r3, [r7, #1431]	; 0x597
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:613

			/* Needed for PEX_PHY_ACCESS_REG macro */
			if ((serdesLineNum > 7) && (pSerdesInfo->pexMod[3] == PEX_BUS_MODE_X8))
40004ea8:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004eac:	2b07      	cmp	r3, #7
40004eae:	d908      	bls.n	40004ec2 <mvCtrlHighSpeedSerdesPhyConfig+0x816>
40004eb0:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40004eb4:	7bdb      	ldrb	r3, [r3, #15]
40004eb6:	2b03      	cmp	r3, #3
40004eb8:	d103      	bne.n	40004ec2 <mvCtrlHighSpeedSerdesPhyConfig+0x816>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:614
					pexUnit = 3; /* lines 8 - 15 are belong to PEX3 in x8 mode */
40004eba:	f04f 0303 	mov.w	r3, #3
40004ebe:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:616

			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
40004ec2:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004ec6:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004eca:	18d3      	adds	r3, r2, r3
40004ecc:	7b1b      	ldrb	r3, [r3, #12]
40004ece:	2b00      	cmp	r3, #0
40004ed0:	f000 8115 	beq.w	400050fe <mvCtrlHighSpeedSerdesPhyConfig+0xa52>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:622
				continue;
			/*  8)	Activate the RX High Impedance Mode field (bit [2]) in register /PCIe_USB Control (Each MAC contain different Access to reach its Serdes-Regfile). 
					[PEX-Only] Set bit[12]: The analog part latches idle if PU_TX = 1 and PU_PLL =1. */ 

			/* Termination enable */
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1){
40004ed4:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004ed8:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004edc:	18d3      	adds	r3, r2, r3
40004ede:	7b1b      	ldrb	r3, [r3, #12]
40004ee0:	2b01      	cmp	r3, #1
40004ee2:	d10e      	bne.n	40004f02 <mvCtrlHighSpeedSerdesPhyConfig+0x856>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:623
					in_direct  = (0x48 << 16) | (pexLineNum << 24) | 0x1000 | rxHighImpedanceMode; /* x1 */
40004ee4:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40004ee8:	ea4f 6303 	mov.w	r3, r3, lsl #24
40004eec:	461a      	mov	r2, r3
40004eee:	f8d7 35b0 	ldr.w	r3, [r7, #1456]	; 0x5b0
40004ef2:	4313      	orrs	r3, r2
40004ef4:	f443 0390 	orr.w	r3, r3, #4718592	; 0x480000
40004ef8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
40004efc:	f8c7 35b8 	str.w	r3, [r7, #1464]	; 0x5b8
40004f00:	e01f      	b.n	40004f42 <mvCtrlHighSpeedSerdesPhyConfig+0x896>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:625
			}
			else if ((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && (pexLineNum == 0))
40004f02:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004f06:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40004f0a:	18d3      	adds	r3, r2, r3
40004f0c:	7b1b      	ldrb	r3, [r3, #12]
40004f0e:	2b02      	cmp	r3, #2
40004f10:	d113      	bne.n	40004f3a <mvCtrlHighSpeedSerdesPhyConfig+0x88e>
40004f12:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40004f16:	2b00      	cmp	r3, #0
40004f18:	d10f      	bne.n	40004f3a <mvCtrlHighSpeedSerdesPhyConfig+0x88e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:626
				in_direct  = (0x48 << 16) | (pexLineNum << 24) | 0x1000 | ( rxHighImpedanceMode & 0xff)   ; /* x4 */
40004f1a:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40004f1e:	ea4f 6303 	mov.w	r3, r3, lsl #24
40004f22:	461a      	mov	r2, r3
40004f24:	f8d7 35b0 	ldr.w	r3, [r7, #1456]	; 0x5b0
40004f28:	b2db      	uxtb	r3, r3
40004f2a:	4313      	orrs	r3, r2
40004f2c:	f443 0390 	orr.w	r3, r3, #4718592	; 0x480000
40004f30:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
40004f34:	f8c7 35b8 	str.w	r3, [r7, #1464]	; 0x5b8
40004f38:	e003      	b.n	40004f42 <mvCtrlHighSpeedSerdesPhyConfig+0x896>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:628
			else
				in_direct  = 0;
40004f3a:	f04f 0300 	mov.w	r3, #0
40004f3e:	f8c7 35b8 	str.w	r3, [r7, #1464]	; 0x5b8
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:630

			if (in_direct)
40004f42:	f8d7 35b8 	ldr.w	r3, [r7, #1464]	; 0x5b8
40004f46:	2b00      	cmp	r3, #0
40004f48:	f000 80db 	beq.w	40005102 <mvCtrlHighSpeedSerdesPhyConfig+0xa56>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:632
			{
				MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), in_direct);
40004f4c:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004f50:	f003 0301 	and.w	r3, r3, #1
40004f54:	f103 0301 	add.w	r3, r3, #1
40004f58:	ea4f 1243 	mov.w	r2, r3, lsl #5
40004f5c:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40004f60:	ea4f 0353 	mov.w	r3, r3, lsr #1
40004f64:	b2db      	uxtb	r3, r3
40004f66:	18d3      	adds	r3, r2, r3
40004f68:	ea4f 3343 	mov.w	r3, r3, lsl #13
40004f6c:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
40004f70:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004f74:	f8d7 25b8 	ldr.w	r2, [r7, #1464]	; 0x5b8
40004f78:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:636
				DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), in_direct);
			}

			continue;
40004f7a:	e0c2      	b.n	40005102 <mvCtrlHighSpeedSerdesPhyConfig+0xa56>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:638
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SATA]) {
40004f7c:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004f80:	f8df 35e4 	ldr.w	r3, [pc, #1508]	; 40005568 <mvCtrlHighSpeedSerdesPhyConfig+0xebc>
40004f84:	447b      	add	r3, pc
40004f86:	4619      	mov	r1, r3
40004f88:	4613      	mov	r3, r2
40004f8a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004f8e:	189b      	adds	r3, r3, r2
40004f90:	18cb      	adds	r3, r1, r3
40004f92:	f103 0302 	add.w	r3, r3, #2
40004f96:	781b      	ldrb	r3, [r3, #0]
40004f98:	461a      	mov	r2, r3
40004f9a:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004f9e:	429a      	cmp	r2, r3
40004fa0:	d113      	bne.n	40004fca <mvCtrlHighSpeedSerdesPhyConfig+0x91e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:640

			sataPort =  serdesLineNum & 1; /* port 0 for serdes lines 4,6,  and port 1 for serdes lines 5*/
40004fa2:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40004fa6:	f003 0301 	and.w	r3, r3, #1
40004faa:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:641
			MV_REG_WRITE(SATA_COMPHY_CTRL_REG(sataPort), rxHighImpedanceMode);
40004fae:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40004fb2:	f103 0351 	add.w	r3, r3, #81	; 0x51
40004fb6:	ea4f 3343 	mov.w	r3, r3, lsl #13
40004fba:	f503 6312 	add.w	r3, r3, #2336	; 0x920
40004fbe:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40004fc2:	f8d7 25b0 	ldr.w	r2, [r7, #1456]	; 0x5b0
40004fc6:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:643
			DEBUG_WR_REG(SATA_COMPHY_CTRL_REG(sataPort), rxHighImpedanceMode);
			continue;
40004fc8:	e09e      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:645
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
40004fca:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40004fce:	f8df 359c 	ldr.w	r3, [pc, #1436]	; 4000556c <mvCtrlHighSpeedSerdesPhyConfig+0xec0>
40004fd2:	447b      	add	r3, pc
40004fd4:	4619      	mov	r1, r3
40004fd6:	4613      	mov	r3, r2
40004fd8:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40004fdc:	189b      	adds	r3, r3, r2
40004fde:	18cb      	adds	r3, r1, r3
40004fe0:	f103 0307 	add.w	r3, r3, #7
40004fe4:	781b      	ldrb	r3, [r3, #0]
40004fe6:	461a      	mov	r2, r3
40004fe8:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40004fec:	429a      	cmp	r2, r3
40004fee:	d107      	bne.n	40005000 <mvCtrlHighSpeedSerdesPhyConfig+0x954>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:646
			MV_REG_WRITE(SGMII_COMPHY_CTRL_REG(0), rxHighImpedanceMode);
40004ff0:	f642 7320 	movw	r3, #12064	; 0x2f20
40004ff4:	f2cd 0307 	movt	r3, #53255	; 0xd007
40004ff8:	f8d7 25b0 	ldr.w	r2, [r7, #1456]	; 0x5b0
40004ffc:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:648
			DEBUG_WR_REG(SGMII_COMPHY_CTRL_REG(0), rxHighImpedanceMode);
			continue;
40004ffe:	e083      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:650
		}
        if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII0]) 
40005000:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005004:	f8df 3568 	ldr.w	r3, [pc, #1384]	; 40005570 <mvCtrlHighSpeedSerdesPhyConfig+0xec4>
40005008:	447b      	add	r3, pc
4000500a:	4619      	mov	r1, r3
4000500c:	4613      	mov	r3, r2
4000500e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005012:	189b      	adds	r3, r3, r2
40005014:	18cb      	adds	r3, r1, r3
40005016:	f103 0303 	add.w	r3, r3, #3
4000501a:	781b      	ldrb	r3, [r3, #0]
4000501c:	461a      	mov	r2, r3
4000501e:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005022:	429a      	cmp	r2, r3
40005024:	d104      	bne.n	40005030 <mvCtrlHighSpeedSerdesPhyConfig+0x984>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:651
			sgmiiPort = 0;
40005026:	f04f 0300 	mov.w	r3, #0
4000502a:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
4000502e:	e046      	b.n	400050be <mvCtrlHighSpeedSerdesPhyConfig+0xa12>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:652
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII1])
40005030:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005034:	f8df 353c 	ldr.w	r3, [pc, #1340]	; 40005574 <mvCtrlHighSpeedSerdesPhyConfig+0xec8>
40005038:	447b      	add	r3, pc
4000503a:	4619      	mov	r1, r3
4000503c:	4613      	mov	r3, r2
4000503e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005042:	189b      	adds	r3, r3, r2
40005044:	18cb      	adds	r3, r1, r3
40005046:	f103 0304 	add.w	r3, r3, #4
4000504a:	781b      	ldrb	r3, [r3, #0]
4000504c:	461a      	mov	r2, r3
4000504e:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005052:	429a      	cmp	r2, r3
40005054:	d104      	bne.n	40005060 <mvCtrlHighSpeedSerdesPhyConfig+0x9b4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:653
			sgmiiPort = 1;
40005056:	f04f 0301 	mov.w	r3, #1
4000505a:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
4000505e:	e02e      	b.n	400050be <mvCtrlHighSpeedSerdesPhyConfig+0xa12>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:654
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
40005060:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005064:	f8df 3510 	ldr.w	r3, [pc, #1296]	; 40005578 <mvCtrlHighSpeedSerdesPhyConfig+0xecc>
40005068:	447b      	add	r3, pc
4000506a:	4619      	mov	r1, r3
4000506c:	4613      	mov	r3, r2
4000506e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005072:	189b      	adds	r3, r3, r2
40005074:	18cb      	adds	r3, r1, r3
40005076:	f103 0305 	add.w	r3, r3, #5
4000507a:	781b      	ldrb	r3, [r3, #0]
4000507c:	461a      	mov	r2, r3
4000507e:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005082:	429a      	cmp	r2, r3
40005084:	d104      	bne.n	40005090 <mvCtrlHighSpeedSerdesPhyConfig+0x9e4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:655
			sgmiiPort = 2;
40005086:	f04f 0302 	mov.w	r3, #2
4000508a:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
4000508e:	e016      	b.n	400050be <mvCtrlHighSpeedSerdesPhyConfig+0xa12>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:656
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
40005090:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005094:	f8df 34e4 	ldr.w	r3, [pc, #1252]	; 4000557c <mvCtrlHighSpeedSerdesPhyConfig+0xed0>
40005098:	447b      	add	r3, pc
4000509a:	4619      	mov	r1, r3
4000509c:	4613      	mov	r3, r2
4000509e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
400050a2:	189b      	adds	r3, r3, r2
400050a4:	18cb      	adds	r3, r1, r3
400050a6:	f103 0306 	add.w	r3, r3, #6
400050aa:	781b      	ldrb	r3, [r3, #0]
400050ac:	461a      	mov	r2, r3
400050ae:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400050b2:	429a      	cmp	r2, r3
400050b4:	d127      	bne.n	40005106 <mvCtrlHighSpeedSerdesPhyConfig+0xa5a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:657
			sgmiiPort = 3;
400050b6:	f04f 0303 	mov.w	r3, #3
400050ba:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:660
		else
			continue;
			MV_REG_WRITE(SGMII_COMPHY_CTRL_REG(sgmiiPort), rxHighImpedanceMode);
400050be:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
400050c2:	ea4f 0353 	mov.w	r3, r3, lsr #1
400050c6:	b2db      	uxtb	r3, r3
400050c8:	461a      	mov	r2, r3
400050ca:	4613      	mov	r3, r2
400050cc:	ea4f 7303 	mov.w	r3, r3, lsl #28
400050d0:	1a9b      	subs	r3, r3, r2
400050d2:	ea4f 1303 	mov.w	r3, r3, lsl #4
400050d6:	461a      	mov	r2, r3
400050d8:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
400050dc:	f003 0301 	and.w	r3, r3, #1
400050e0:	18d3      	adds	r3, r2, r3
400050e2:	ea4f 3383 	mov.w	r3, r3, lsl #14
400050e6:	f503 23e5 	add.w	r3, r3, #468992	; 0x72800
400050ea:	f503 63e4 	add.w	r3, r3, #1824	; 0x720
400050ee:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400050f2:	f8d7 25b0 	ldr.w	r2, [r7, #1456]	; 0x5b0
400050f6:	601a      	str	r2, [r3, #0]
400050f8:	e006      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:607

	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
		/* for each serdes lane*/
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED]) 
			continue;
400050fa:	bf00      	nop
400050fc:	e004      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:617
			/* Needed for PEX_PHY_ACCESS_REG macro */
			if ((serdesLineNum > 7) && (pSerdesInfo->pexMod[3] == PEX_BUS_MODE_X8))
					pexUnit = 3; /* lines 8 - 15 are belong to PEX3 in x8 mode */

			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
				continue;
400050fe:	bf00      	nop
40005100:	e002      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:636
			{
				MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), in_direct);
				DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit), in_direct);
			}

			continue;
40005102:	bf00      	nop
40005104:	e000      	b.n	40005108 <mvCtrlHighSpeedSerdesPhyConfig+0xa5c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:659
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
			sgmiiPort = 2;
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
			sgmiiPort = 3;
		else
			continue;
40005106:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:603
	if (device_rev == 2) /*   for B0 only */
		rxHighImpedanceMode=0x8084;
	else
		rxHighImpedanceMode=0x8080;

	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005108:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000510c:	f103 0301 	add.w	r3, r3, #1
40005110:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005114:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005118:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
4000511c:	429a      	cmp	r2, r3
4000511e:	f4ff ae89 	bcc.w	40004e34 <mvCtrlHighSpeedSerdesPhyConfig+0x788>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:667
	} /* for each serdes lane*/

	/* Step 6 [PEX-Only] PEX-Main configuration (X4 or X1): */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 6: [PEX-Only] PEX-Main configuration (X4 or X1)\n");
	MV_REG_WRITE(SOC_CTRL_REG, 0x200);
40005122:	f248 2304 	movw	r3, #33284	; 0x8204
40005126:	f2cd 0301 	movt	r3, #53249	; 0xd001
4000512a:	f44f 7200 	mov.w	r2, #512	; 0x200
4000512e:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:669
	DEBUG_WR_REG(SOC_CTRL_REG, 0x200);
	tmp = MV_REG_READ(SOC_CTRL_REG);
40005130:	f248 2004 	movw	r0, #33284	; 0x8204
40005134:	f2cd 0001 	movt	r0, #53249	; 0xd001
40005138:	f7fe ffb8 	bl	400040ac <MV_MEMIO_LE32_READ>
4000513c:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:671
	DEBUG_RD_REG(SOC_CTRL_REG, tmp);
	tmp &= 0x200;
40005140:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005144:	f403 7300 	and.w	r3, r3, #512	; 0x200
40005148:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:672
	if (pSerdesInfo->pexMod[0] == PEX_BUS_MODE_X1)
4000514c:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40005150:	7b1b      	ldrb	r3, [r3, #12]
40005152:	2b01      	cmp	r3, #1
40005154:	d105      	bne.n	40005162 <mvCtrlHighSpeedSerdesPhyConfig+0xab6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:673
		tmp |= PCIE0_QUADX1_EN;
40005156:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
4000515a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
4000515e:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:674
	if (pSerdesInfo->pexMod[1] == PEX_BUS_MODE_X1)
40005162:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40005166:	7b5b      	ldrb	r3, [r3, #13]
40005168:	2b01      	cmp	r3, #1
4000516a:	d105      	bne.n	40005178 <mvCtrlHighSpeedSerdesPhyConfig+0xacc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:675
		tmp |= PCIE1_QUADX1_EN;
4000516c:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005170:	f443 7380 	orr.w	r3, r3, #256	; 0x100
40005174:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:676
	if ( ((MV_REG_READ(MPP_SAMPLE_AT_RESET(0)) & PEX_CLK_100MHZ_MASK) >> PEX_CLK_100MHZ_OFFSET) == 0x1) 
40005178:	f248 2030 	movw	r0, #33328	; 0x8230
4000517c:	f2cd 0001 	movt	r0, #53249	; 0xd001
40005180:	f7fe ff94 	bl	400040ac <MV_MEMIO_LE32_READ>
40005184:	4603      	mov	r3, r0
40005186:	f003 0304 	and.w	r3, r3, #4
4000518a:	ea4f 0393 	mov.w	r3, r3, lsr #2
4000518e:	2b01      	cmp	r3, #1
40005190:	d105      	bne.n	4000519e <mvCtrlHighSpeedSerdesPhyConfig+0xaf2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:677
	        tmp |= (PCIE0_CLK_OUT_EN_MASK | PCIE1_CLK_OUT_EN_MASK);
40005192:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005196:	f043 0330 	orr.w	r3, r3, #48	; 0x30
4000519a:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:679

	MV_REG_WRITE(SOC_CTRL_REG, tmp);
4000519e:	f248 2304 	movw	r3, #33284	; 0x8204
400051a2:	f2cd 0301 	movt	r3, #53249	; 0xd001
400051a6:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
400051aa:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:687
	/* 6.2 PCI Express Link Capabilities
*/
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 6.2: [PEX-Only] PCI Express Link Capabilities\n");

	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
400051ac:	f04f 0300 	mov.w	r3, #0
400051b0:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
400051b4:	e1ed      	b.n	40005592 <mvCtrlHighSpeedSerdesPhyConfig+0xee6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:688
		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
400051b6:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400051ba:	4618      	mov	r0, r3
400051bc:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
400051c0:	f7ff fa50 	bl	40004664 <get_serdesLineCfg>
400051c4:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:690

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX]) {
400051c8:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400051cc:	4bec      	ldr	r3, [pc, #944]	; (40005580 <mvCtrlHighSpeedSerdesPhyConfig+0xed4>)
400051ce:	447b      	add	r3, pc
400051d0:	4619      	mov	r1, r3
400051d2:	4613      	mov	r3, r2
400051d4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
400051d8:	189b      	adds	r3, r3, r2
400051da:	18cb      	adds	r3, r1, r3
400051dc:	f103 0301 	add.w	r3, r3, #1
400051e0:	781b      	ldrb	r3, [r3, #0]
400051e2:	461a      	mov	r2, r3
400051e4:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400051e8:	429a      	cmp	r2, r3
400051ea:	f040 81cc 	bne.w	40005586 <mvCtrlHighSpeedSerdesPhyConfig+0xeda>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:696
			/* PCI Express Control
				0xX1A00 [0]:
				0x0 X4-Link.
				0x1 X1-Link */

			pexUnit    = serdesLineNum >> 2;
400051ee:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400051f2:	ea4f 0393 	mov.w	r3, r3, lsr #2
400051f6:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:697
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
400051fa:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400051fe:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40005202:	18d3      	adds	r3, r2, r3
40005204:	7b1b      	ldrb	r3, [r3, #12]
40005206:	2b00      	cmp	r3, #0
40005208:	f000 81bc 	beq.w	40005584 <mvCtrlHighSpeedSerdesPhyConfig+0xed8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:700
				continue;

			tmp = MV_REG_READ(PEX_LINK_CAPABILITIES_REG(MV_SERDES_NUM_TO_PEX_NUM(serdesLineNum)));
4000520c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005210:	2b07      	cmp	r3, #7
40005212:	d807      	bhi.n	40005224 <mvCtrlHighSpeedSerdesPhyConfig+0xb78>
40005214:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005218:	2b07      	cmp	r3, #7
4000521a:	bfcc      	ite	gt
4000521c:	2300      	movgt	r3, #0
4000521e:	2301      	movle	r3, #1
40005220:	b2db      	uxtb	r3, r3
40005222:	e011      	b.n	40005248 <mvCtrlHighSpeedSerdesPhyConfig+0xb9c>
40005224:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005228:	f64a 23ab 	movw	r3, #43691	; 0xaaab
4000522c:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
40005230:	fba3 0302 	umull	r0, r3, r3, r2
40005234:	ea4f 03d3 	mov.w	r3, r3, lsr #3
40005238:	b2db      	uxtb	r3, r3
4000523a:	f103 0308 	add.w	r3, r3, #8
4000523e:	2b07      	cmp	r3, #7
40005240:	bfcc      	ite	gt
40005242:	2300      	movgt	r3, #0
40005244:	2301      	movle	r3, #1
40005246:	b2db      	uxtb	r3, r3
40005248:	2b00      	cmp	r3, #0
4000524a:	d051      	beq.n	400052f0 <mvCtrlHighSpeedSerdesPhyConfig+0xc44>
4000524c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005250:	2b07      	cmp	r3, #7
40005252:	d80d      	bhi.n	40005270 <mvCtrlHighSpeedSerdesPhyConfig+0xbc4>
40005254:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005258:	f103 0203 	add.w	r2, r3, #3
4000525c:	2b00      	cmp	r3, #0
4000525e:	bfb8      	it	lt
40005260:	4613      	movlt	r3, r2
40005262:	ea4f 03a3 	mov.w	r3, r3, asr #2
40005266:	f103 0301 	add.w	r3, r3, #1
4000526a:	ea4f 4283 	mov.w	r2, r3, lsl #18
4000526e:	e017      	b.n	400052a0 <mvCtrlHighSpeedSerdesPhyConfig+0xbf4>
40005270:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005274:	f64a 23ab 	movw	r3, #43691	; 0xaaab
40005278:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
4000527c:	fba3 1302 	umull	r1, r3, r3, r2
40005280:	ea4f 03d3 	mov.w	r3, r3, lsr #3
40005284:	b2db      	uxtb	r3, r3
40005286:	f103 0308 	add.w	r3, r3, #8
4000528a:	f103 0203 	add.w	r2, r3, #3
4000528e:	2b00      	cmp	r3, #0
40005290:	bfb8      	it	lt
40005292:	4613      	movlt	r3, r2
40005294:	ea4f 03a3 	mov.w	r3, r3, asr #2
40005298:	f103 0301 	add.w	r3, r3, #1
4000529c:	ea4f 4283 	mov.w	r2, r3, lsl #18
400052a0:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400052a4:	2b07      	cmp	r3, #7
400052a6:	d806      	bhi.n	400052b6 <mvCtrlHighSpeedSerdesPhyConfig+0xc0a>
400052a8:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400052ac:	f003 0303 	and.w	r3, r3, #3
400052b0:	ea4f 3383 	mov.w	r3, r3, lsl #14
400052b4:	e016      	b.n	400052e4 <mvCtrlHighSpeedSerdesPhyConfig+0xc38>
400052b6:	f897 15c3 	ldrb.w	r1, [r7, #1475]	; 0x5c3
400052ba:	f64a 23ab 	movw	r3, #43691	; 0xaaab
400052be:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
400052c2:	fba3 0301 	umull	r0, r3, r3, r1
400052c6:	ea4f 03d3 	mov.w	r3, r3, lsr #3
400052ca:	b2db      	uxtb	r3, r3
400052cc:	f103 0108 	add.w	r1, r3, #8
400052d0:	ea4f 73e1 	mov.w	r3, r1, asr #31
400052d4:	ea4f 7393 	mov.w	r3, r3, lsr #30
400052d8:	18c9      	adds	r1, r1, r3
400052da:	f001 0103 	and.w	r1, r1, #3
400052de:	1acb      	subs	r3, r1, r3
400052e0:	ea4f 3383 	mov.w	r3, r3, lsl #14
400052e4:	18d3      	adds	r3, r2, r3
400052e6:	f103 036c 	add.w	r3, r3, #108	; 0x6c
400052ea:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400052ee:	e02d      	b.n	4000534c <mvCtrlHighSpeedSerdesPhyConfig+0xca0>
400052f0:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400052f4:	2b07      	cmp	r3, #7
400052f6:	d80c      	bhi.n	40005312 <mvCtrlHighSpeedSerdesPhyConfig+0xc66>
400052f8:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400052fc:	f003 0307 	and.w	r3, r3, #7
40005300:	ea4f 4383 	mov.w	r3, r3, lsl #18
40005304:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
40005308:	f103 036c 	add.w	r3, r3, #108	; 0x6c
4000530c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005310:	e01c      	b.n	4000534c <mvCtrlHighSpeedSerdesPhyConfig+0xca0>
40005312:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005316:	f64a 23ab 	movw	r3, #43691	; 0xaaab
4000531a:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
4000531e:	fba3 1302 	umull	r1, r3, r3, r2
40005322:	ea4f 03d3 	mov.w	r3, r3, lsr #3
40005326:	b2db      	uxtb	r3, r3
40005328:	f103 0208 	add.w	r2, r3, #8
4000532c:	ea4f 73e2 	mov.w	r3, r2, asr #31
40005330:	ea4f 7353 	mov.w	r3, r3, lsr #29
40005334:	18d2      	adds	r2, r2, r3
40005336:	f002 0207 	and.w	r2, r2, #7
4000533a:	1ad3      	subs	r3, r2, r3
4000533c:	ea4f 4383 	mov.w	r3, r3, lsl #18
40005340:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
40005344:	f103 036c 	add.w	r3, r3, #108	; 0x6c
40005348:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000534c:	4618      	mov	r0, r3
4000534e:	f7fe fead 	bl	400040ac <MV_MEMIO_LE32_READ>
40005352:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:702
			DEBUG_RD_REG(PEX_LINK_CAPABILITIES_REG(MV_SERDES_NUM_TO_PEX_NUM(serdesLineNum)), tmp );
			tmp &= ~(0x3FF);
40005356:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
4000535a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
4000535e:	f023 0303 	bic.w	r3, r3, #3
40005362:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:703
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1)
40005366:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000536a:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000536e:	18d3      	adds	r3, r2, r3
40005370:	7b1b      	ldrb	r3, [r3, #12]
40005372:	2b01      	cmp	r3, #1
40005374:	d105      	bne.n	40005382 <mvCtrlHighSpeedSerdesPhyConfig+0xcd6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:704
				tmp |= (0x1 << 4);
40005376:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
4000537a:	f043 0310 	orr.w	r3, r3, #16
4000537e:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:705
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4)
40005382:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005386:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000538a:	18d3      	adds	r3, r2, r3
4000538c:	7b1b      	ldrb	r3, [r3, #12]
4000538e:	2b02      	cmp	r3, #2
40005390:	d105      	bne.n	4000539e <mvCtrlHighSpeedSerdesPhyConfig+0xcf2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:706
				tmp |= (0x4 << 4);
40005392:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005396:	f043 0340 	orr.w	r3, r3, #64	; 0x40
4000539a:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:707
			if (0 == mvBoardPexCapabilityGet(satr11))
4000539e:	f897 35b7 	ldrb.w	r3, [r7, #1463]	; 0x5b7
400053a2:	f003 0301 	and.w	r3, r3, #1
400053a6:	2b00      	cmp	r3, #0
400053a8:	d106      	bne.n	400053b8 <mvCtrlHighSpeedSerdesPhyConfig+0xd0c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:708
				tmp |= 0x1;
400053aa:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400053ae:	f043 0301 	orr.w	r3, r3, #1
400053b2:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
400053b6:	e005      	b.n	400053c4 <mvCtrlHighSpeedSerdesPhyConfig+0xd18>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:710
			else
				tmp	|= 0x2;
400053b8:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400053bc:	f043 0302 	orr.w	r3, r3, #2
400053c0:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:711
			MV_REG_WRITE(PEX_LINK_CAPABILITIES_REG(MV_SERDES_NUM_TO_PEX_NUM(serdesLineNum)), tmp);
400053c4:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400053c8:	2b07      	cmp	r3, #7
400053ca:	d807      	bhi.n	400053dc <mvCtrlHighSpeedSerdesPhyConfig+0xd30>
400053cc:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400053d0:	2b07      	cmp	r3, #7
400053d2:	bfcc      	ite	gt
400053d4:	2300      	movgt	r3, #0
400053d6:	2301      	movle	r3, #1
400053d8:	b2db      	uxtb	r3, r3
400053da:	e011      	b.n	40005400 <mvCtrlHighSpeedSerdesPhyConfig+0xd54>
400053dc:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400053e0:	f64a 23ab 	movw	r3, #43691	; 0xaaab
400053e4:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
400053e8:	fba3 0302 	umull	r0, r3, r3, r2
400053ec:	ea4f 03d3 	mov.w	r3, r3, lsr #3
400053f0:	b2db      	uxtb	r3, r3
400053f2:	f103 0308 	add.w	r3, r3, #8
400053f6:	2b07      	cmp	r3, #7
400053f8:	bfcc      	ite	gt
400053fa:	2300      	movgt	r3, #0
400053fc:	2301      	movle	r3, #1
400053fe:	b2db      	uxtb	r3, r3
40005400:	2b00      	cmp	r3, #0
40005402:	d051      	beq.n	400054a8 <mvCtrlHighSpeedSerdesPhyConfig+0xdfc>
40005404:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005408:	2b07      	cmp	r3, #7
4000540a:	d80d      	bhi.n	40005428 <mvCtrlHighSpeedSerdesPhyConfig+0xd7c>
4000540c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005410:	f103 0203 	add.w	r2, r3, #3
40005414:	2b00      	cmp	r3, #0
40005416:	bfb8      	it	lt
40005418:	4613      	movlt	r3, r2
4000541a:	ea4f 03a3 	mov.w	r3, r3, asr #2
4000541e:	f103 0301 	add.w	r3, r3, #1
40005422:	ea4f 4283 	mov.w	r2, r3, lsl #18
40005426:	e017      	b.n	40005458 <mvCtrlHighSpeedSerdesPhyConfig+0xdac>
40005428:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000542c:	f64a 23ab 	movw	r3, #43691	; 0xaaab
40005430:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
40005434:	fba3 1302 	umull	r1, r3, r3, r2
40005438:	ea4f 03d3 	mov.w	r3, r3, lsr #3
4000543c:	b2db      	uxtb	r3, r3
4000543e:	f103 0308 	add.w	r3, r3, #8
40005442:	f103 0203 	add.w	r2, r3, #3
40005446:	2b00      	cmp	r3, #0
40005448:	bfb8      	it	lt
4000544a:	4613      	movlt	r3, r2
4000544c:	ea4f 03a3 	mov.w	r3, r3, asr #2
40005450:	f103 0301 	add.w	r3, r3, #1
40005454:	ea4f 4283 	mov.w	r2, r3, lsl #18
40005458:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000545c:	2b07      	cmp	r3, #7
4000545e:	d806      	bhi.n	4000546e <mvCtrlHighSpeedSerdesPhyConfig+0xdc2>
40005460:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005464:	f003 0303 	and.w	r3, r3, #3
40005468:	ea4f 3383 	mov.w	r3, r3, lsl #14
4000546c:	e016      	b.n	4000549c <mvCtrlHighSpeedSerdesPhyConfig+0xdf0>
4000546e:	f897 15c3 	ldrb.w	r1, [r7, #1475]	; 0x5c3
40005472:	f64a 23ab 	movw	r3, #43691	; 0xaaab
40005476:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
4000547a:	fba3 0301 	umull	r0, r3, r3, r1
4000547e:	ea4f 03d3 	mov.w	r3, r3, lsr #3
40005482:	b2db      	uxtb	r3, r3
40005484:	f103 0108 	add.w	r1, r3, #8
40005488:	ea4f 73e1 	mov.w	r3, r1, asr #31
4000548c:	ea4f 7393 	mov.w	r3, r3, lsr #30
40005490:	18c9      	adds	r1, r1, r3
40005492:	f001 0103 	and.w	r1, r1, #3
40005496:	1acb      	subs	r3, r1, r3
40005498:	ea4f 3383 	mov.w	r3, r3, lsl #14
4000549c:	18d3      	adds	r3, r2, r3
4000549e:	f103 036c 	add.w	r3, r3, #108	; 0x6c
400054a2:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400054a6:	e02d      	b.n	40005504 <mvCtrlHighSpeedSerdesPhyConfig+0xe58>
400054a8:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400054ac:	2b07      	cmp	r3, #7
400054ae:	d80c      	bhi.n	400054ca <mvCtrlHighSpeedSerdesPhyConfig+0xe1e>
400054b0:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400054b4:	f003 0307 	and.w	r3, r3, #7
400054b8:	ea4f 4383 	mov.w	r3, r3, lsl #18
400054bc:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
400054c0:	f103 036c 	add.w	r3, r3, #108	; 0x6c
400054c4:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400054c8:	e01c      	b.n	40005504 <mvCtrlHighSpeedSerdesPhyConfig+0xe58>
400054ca:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400054ce:	f64a 23ab 	movw	r3, #43691	; 0xaaab
400054d2:	f6ca 23aa 	movt	r3, #43690	; 0xaaaa
400054d6:	fba3 1302 	umull	r1, r3, r3, r2
400054da:	ea4f 03d3 	mov.w	r3, r3, lsr #3
400054de:	b2db      	uxtb	r3, r3
400054e0:	f103 0208 	add.w	r2, r3, #8
400054e4:	ea4f 73e2 	mov.w	r3, r2, asr #31
400054e8:	ea4f 7353 	mov.w	r3, r3, lsr #29
400054ec:	18d2      	adds	r2, r2, r3
400054ee:	f002 0207 	and.w	r2, r2, #7
400054f2:	1ad3      	subs	r3, r2, r3
400054f4:	ea4f 4383 	mov.w	r3, r3, lsl #18
400054f8:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
400054fc:	f103 036c 	add.w	r3, r3, #108	; 0x6c
40005500:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005504:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40005508:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:715
			DEBUG_WR_REG(PEX_LINK_CAPABILITIES_REG(MV_SERDES_NUM_TO_PEX_NUM(serdesLineNum)), tmp);

			/* if pex is X4, no need to pass thru the other 3X1 serdes lines */
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4)
4000550a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000550e:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40005512:	18d3      	adds	r3, r2, r3
40005514:	7b1b      	ldrb	r3, [r3, #12]
40005516:	2b02      	cmp	r3, #2
40005518:	d135      	bne.n	40005586 <mvCtrlHighSpeedSerdesPhyConfig+0xeda>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:716
				serdesLineNum += 3;
4000551a:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000551e:	f103 0303 	add.w	r3, r3, #3
40005522:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005526:	e02e      	b.n	40005586 <mvCtrlHighSpeedSerdesPhyConfig+0xeda>
40005528:	000031f2 	strdeq	r3, [r0], -r2
4000552c:	0000320e 	andeq	r3, r0, lr, lsl #4
40005530:	00003180 	andeq	r3, r0, r0, lsl #3
40005534:	00002f36 	andeq	r2, r0, r6, lsr pc
40005538:	00002f12 	andeq	r2, r0, r2, lsl pc
4000553c:	00002eea 	andeq	r2, r0, sl, ror #29
40005540:	00002fac 	andeq	r2, r0, ip, lsr #31
40005544:	00002fb6 			; <UNDEFINED> instruction: 0x00002fb6
40005548:	00002dfe 	strdeq	r2, [r0], -lr
4000554c:	00002d9c 	muleq	r0, ip, sp
40005550:	00002d6c 	andeq	r2, r0, ip, ror #26
40005554:	00002d3c 	andeq	r2, r0, ip, lsr sp
40005558:	00002d0c 	andeq	r2, r0, ip, lsl #26
4000555c:	00002be8 	andeq	r2, r0, r8, ror #23
40005560:	00002b2a 	andeq	r2, r0, sl, lsr #22
40005564:	00002b06 	andeq	r2, r0, r6, lsl #22
40005568:	000029f4 	strdeq	r2, [r0], -r4
4000556c:	000029a6 	andeq	r2, r0, r6, lsr #19
40005570:	00002970 	andeq	r2, r0, r0, ror r9
40005574:	00002940 	andeq	r2, r0, r0, asr #18
40005578:	00002910 	andeq	r2, r0, r0, lsl r9
4000557c:	000028e0 	andeq	r2, r0, r0, ror #17
40005580:	000027aa 	andeq	r2, r0, sl, lsr #15
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:698
				0x0 X4-Link.
				0x1 X1-Link */

			pexUnit    = serdesLineNum >> 2;
			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
				continue;
40005584:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:687
	/* 6.2 PCI Express Link Capabilities
*/
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 6.2: [PEX-Only] PCI Express Link Capabilities\n");

	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005586:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000558a:	f103 0301 	add.w	r3, r3, #1
4000558e:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005592:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005596:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
4000559a:	429a      	cmp	r2, r3
4000559c:	f4ff ae0b 	bcc.w	400051b6 <mvCtrlHighSpeedSerdesPhyConfig+0xb0a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:724

	/* Step 7 [PEX-X4 Only] To create PEX-Link that contain 4-lanes you need to config the
			register SOC_Misc/General Purpose2 (Address= 182F8) */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Step 7: [PEX-X4 Only] To create PEX-Link \n");
	tmp = MV_REG_READ(GEN_PURP_RES_2_REG);
400055a0:	f248 20f8 	movw	r0, #33528	; 0x82f8
400055a4:	f2cd 0001 	movt	r0, #53249	; 0xd001
400055a8:	f7fe fd80 	bl	400040ac <MV_MEMIO_LE32_READ>
400055ac:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:727
	DEBUG_RD_REG(GEN_PURP_RES_2_REG, tmp );

	tmp &= 0xFFFF0000;
400055b0:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400055b4:	ea4f 4313 	mov.w	r3, r3, lsr #16
400055b8:	ea4f 4303 	mov.w	r3, r3, lsl #16
400055bc:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:728
	if (pSerdesInfo->pexMod[0] == PEX_BUS_MODE_X4)
400055c0:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400055c4:	7b1b      	ldrb	r3, [r3, #12]
400055c6:	2b02      	cmp	r3, #2
400055c8:	d105      	bne.n	400055d6 <mvCtrlHighSpeedSerdesPhyConfig+0xf2a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:729
		tmp |= 0x0000000F;
400055ca:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400055ce:	f043 030f 	orr.w	r3, r3, #15
400055d2:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:731

	if (pSerdesInfo->pexMod[1] == PEX_BUS_MODE_X4)
400055d6:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400055da:	7b5b      	ldrb	r3, [r3, #13]
400055dc:	2b02      	cmp	r3, #2
400055de:	d105      	bne.n	400055ec <mvCtrlHighSpeedSerdesPhyConfig+0xf40>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:732
		tmp |= 0x000000F0;
400055e0:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400055e4:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
400055e8:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:734

	if (pSerdesInfo->pexMod[2] == PEX_BUS_MODE_X4)
400055ec:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400055f0:	7b9b      	ldrb	r3, [r3, #14]
400055f2:	2b02      	cmp	r3, #2
400055f4:	d105      	bne.n	40005602 <mvCtrlHighSpeedSerdesPhyConfig+0xf56>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:735
		tmp |= 0x00000F00;
400055f6:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400055fa:	f443 6370 	orr.w	r3, r3, #3840	; 0xf00
400055fe:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:737

	if (pSerdesInfo->pexMod[3] == PEX_BUS_MODE_X4)
40005602:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40005606:	7bdb      	ldrb	r3, [r3, #15]
40005608:	2b02      	cmp	r3, #2
4000560a:	d105      	bne.n	40005618 <mvCtrlHighSpeedSerdesPhyConfig+0xf6c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:738
		tmp |= 0x0000F000;
4000560c:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005610:	f443 4370 	orr.w	r3, r3, #61440	; 0xf000
40005614:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:740

	MV_REG_WRITE(GEN_PURP_RES_2_REG, tmp);
40005618:	f248 23f8 	movw	r3, #33528	; 0x82f8
4000561c:	f2cd 0301 	movt	r3, #53249	; 0xd001
40005620:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40005624:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:748
	/* Steps  8 , 9 ,10 - use prepared REG addresses and values */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 7,8,9,10 and 11\n");

	/* Prepare PHY parameters for each step according to  MUX selection */
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005626:	f04f 0300 	mov.w	r3, #0
4000562a:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
4000562e:	e22b      	b.n	40005a88 <mvCtrlHighSpeedSerdesPhyConfig+0x13dc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:751
		/* for each serdes lane*/

		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40005630:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005634:	4618      	mov	r0, r3
40005636:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
4000563a:	f7ff f813 	bl	40004664 <get_serdesLineCfg>
4000563e:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:753

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
40005642:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005646:	f8df 3d3c 	ldr.w	r3, [pc, #3388]	; 40006384 <mvCtrlHighSpeedSerdesPhyConfig+0x1cd8>
4000564a:	447b      	add	r3, pc
4000564c:	4619      	mov	r1, r3
4000564e:	4613      	mov	r3, r2
40005650:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005654:	189b      	adds	r3, r3, r2
40005656:	18cb      	adds	r3, r1, r3
40005658:	781b      	ldrb	r3, [r3, #0]
4000565a:	461a      	mov	r2, r3
4000565c:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005660:	429a      	cmp	r2, r3
40005662:	f000 8204 	beq.w	40005a6e <mvCtrlHighSpeedSerdesPhyConfig+0x13c2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:756
			continue;

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX]) {
40005666:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000566a:	f8df 3d1c 	ldr.w	r3, [pc, #3356]	; 40006388 <mvCtrlHighSpeedSerdesPhyConfig+0x1cdc>
4000566e:	447b      	add	r3, pc
40005670:	4619      	mov	r1, r3
40005672:	4613      	mov	r3, r2
40005674:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005678:	189b      	adds	r3, r3, r2
4000567a:	18cb      	adds	r3, r1, r3
4000567c:	f103 0301 	add.w	r3, r3, #1
40005680:	781b      	ldrb	r3, [r3, #0]
40005682:	461a      	mov	r2, r3
40005684:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005688:	429a      	cmp	r2, r3
4000568a:	d155      	bne.n	40005738 <mvCtrlHighSpeedSerdesPhyConfig+0x108c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:757
			pexUnit    = serdesLineNum >> 2;
4000568c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005690:	ea4f 0393 	mov.w	r3, r3, lsr #2
40005694:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:758
			pexLineNum = serdesLineNum % 4;
40005698:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000569c:	f003 0303 	and.w	r3, r3, #3
400056a0:	f887 3597 	strb.w	r3, [r7, #1431]	; 0x597
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:761

			/* Needed for PEX_PHY_ACCESS_REG macro */
			if ((serdesLineNum > 7) && (pSerdesInfo->pexMod[3] == PEX_BUS_MODE_X8))
400056a4:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400056a8:	2b07      	cmp	r3, #7
400056aa:	d908      	bls.n	400056be <mvCtrlHighSpeedSerdesPhyConfig+0x1012>
400056ac:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400056b0:	7bdb      	ldrb	r3, [r3, #15]
400056b2:	2b03      	cmp	r3, #3
400056b4:	d103      	bne.n	400056be <mvCtrlHighSpeedSerdesPhyConfig+0x1012>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:762
				pexUnit = 3; /* lines 8 - 15 are belong to PEX3 in x8 mode */
400056b6:	f04f 0303 	mov.w	r3, #3
400056ba:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:764

			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
400056be:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400056c2:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
400056c6:	18d3      	adds	r3, r2, r3
400056c8:	7b1b      	ldrb	r3, [r3, #12]
400056ca:	2b00      	cmp	r3, #0
400056cc:	f000 81d1 	beq.w	40005a72 <mvCtrlHighSpeedSerdesPhyConfig+0x13c6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:768
				continue;
			/* 8)	Configure the desire PHY_MODE (bits [7:5]) and REF_FREF_SEL (bits[4:0]) in the register Power and PLL Control (Each MAC contain different Access to reach its Serdes-Regfile).   */

			if (((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && (0 == pexLineNum)) ||
400056d0:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400056d4:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
400056d8:	18d3      	adds	r3, r2, r3
400056da:	7b1b      	ldrb	r3, [r3, #12]
400056dc:	2b02      	cmp	r3, #2
400056de:	d103      	bne.n	400056e8 <mvCtrlHighSpeedSerdesPhyConfig+0x103c>
400056e0:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
400056e4:	2b00      	cmp	r3, #0
400056e6:	d008      	beq.n	400056fa <mvCtrlHighSpeedSerdesPhyConfig+0x104e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:769
				((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1))){
400056e8:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400056ec:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
400056f0:	18d3      	adds	r3, r2, r3
400056f2:	7b1b      	ldrb	r3, [r3, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:768

			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
				continue;
			/* 8)	Configure the desire PHY_MODE (bits [7:5]) and REF_FREF_SEL (bits[4:0]) in the register Power and PLL Control (Each MAC contain different Access to reach its Serdes-Regfile).   */

			if (((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && (0 == pexLineNum)) ||
400056f4:	2b01      	cmp	r3, #1
400056f6:	f040 81be 	bne.w	40005a76 <mvCtrlHighSpeedSerdesPhyConfig+0x13ca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:770
				((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1))){
				MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit),(0x01 << 16) | (pexLineNum << 24) | 0xFC60);
400056fa:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400056fe:	f003 0301 	and.w	r3, r3, #1
40005702:	f103 0301 	add.w	r3, r3, #1
40005706:	ea4f 1243 	mov.w	r2, r3, lsl #5
4000570a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000570e:	ea4f 0353 	mov.w	r3, r3, lsr #1
40005712:	b2db      	uxtb	r3, r3
40005714:	18d3      	adds	r3, r2, r3
40005716:	ea4f 3343 	mov.w	r3, r3, lsl #13
4000571a:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
4000571e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005722:	461a      	mov	r2, r3
40005724:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40005728:	ea4f 6303 	mov.w	r3, r3, lsl #24
4000572c:	f443 33fe 	orr.w	r3, r3, #130048	; 0x1fc00
40005730:	f043 0360 	orr.w	r3, r3, #96	; 0x60
40005734:	6013      	str	r3, [r2, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:773
				DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit),(0x01 << 16) | (pexLineNum << 24) | 0xFC60);
			}
			continue;
40005736:	e19e      	b.n	40005a76 <mvCtrlHighSpeedSerdesPhyConfig+0x13ca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:775
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SATA]) {
40005738:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000573c:	f8df 3c4c 	ldr.w	r3, [pc, #3148]	; 4000638c <mvCtrlHighSpeedSerdesPhyConfig+0x1ce0>
40005740:	447b      	add	r3, pc
40005742:	4619      	mov	r1, r3
40005744:	4613      	mov	r3, r2
40005746:	ea4f 03c3 	mov.w	r3, r3, lsl #3
4000574a:	189b      	adds	r3, r3, r2
4000574c:	18cb      	adds	r3, r1, r3
4000574e:	f103 0302 	add.w	r3, r3, #2
40005752:	781b      	ldrb	r3, [r3, #0]
40005754:	461a      	mov	r2, r3
40005756:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
4000575a:	429a      	cmp	r2, r3
4000575c:	d14f      	bne.n	400057fe <mvCtrlHighSpeedSerdesPhyConfig+0x1152>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:777

			sataPort =  serdesLineNum & 1; /* port 0 for serdes lines 4,6,  and port 1 for serdes lines 5*/
4000575e:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005762:	f003 0301 	and.w	r3, r3, #1
40005766:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:781

			/* 8) Configure the desire PHY_MODE (bits [7:5]) and REF_FREF_SEL (bits[4:0]) in the register 
				  Power and PLL Control (Each MAC contain different Access to reach its Serdes-Regfile). */
			MV_REG_WRITE(SATA_PWR_PLL_CTRL_REG(sataPort), 0xF801);
4000576a:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
4000576e:	f103 0351 	add.w	r3, r3, #81	; 0x51
40005772:	ea4f 3343 	mov.w	r3, r3, lsl #13
40005776:	f603 0304 	addw	r3, r3, #2052	; 0x804
4000577a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000577e:	f64f 0201 	movw	r2, #63489	; 0xf801
40005782:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:785
			DEBUG_WR_REG(SATA_PWR_PLL_CTRL_REG(sataPort), 0xF801);

			/*  9)	Configure the desire SEL_BITS  */
			MV_REG_WRITE(SATA_DIG_LP_ENA_REG(sataPort) , 0x400);
40005784:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40005788:	f103 0351 	add.w	r3, r3, #81	; 0x51
4000578c:	ea4f 3343 	mov.w	r3, r3, lsl #13
40005790:	f603 038c 	addw	r3, r3, #2188	; 0x88c
40005794:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005798:	f44f 6280 	mov.w	r2, #1024	; 0x400
4000579c:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:791
			DEBUG_WR_REG(SATA_DIG_LP_ENA_REG(sataPort) , 0x400);


			/* 10)	Configure the desire REFCLK_SEL */

			MV_REG_WRITE(SATA_REF_CLK_SEL_REG(sataPort), 0x400);
4000579e:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
400057a2:	f103 0351 	add.w	r3, r3, #81	; 0x51
400057a6:	ea4f 3343 	mov.w	r3, r3, lsl #13
400057aa:	f603 1318 	addw	r3, r3, #2328	; 0x918
400057ae:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400057b2:	f44f 6280 	mov.w	r2, #1024	; 0x400
400057b6:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:795
			DEBUG_WR_REG(SATA_REF_CLK_SEL_REG(sataPort), 0x400);
			/* 11)	Power up to the PU_PLL,PU_RX,PU_TX.   */

			tmp = MV_REG_READ(SATA_LP_PHY_EXT_CTRL_REG(sataPort));
400057b8:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
400057bc:	f103 0351 	add.w	r3, r3, #81	; 0x51
400057c0:	ea4f 3343 	mov.w	r3, r3, lsl #13
400057c4:	f103 0358 	add.w	r3, r3, #88	; 0x58
400057c8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400057cc:	4618      	mov	r0, r3
400057ce:	f7fe fc6d 	bl	400040ac <MV_MEMIO_LE32_READ>
400057d2:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:797
			DEBUG_RD_REG(SATA_LP_PHY_EXT_CTRL_REG(sataPort), tmp );
			tmp |= 7; 
400057d6:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
400057da:	f043 0307 	orr.w	r3, r3, #7
400057de:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:798
			MV_REG_WRITE(SATA_LP_PHY_EXT_CTRL_REG(sataPort) , tmp);
400057e2:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
400057e6:	f103 0351 	add.w	r3, r3, #81	; 0x51
400057ea:	ea4f 3343 	mov.w	r3, r3, lsl #13
400057ee:	f103 0358 	add.w	r3, r3, #88	; 0x58
400057f2:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400057f6:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
400057fa:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:801
			DEBUG_WR_REG(SATA_LP_PHY_EXT_CTRL_REG(sataPort) , tmp);

			continue;
400057fc:	e13e      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:803
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
400057fe:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005802:	f8df 3b8c 	ldr.w	r3, [pc, #2956]	; 40006390 <mvCtrlHighSpeedSerdesPhyConfig+0x1ce4>
40005806:	447b      	add	r3, pc
40005808:	4619      	mov	r1, r3
4000580a:	4613      	mov	r3, r2
4000580c:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005810:	189b      	adds	r3, r3, r2
40005812:	18cb      	adds	r3, r1, r3
40005814:	f103 0307 	add.w	r3, r3, #7
40005818:	781b      	ldrb	r3, [r3, #0]
4000581a:	461a      	mov	r2, r3
4000581c:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005820:	429a      	cmp	r2, r3
40005822:	d12a      	bne.n	4000587a <mvCtrlHighSpeedSerdesPhyConfig+0x11ce>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:805
			/* 8)	Configure the desire PHY_MODE (bits [7:5]) and REF_FREF_SEL (bits[4:0]) in the register  */
			MV_REG_WRITE(SGMII_PWR_PLL_CTRL_REG(0), 0xF881);
40005824:	f642 6304 	movw	r3, #11780	; 0x2e04
40005828:	f2cd 0307 	movt	r3, #53255	; 0xd007
4000582c:	f64f 0281 	movw	r2, #63617	; 0xf881
40005830:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:809
			DEBUG_WR_REG(SGMII_PWR_PLL_CTRL_REG(0), 0xF881);

			/* 9)	Configure the desire SEL_BITS (bits [11:0] in register */
			MV_REG_WRITE(SGMII_DIG_LP_ENA_REG(0), 0x400);
40005832:	f642 638c 	movw	r3, #11916	; 0x2e8c
40005836:	f2cd 0307 	movt	r3, #53255	; 0xd007
4000583a:	f44f 6280 	mov.w	r2, #1024	; 0x400
4000583e:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:813
			DEBUG_WR_REG(SGMII_DIG_LP_ENA_REG(0), 0x400);

			/* 10)	Configure the desire REFCLK_SEL (bit [10]) in register  */
			MV_REG_WRITE(SGMII_REF_CLK_SEL_REG(0), 0x400);
40005840:	f642 7318 	movw	r3, #12056	; 0x2f18
40005844:	f2cd 0307 	movt	r3, #53255	; 0xd007
40005848:	f44f 6280 	mov.w	r2, #1024	; 0x400
4000584c:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:817
			DEBUG_WR_REG(SGMII_REF_CLK_SEL_REG(0), 0x400);
	 
			/* 11)	Power up to the PU_PLL,PU_RX,PU_TX.  */
			tmp = MV_REG_READ(SGMII_SERDES_CFG_REG(0));
4000584e:	f242 40a0 	movw	r0, #9376	; 0x24a0
40005852:	f2cd 0007 	movt	r0, #53255	; 0xd007
40005856:	f7fe fc29 	bl	400040ac <MV_MEMIO_LE32_READ>
4000585a:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:819
			DEBUG_RD_REG(SGMII_SERDES_CFG_REG(0), tmp );
			tmp |= 7;
4000585e:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005862:	f043 0307 	orr.w	r3, r3, #7
40005866:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:820
			MV_REG_WRITE(SGMII_SERDES_CFG_REG(0), tmp);
4000586a:	f242 43a0 	movw	r3, #9376	; 0x24a0
4000586e:	f2cd 0307 	movt	r3, #53255	; 0xd007
40005872:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40005876:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:822
			DEBUG_WR_REG(SGMII_SERDES_CFG_REG(0), tmp);
			continue;
40005878:	e100      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:824
		}
		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII0])
4000587a:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000587e:	f8df 3b14 	ldr.w	r3, [pc, #2836]	; 40006394 <mvCtrlHighSpeedSerdesPhyConfig+0x1ce8>
40005882:	447b      	add	r3, pc
40005884:	4619      	mov	r1, r3
40005886:	4613      	mov	r3, r2
40005888:	ea4f 03c3 	mov.w	r3, r3, lsl #3
4000588c:	189b      	adds	r3, r3, r2
4000588e:	18cb      	adds	r3, r1, r3
40005890:	f103 0303 	add.w	r3, r3, #3
40005894:	781b      	ldrb	r3, [r3, #0]
40005896:	461a      	mov	r2, r3
40005898:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
4000589c:	429a      	cmp	r2, r3
4000589e:	d104      	bne.n	400058aa <mvCtrlHighSpeedSerdesPhyConfig+0x11fe>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:825
			sgmiiPort = 0;
400058a0:	f04f 0300 	mov.w	r3, #0
400058a4:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
400058a8:	e047      	b.n	4000593a <mvCtrlHighSpeedSerdesPhyConfig+0x128e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:826
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII1])
400058aa:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400058ae:	f8df 3ae8 	ldr.w	r3, [pc, #2792]	; 40006398 <mvCtrlHighSpeedSerdesPhyConfig+0x1cec>
400058b2:	447b      	add	r3, pc
400058b4:	4619      	mov	r1, r3
400058b6:	4613      	mov	r3, r2
400058b8:	ea4f 03c3 	mov.w	r3, r3, lsl #3
400058bc:	189b      	adds	r3, r3, r2
400058be:	18cb      	adds	r3, r1, r3
400058c0:	f103 0304 	add.w	r3, r3, #4
400058c4:	781b      	ldrb	r3, [r3, #0]
400058c6:	461a      	mov	r2, r3
400058c8:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400058cc:	429a      	cmp	r2, r3
400058ce:	d104      	bne.n	400058da <mvCtrlHighSpeedSerdesPhyConfig+0x122e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:827
			sgmiiPort = 1;
400058d0:	f04f 0301 	mov.w	r3, #1
400058d4:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
400058d8:	e02f      	b.n	4000593a <mvCtrlHighSpeedSerdesPhyConfig+0x128e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:828
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
400058da:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400058de:	f8df 3abc 	ldr.w	r3, [pc, #2748]	; 4000639c <mvCtrlHighSpeedSerdesPhyConfig+0x1cf0>
400058e2:	447b      	add	r3, pc
400058e4:	4619      	mov	r1, r3
400058e6:	4613      	mov	r3, r2
400058e8:	ea4f 03c3 	mov.w	r3, r3, lsl #3
400058ec:	189b      	adds	r3, r3, r2
400058ee:	18cb      	adds	r3, r1, r3
400058f0:	f103 0305 	add.w	r3, r3, #5
400058f4:	781b      	ldrb	r3, [r3, #0]
400058f6:	461a      	mov	r2, r3
400058f8:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400058fc:	429a      	cmp	r2, r3
400058fe:	d104      	bne.n	4000590a <mvCtrlHighSpeedSerdesPhyConfig+0x125e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:829
			sgmiiPort = 2;
40005900:	f04f 0302 	mov.w	r3, #2
40005904:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40005908:	e017      	b.n	4000593a <mvCtrlHighSpeedSerdesPhyConfig+0x128e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:830
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
4000590a:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000590e:	f8df 3a90 	ldr.w	r3, [pc, #2704]	; 400063a0 <mvCtrlHighSpeedSerdesPhyConfig+0x1cf4>
40005912:	447b      	add	r3, pc
40005914:	4619      	mov	r1, r3
40005916:	4613      	mov	r3, r2
40005918:	ea4f 03c3 	mov.w	r3, r3, lsl #3
4000591c:	189b      	adds	r3, r3, r2
4000591e:	18cb      	adds	r3, r1, r3
40005920:	f103 0306 	add.w	r3, r3, #6
40005924:	781b      	ldrb	r3, [r3, #0]
40005926:	461a      	mov	r2, r3
40005928:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
4000592c:	429a      	cmp	r2, r3
4000592e:	f040 80a4 	bne.w	40005a7a <mvCtrlHighSpeedSerdesPhyConfig+0x13ce>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:831
			sgmiiPort = 3;
40005932:	f04f 0303 	mov.w	r3, #3
40005936:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:835
		else
			continue;
		/* 8)	Configure the desire PHY_MODE (bits [7:5]) and REF_FREF_SEL (bits[4:0]) in the register  */
		MV_REG_WRITE(SGMII_PWR_PLL_CTRL_REG(sgmiiPort), 0xF881);
4000593a:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
4000593e:	ea4f 0353 	mov.w	r3, r3, lsr #1
40005942:	b2db      	uxtb	r3, r3
40005944:	461a      	mov	r2, r3
40005946:	4613      	mov	r3, r2
40005948:	ea4f 7303 	mov.w	r3, r3, lsl #28
4000594c:	1a9b      	subs	r3, r3, r2
4000594e:	ea4f 1303 	mov.w	r3, r3, lsl #4
40005952:	461a      	mov	r2, r3
40005954:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005958:	f003 0301 	and.w	r3, r3, #1
4000595c:	18d3      	adds	r3, r2, r3
4000595e:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005962:	f503 23e5 	add.w	r3, r3, #468992	; 0x72800
40005966:	f203 6304 	addw	r3, r3, #1540	; 0x604
4000596a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000596e:	f64f 0281 	movw	r2, #63617	; 0xf881
40005972:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:839
		DEBUG_WR_REG(SGMII_PWR_PLL_CTRL_REG(sgmiiPort), 0xF881);

		/* 9)	Configure the desire SEL_BITS (bits [11:0] in register */
		MV_REG_WRITE(SGMII_DIG_LP_ENA_REG(sgmiiPort), 0);
40005974:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005978:	ea4f 0353 	mov.w	r3, r3, lsr #1
4000597c:	b2db      	uxtb	r3, r3
4000597e:	461a      	mov	r2, r3
40005980:	4613      	mov	r3, r2
40005982:	ea4f 7303 	mov.w	r3, r3, lsl #28
40005986:	1a9b      	subs	r3, r3, r2
40005988:	ea4f 1303 	mov.w	r3, r3, lsl #4
4000598c:	461a      	mov	r2, r3
4000598e:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005992:	f003 0301 	and.w	r3, r3, #1
40005996:	18d3      	adds	r3, r2, r3
40005998:	ea4f 3383 	mov.w	r3, r3, lsl #14
4000599c:	f503 23e5 	add.w	r3, r3, #468992	; 0x72800
400059a0:	f203 638c 	addw	r3, r3, #1676	; 0x68c
400059a4:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400059a8:	f04f 0200 	mov.w	r2, #0
400059ac:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:843
		DEBUG_WR_REG(SGMII_DIG_LP_ENA_REG(sgmiiPort), 0);

		/* 10)	Configure the desire REFCLK_SEL (bit [10]) in register  */
		MV_REG_WRITE(SGMII_REF_CLK_SEL_REG(sgmiiPort), 0x400);
400059ae:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
400059b2:	ea4f 0353 	mov.w	r3, r3, lsr #1
400059b6:	b2db      	uxtb	r3, r3
400059b8:	461a      	mov	r2, r3
400059ba:	4613      	mov	r3, r2
400059bc:	ea4f 7303 	mov.w	r3, r3, lsl #28
400059c0:	1a9b      	subs	r3, r3, r2
400059c2:	ea4f 1303 	mov.w	r3, r3, lsl #4
400059c6:	461a      	mov	r2, r3
400059c8:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
400059cc:	f003 0301 	and.w	r3, r3, #1
400059d0:	18d3      	adds	r3, r2, r3
400059d2:	ea4f 3383 	mov.w	r3, r3, lsl #14
400059d6:	f503 23e5 	add.w	r3, r3, #468992	; 0x72800
400059da:	f503 63e3 	add.w	r3, r3, #1816	; 0x718
400059de:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400059e2:	f44f 6280 	mov.w	r2, #1024	; 0x400
400059e6:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:848
		DEBUG_WR_REG(SGMII_REF_CLK_SEL_REG(sgmiiPort), 0x400);

		/* 11)	Power up to the PU_PLL,PU_RX,PU_TX.  */

		tmp = MV_REG_READ(SGMII_SERDES_CFG_REG(sgmiiPort));
400059e8:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
400059ec:	ea4f 0353 	mov.w	r3, r3, lsr #1
400059f0:	b2db      	uxtb	r3, r3
400059f2:	461a      	mov	r2, r3
400059f4:	4613      	mov	r3, r2
400059f6:	ea4f 7303 	mov.w	r3, r3, lsl #28
400059fa:	1a9b      	subs	r3, r3, r2
400059fc:	ea4f 1303 	mov.w	r3, r3, lsl #4
40005a00:	461a      	mov	r2, r3
40005a02:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005a06:	f003 0301 	and.w	r3, r3, #1
40005a0a:	18d3      	adds	r3, r2, r3
40005a0c:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005a10:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40005a14:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
40005a18:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005a1c:	4618      	mov	r0, r3
40005a1e:	f7fe fb45 	bl	400040ac <MV_MEMIO_LE32_READ>
40005a22:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:850
		DEBUG_RD_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp );
		tmp |= 7;
40005a26:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005a2a:	f043 0307 	orr.w	r3, r3, #7
40005a2e:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:851
		MV_REG_WRITE(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);
40005a32:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005a36:	ea4f 0353 	mov.w	r3, r3, lsr #1
40005a3a:	b2db      	uxtb	r3, r3
40005a3c:	461a      	mov	r2, r3
40005a3e:	4613      	mov	r3, r2
40005a40:	ea4f 7303 	mov.w	r3, r3, lsl #28
40005a44:	1a9b      	subs	r3, r3, r2
40005a46:	ea4f 1303 	mov.w	r3, r3, lsl #4
40005a4a:	461a      	mov	r2, r3
40005a4c:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005a50:	f003 0301 	and.w	r3, r3, #1
40005a54:	18d3      	adds	r3, r2, r3
40005a56:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005a5a:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40005a5e:	f503 6394 	add.w	r3, r3, #1184	; 0x4a0
40005a62:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005a66:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40005a6a:	601a      	str	r2, [r3, #0]
40005a6c:	e006      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:754
		/* for each serdes lane*/

		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
			continue;
40005a6e:	bf00      	nop
40005a70:	e004      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:765
			/* Needed for PEX_PHY_ACCESS_REG macro */
			if ((serdesLineNum > 7) && (pSerdesInfo->pexMod[3] == PEX_BUS_MODE_X8))
				pexUnit = 3; /* lines 8 - 15 are belong to PEX3 in x8 mode */

			if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
				continue;
40005a72:	bf00      	nop
40005a74:	e002      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:773
			if (((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && (0 == pexLineNum)) ||
				((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X1))){
				MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit),(0x01 << 16) | (pexLineNum << 24) | 0xFC60);
				DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit),(0x01 << 16) | (pexLineNum << 24) | 0xFC60);
			}
			continue;
40005a76:	bf00      	nop
40005a78:	e000      	b.n	40005a7c <mvCtrlHighSpeedSerdesPhyConfig+0x13d0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:833
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
			sgmiiPort = 2;
		else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
			sgmiiPort = 3;
		else
			continue;
40005a7a:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:748
	/* Steps  8 , 9 ,10 - use prepared REG addresses and values */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 7,8,9,10 and 11\n");

	/* Prepare PHY parameters for each step according to  MUX selection */
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005a7c:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005a80:	f103 0301 	add.w	r3, r3, #1
40005a84:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005a88:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005a8c:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40005a90:	429a      	cmp	r2, r3
40005a92:	f4ff adcd 	bcc.w	40005630 <mvCtrlHighSpeedSerdesPhyConfig+0xf84>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:857
		DEBUG_WR_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);

	} /* for each serdes lane*/
	/* Step 12 [PEX-Only] Last phase of PEX-PIPE Configuration */
	DEBUG_INIT_FULL_S("Steps 12: [PEX-Only] Last phase of PEX-PIPE Configuration");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005a96:	f04f 0300 	mov.w	r3, #0
40005a9a:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005a9e:	e05e      	b.n	40005b5e <mvCtrlHighSpeedSerdesPhyConfig+0x14b2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:860
		/* for each serdes lane*/

		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40005aa0:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005aa4:	4618      	mov	r0, r3
40005aa6:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
40005aaa:	f7fe fddb 	bl	40004664 <get_serdesLineCfg>
40005aae:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:862

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
40005ab2:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005ab6:	f8df 38ec 	ldr.w	r3, [pc, #2284]	; 400063a4 <mvCtrlHighSpeedSerdesPhyConfig+0x1cf8>
40005aba:	447b      	add	r3, pc
40005abc:	4619      	mov	r1, r3
40005abe:	4613      	mov	r3, r2
40005ac0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005ac4:	189b      	adds	r3, r3, r2
40005ac6:	18cb      	adds	r3, r1, r3
40005ac8:	781b      	ldrb	r3, [r3, #0]
40005aca:	461a      	mov	r2, r3
40005acc:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005ad0:	429a      	cmp	r2, r3
40005ad2:	d03d      	beq.n	40005b50 <mvCtrlHighSpeedSerdesPhyConfig+0x14a4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:865
			continue;

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX]) {
40005ad4:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005ad8:	f8df 38cc 	ldr.w	r3, [pc, #2252]	; 400063a8 <mvCtrlHighSpeedSerdesPhyConfig+0x1cfc>
40005adc:	447b      	add	r3, pc
40005ade:	4619      	mov	r1, r3
40005ae0:	4613      	mov	r3, r2
40005ae2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005ae6:	189b      	adds	r3, r3, r2
40005ae8:	18cb      	adds	r3, r1, r3
40005aea:	f103 0301 	add.w	r3, r3, #1
40005aee:	781b      	ldrb	r3, [r3, #0]
40005af0:	461a      	mov	r2, r3
40005af2:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005af6:	429a      	cmp	r2, r3
40005af8:	d12b      	bne.n	40005b52 <mvCtrlHighSpeedSerdesPhyConfig+0x14a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:866
			pexUnit    = serdesLineNum >> 2;
40005afa:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005afe:	ea4f 0393 	mov.w	r3, r3, lsr #2
40005b02:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:867
			pexLineNum = serdesLineNum % 4;
40005b06:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005b0a:	f003 0303 	and.w	r3, r3, #3
40005b0e:	f887 3597 	strb.w	r3, [r7, #1431]	; 0x597
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:868
			if (0 == pexLineNum){
40005b12:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40005b16:	2b00      	cmp	r3, #0
40005b18:	d11b      	bne.n	40005b52 <mvCtrlHighSpeedSerdesPhyConfig+0x14a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:869
				MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit), (0xC1 << 16) | 0x24);
40005b1a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005b1e:	f003 0301 	and.w	r3, r3, #1
40005b22:	f103 0301 	add.w	r3, r3, #1
40005b26:	ea4f 1243 	mov.w	r2, r3, lsl #5
40005b2a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005b2e:	ea4f 0353 	mov.w	r3, r3, lsr #1
40005b32:	b2db      	uxtb	r3, r3
40005b34:	18d3      	adds	r3, r2, r3
40005b36:	ea4f 3343 	mov.w	r3, r3, lsl #13
40005b3a:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
40005b3e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005b42:	461a      	mov	r2, r3
40005b44:	f04f 0324 	mov.w	r3, #36	; 0x24
40005b48:	f2c0 03c1 	movt	r3, #193	; 0xc1
40005b4c:	6013      	str	r3, [r2, #0]
40005b4e:	e000      	b.n	40005b52 <mvCtrlHighSpeedSerdesPhyConfig+0x14a6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:863
		/* for each serdes lane*/

		serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);

		if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
			continue;
40005b50:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:857
		DEBUG_WR_REG(SGMII_SERDES_CFG_REG(sgmiiPort), tmp);

	} /* for each serdes lane*/
	/* Step 12 [PEX-Only] Last phase of PEX-PIPE Configuration */
	DEBUG_INIT_FULL_S("Steps 12: [PEX-Only] Last phase of PEX-PIPE Configuration");
	for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005b52:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005b56:	f103 0301 	add.w	r3, r3, #1
40005b5a:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005b5e:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005b62:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40005b66:	429a      	cmp	r2, r3
40005b68:	d39a      	bcc.n	40005aa0 <mvCtrlHighSpeedSerdesPhyConfig+0x13f4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:878
	}

	/*--------------------------------------------------------------*/
	/* Step 13: Wait 15ms before checking results */
	DEBUG_INIT_FULL_S("Steps 13: Wait 15ms before checking results");
	mvOsDelay(15);
40005b6a:	f643 2098 	movw	r0, #15000	; 0x3a98
40005b6e:	f001 fdb1 	bl	400076d4 <__udelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:879
	tmp = 20;
40005b72:	f04f 0314 	mov.w	r3, #20
40005b76:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:880
	while(tmp)
40005b7a:	e13f      	b.n	40005dfc <mvCtrlHighSpeedSerdesPhyConfig+0x1750>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:882
	{
		status=MV_OK;
40005b7c:	f04f 0300 	mov.w	r3, #0
40005b80:	f8c7 35c4 	str.w	r3, [r7, #1476]	; 0x5c4
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:883
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005b84:	f04f 0300 	mov.w	r3, #0
40005b88:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005b8c:	e121      	b.n	40005dd2 <mvCtrlHighSpeedSerdesPhyConfig+0x1726>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:885
			MV_U32  tmp;
			serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40005b8e:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005b92:	4618      	mov	r0, r3
40005b94:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
40005b98:	f7fe fd64 	bl	40004664 <get_serdesLineCfg>
40005b9c:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:886
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
40005ba0:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005ba4:	f8df 3804 	ldr.w	r3, [pc, #2052]	; 400063ac <mvCtrlHighSpeedSerdesPhyConfig+0x1d00>
40005ba8:	447b      	add	r3, pc
40005baa:	4619      	mov	r1, r3
40005bac:	4613      	mov	r3, r2
40005bae:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005bb2:	189b      	adds	r3, r3, r2
40005bb4:	18cb      	adds	r3, r1, r3
40005bb6:	781b      	ldrb	r3, [r3, #0]
40005bb8:	461a      	mov	r2, r3
40005bba:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005bbe:	429a      	cmp	r2, r3
40005bc0:	f000 80f8 	beq.w	40005db4 <mvCtrlHighSpeedSerdesPhyConfig+0x1708>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:889
				continue;

			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX])
40005bc4:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005bc8:	f8df 37e4 	ldr.w	r3, [pc, #2020]	; 400063b0 <mvCtrlHighSpeedSerdesPhyConfig+0x1d04>
40005bcc:	447b      	add	r3, pc
40005bce:	4619      	mov	r1, r3
40005bd0:	4613      	mov	r3, r2
40005bd2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005bd6:	189b      	adds	r3, r3, r2
40005bd8:	18cb      	adds	r3, r1, r3
40005bda:	f103 0301 	add.w	r3, r3, #1
40005bde:	781b      	ldrb	r3, [r3, #0]
40005be0:	461a      	mov	r2, r3
40005be2:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005be6:	429a      	cmp	r2, r3
40005be8:	f000 80e6 	beq.w	40005db8 <mvCtrlHighSpeedSerdesPhyConfig+0x170c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:892
					continue;

			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SATA]) {
40005bec:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005bf0:	f8df 37c0 	ldr.w	r3, [pc, #1984]	; 400063b4 <mvCtrlHighSpeedSerdesPhyConfig+0x1d08>
40005bf4:	447b      	add	r3, pc
40005bf6:	4619      	mov	r1, r3
40005bf8:	4613      	mov	r3, r2
40005bfa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005bfe:	189b      	adds	r3, r3, r2
40005c00:	18cb      	adds	r3, r1, r3
40005c02:	f103 0302 	add.w	r3, r3, #2
40005c06:	781b      	ldrb	r3, [r3, #0]
40005c08:	461a      	mov	r2, r3
40005c0a:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005c0e:	429a      	cmp	r2, r3
40005c10:	d120      	bne.n	40005c54 <mvCtrlHighSpeedSerdesPhyConfig+0x15a8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:893
				sataPort =  serdesLineNum & 1; /* port 0 for serdes lines 4,6,  and port 1 for serdes lines 5*/
40005c12:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005c16:	f003 0301 	and.w	r3, r3, #1
40005c1a:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:895

				tmp = MV_REG_READ(SATA_LP_PHY_EXT_STAT_REG(sataPort));
40005c1e:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40005c22:	f103 0351 	add.w	r3, r3, #81	; 0x51
40005c26:	ea4f 3343 	mov.w	r3, r3, lsl #13
40005c2a:	f103 035c 	add.w	r3, r3, #92	; 0x5c
40005c2e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005c32:	4618      	mov	r0, r3
40005c34:	f7fe fa3a 	bl	400040ac <MV_MEMIO_LE32_READ>
40005c38:	f8c7 0590 	str.w	r0, [r7, #1424]	; 0x590
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:897
				DEBUG_RD_REG(SATA_LP_PHY_EXT_STAT_REG(sataPort), tmp );
				if ((tmp & 0x7) !=  0x7)
40005c3c:	f8d7 3590 	ldr.w	r3, [r7, #1424]	; 0x590
40005c40:	f003 0307 	and.w	r3, r3, #7
40005c44:	2b07      	cmp	r3, #7
40005c46:	f000 80b9 	beq.w	40005dbc <mvCtrlHighSpeedSerdesPhyConfig+0x1710>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:898
					status = MV_ERROR;
40005c4a:	f04f 33ff 	mov.w	r3, #4294967295
40005c4e:	f8c7 35c4 	str.w	r3, [r7, #1476]	; 0x5c4
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:899
				continue;
40005c52:	e0b3      	b.n	40005dbc <mvCtrlHighSpeedSerdesPhyConfig+0x1710>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:901
			}
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
40005c54:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005c58:	f8df 375c 	ldr.w	r3, [pc, #1884]	; 400063b8 <mvCtrlHighSpeedSerdesPhyConfig+0x1d0c>
40005c5c:	447b      	add	r3, pc
40005c5e:	4619      	mov	r1, r3
40005c60:	4613      	mov	r3, r2
40005c62:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005c66:	189b      	adds	r3, r3, r2
40005c68:	18cb      	adds	r3, r1, r3
40005c6a:	f103 0307 	add.w	r3, r3, #7
40005c6e:	781b      	ldrb	r3, [r3, #0]
40005c70:	461a      	mov	r2, r3
40005c72:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005c76:	429a      	cmp	r2, r3
40005c78:	d113      	bne.n	40005ca2 <mvCtrlHighSpeedSerdesPhyConfig+0x15f6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:902
				tmp = MV_REG_READ(SGMII_SERDES_STAT_REG(0)); 
40005c7a:	f242 40a4 	movw	r0, #9380	; 0x24a4
40005c7e:	f2cd 0007 	movt	r0, #53255	; 0xd007
40005c82:	f7fe fa13 	bl	400040ac <MV_MEMIO_LE32_READ>
40005c86:	f8c7 0590 	str.w	r0, [r7, #1424]	; 0x590
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:904
				DEBUG_RD_REG(SGMII_SERDES_STAT_REG(0), tmp) ; 
				if ((tmp & 0x7) !=  0x7)
40005c8a:	f8d7 3590 	ldr.w	r3, [r7, #1424]	; 0x590
40005c8e:	f003 0307 	and.w	r3, r3, #7
40005c92:	2b07      	cmp	r3, #7
40005c94:	f000 8094 	beq.w	40005dc0 <mvCtrlHighSpeedSerdesPhyConfig+0x1714>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:905
					status = MV_ERROR;
40005c98:	f04f 33ff 	mov.w	r3, #4294967295
40005c9c:	f8c7 35c4 	str.w	r3, [r7, #1476]	; 0x5c4
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:906
				continue;
40005ca0:	e08e      	b.n	40005dc0 <mvCtrlHighSpeedSerdesPhyConfig+0x1714>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:908
			}
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII0])
40005ca2:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005ca6:	f8df 3714 	ldr.w	r3, [pc, #1812]	; 400063bc <mvCtrlHighSpeedSerdesPhyConfig+0x1d10>
40005caa:	447b      	add	r3, pc
40005cac:	4619      	mov	r1, r3
40005cae:	4613      	mov	r3, r2
40005cb0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005cb4:	189b      	adds	r3, r3, r2
40005cb6:	18cb      	adds	r3, r1, r3
40005cb8:	f103 0303 	add.w	r3, r3, #3
40005cbc:	781b      	ldrb	r3, [r3, #0]
40005cbe:	461a      	mov	r2, r3
40005cc0:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005cc4:	429a      	cmp	r2, r3
40005cc6:	d104      	bne.n	40005cd2 <mvCtrlHighSpeedSerdesPhyConfig+0x1626>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:909
				sgmiiPort = 0;
40005cc8:	f04f 0300 	mov.w	r3, #0
40005ccc:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40005cd0:	e046      	b.n	40005d60 <mvCtrlHighSpeedSerdesPhyConfig+0x16b4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:910
			else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII1])
40005cd2:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005cd6:	f8df 36e8 	ldr.w	r3, [pc, #1768]	; 400063c0 <mvCtrlHighSpeedSerdesPhyConfig+0x1d14>
40005cda:	447b      	add	r3, pc
40005cdc:	4619      	mov	r1, r3
40005cde:	4613      	mov	r3, r2
40005ce0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005ce4:	189b      	adds	r3, r3, r2
40005ce6:	18cb      	adds	r3, r1, r3
40005ce8:	f103 0304 	add.w	r3, r3, #4
40005cec:	781b      	ldrb	r3, [r3, #0]
40005cee:	461a      	mov	r2, r3
40005cf0:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005cf4:	429a      	cmp	r2, r3
40005cf6:	d104      	bne.n	40005d02 <mvCtrlHighSpeedSerdesPhyConfig+0x1656>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:911
				sgmiiPort = 1;
40005cf8:	f04f 0301 	mov.w	r3, #1
40005cfc:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40005d00:	e02e      	b.n	40005d60 <mvCtrlHighSpeedSerdesPhyConfig+0x16b4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:912
			else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
40005d02:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005d06:	f8df 36bc 	ldr.w	r3, [pc, #1724]	; 400063c4 <mvCtrlHighSpeedSerdesPhyConfig+0x1d18>
40005d0a:	447b      	add	r3, pc
40005d0c:	4619      	mov	r1, r3
40005d0e:	4613      	mov	r3, r2
40005d10:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005d14:	189b      	adds	r3, r3, r2
40005d16:	18cb      	adds	r3, r1, r3
40005d18:	f103 0305 	add.w	r3, r3, #5
40005d1c:	781b      	ldrb	r3, [r3, #0]
40005d1e:	461a      	mov	r2, r3
40005d20:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005d24:	429a      	cmp	r2, r3
40005d26:	d104      	bne.n	40005d32 <mvCtrlHighSpeedSerdesPhyConfig+0x1686>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:913
				sgmiiPort = 2;
40005d28:	f04f 0302 	mov.w	r3, #2
40005d2c:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40005d30:	e016      	b.n	40005d60 <mvCtrlHighSpeedSerdesPhyConfig+0x16b4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:914
			else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
40005d32:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005d36:	f8df 3690 	ldr.w	r3, [pc, #1680]	; 400063c8 <mvCtrlHighSpeedSerdesPhyConfig+0x1d1c>
40005d3a:	447b      	add	r3, pc
40005d3c:	4619      	mov	r1, r3
40005d3e:	4613      	mov	r3, r2
40005d40:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40005d44:	189b      	adds	r3, r3, r2
40005d46:	18cb      	adds	r3, r1, r3
40005d48:	f103 0306 	add.w	r3, r3, #6
40005d4c:	781b      	ldrb	r3, [r3, #0]
40005d4e:	461a      	mov	r2, r3
40005d50:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40005d54:	429a      	cmp	r2, r3
40005d56:	d135      	bne.n	40005dc4 <mvCtrlHighSpeedSerdesPhyConfig+0x1718>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:915
				sgmiiPort = 3;
40005d58:	f04f 0303 	mov.w	r3, #3
40005d5c:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:918
			else
				continue;
			tmp = MV_REG_READ(SGMII_SERDES_STAT_REG(sgmiiPort));
40005d60:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005d64:	ea4f 0353 	mov.w	r3, r3, lsr #1
40005d68:	b2db      	uxtb	r3, r3
40005d6a:	461a      	mov	r2, r3
40005d6c:	4613      	mov	r3, r2
40005d6e:	ea4f 7303 	mov.w	r3, r3, lsl #28
40005d72:	1a9b      	subs	r3, r3, r2
40005d74:	ea4f 1303 	mov.w	r3, r3, lsl #4
40005d78:	461a      	mov	r2, r3
40005d7a:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40005d7e:	f003 0301 	and.w	r3, r3, #1
40005d82:	18d3      	adds	r3, r2, r3
40005d84:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005d88:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40005d8c:	f203 43a4 	addw	r3, r3, #1188	; 0x4a4
40005d90:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005d94:	4618      	mov	r0, r3
40005d96:	f7fe f989 	bl	400040ac <MV_MEMIO_LE32_READ>
40005d9a:	f8c7 0590 	str.w	r0, [r7, #1424]	; 0x590
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:920
			DEBUG_RD_REG(SGMII_SERDES_STAT_REG(sgmiiPort), tmp );
			if ((tmp & 0x7) !=  0x7)
40005d9e:	f8d7 3590 	ldr.w	r3, [r7, #1424]	; 0x590
40005da2:	f003 0307 	and.w	r3, r3, #7
40005da6:	2b07      	cmp	r3, #7
40005da8:	d00d      	beq.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:921
				status = MV_ERROR;
40005daa:	f04f 33ff 	mov.w	r3, #4294967295
40005dae:	f8c7 35c4 	str.w	r3, [r7, #1476]	; 0x5c4
40005db2:	e008      	b.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:887
		status=MV_OK;
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
			MV_U32  tmp;
			serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
				continue;
40005db4:	bf00      	nop
40005db6:	e006      	b.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:890

			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_PEX])
					continue;
40005db8:	bf00      	nop
40005dba:	e004      	b.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:899

				tmp = MV_REG_READ(SATA_LP_PHY_EXT_STAT_REG(sataPort));
				DEBUG_RD_REG(SATA_LP_PHY_EXT_STAT_REG(sataPort), tmp );
				if ((tmp & 0x7) !=  0x7)
					status = MV_ERROR;
				continue;
40005dbc:	bf00      	nop
40005dbe:	e002      	b.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:906
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_QSGMII]) {
				tmp = MV_REG_READ(SGMII_SERDES_STAT_REG(0)); 
				DEBUG_RD_REG(SGMII_SERDES_STAT_REG(0), tmp) ; 
				if ((tmp & 0x7) !=  0x7)
					status = MV_ERROR;
				continue;
40005dc0:	bf00      	nop
40005dc2:	e000      	b.n	40005dc6 <mvCtrlHighSpeedSerdesPhyConfig+0x171a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:917
			else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
				sgmiiPort = 2;
			else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
				sgmiiPort = 3;
			else
				continue;
40005dc4:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:883
	mvOsDelay(15);
	tmp = 20;
	while(tmp)
	{
		status=MV_OK;
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40005dc6:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40005dca:	f103 0301 	add.w	r3, r3, #1
40005dce:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
40005dd2:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40005dd6:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40005dda:	429a      	cmp	r2, r3
40005ddc:	f4ff aed7 	bcc.w	40005b8e <mvCtrlHighSpeedSerdesPhyConfig+0x14e2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:923
			tmp = MV_REG_READ(SGMII_SERDES_STAT_REG(sgmiiPort));
			DEBUG_RD_REG(SGMII_SERDES_STAT_REG(sgmiiPort), tmp );
			if ((tmp & 0x7) !=  0x7)
				status = MV_ERROR;
		}
		if (status == MV_OK) 
40005de0:	f8d7 35c4 	ldr.w	r3, [r7, #1476]	; 0x5c4
40005de4:	2b00      	cmp	r3, #0
40005de6:	d00f      	beq.n	40005e08 <mvCtrlHighSpeedSerdesPhyConfig+0x175c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:925
			break;
		mvOsDelay(5);
40005de8:	f241 3088 	movw	r0, #5000	; 0x1388
40005dec:	f001 fc72 	bl	400076d4 <__udelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:926
		tmp--;
40005df0:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005df4:	f103 33ff 	add.w	r3, r3, #4294967295
40005df8:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:880
	/*--------------------------------------------------------------*/
	/* Step 13: Wait 15ms before checking results */
	DEBUG_INIT_FULL_S("Steps 13: Wait 15ms before checking results");
	mvOsDelay(15);
	tmp = 20;
	while(tmp)
40005dfc:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005e00:	2b00      	cmp	r3, #0
40005e02:	f47f aebb 	bne.w	40005b7c <mvCtrlHighSpeedSerdesPhyConfig+0x14d0>
40005e06:	e000      	b.n	40005e0a <mvCtrlHighSpeedSerdesPhyConfig+0x175e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:924
			DEBUG_RD_REG(SGMII_SERDES_STAT_REG(sgmiiPort), tmp );
			if ((tmp & 0x7) !=  0x7)
				status = MV_ERROR;
		}
		if (status == MV_OK) 
			break;
40005e08:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:932
	}

	/* step14 [PEX-Only]  In order to configure RC/EP mode please write  to register 0x0060 bits */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 14: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40005e0a:	f04f 0300 	mov.w	r3, #0
40005e0e:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
40005e12:	e0c8      	b.n	40005fa6 <mvCtrlHighSpeedSerdesPhyConfig+0x18fa>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:933
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
40005e14:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e18:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40005e1c:	18d3      	adds	r3, r2, r3
40005e1e:	7b1b      	ldrb	r3, [r3, #12]
40005e20:	2b00      	cmp	r3, #0
40005e22:	f000 80b9 	beq.w	40005f98 <mvCtrlHighSpeedSerdesPhyConfig+0x18ec>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:935
			continue;
		tmp = MV_REG_READ(PEX_CAPABILITIES_REG(MV_PEX_UNIT_TO_IF(pexUnit)));
40005e26:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e2a:	2b02      	cmp	r3, #2
40005e2c:	d830      	bhi.n	40005e90 <mvCtrlHighSpeedSerdesPhyConfig+0x17e4>
40005e2e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e32:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005e36:	2b07      	cmp	r3, #7
40005e38:	dc2a      	bgt.n	40005e90 <mvCtrlHighSpeedSerdesPhyConfig+0x17e4>
40005e3a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e3e:	2b02      	cmp	r3, #2
40005e40:	d80f      	bhi.n	40005e62 <mvCtrlHighSpeedSerdesPhyConfig+0x17b6>
40005e42:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e46:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005e4a:	f103 0203 	add.w	r2, r3, #3
40005e4e:	2b00      	cmp	r3, #0
40005e50:	bfb8      	it	lt
40005e52:	4613      	movlt	r3, r2
40005e54:	ea4f 03a3 	mov.w	r3, r3, asr #2
40005e58:	f103 0301 	add.w	r3, r3, #1
40005e5c:	ea4f 4283 	mov.w	r2, r3, lsl #18
40005e60:	e001      	b.n	40005e66 <mvCtrlHighSpeedSerdesPhyConfig+0x17ba>
40005e62:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
40005e66:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e6a:	2b02      	cmp	r3, #2
40005e6c:	d808      	bhi.n	40005e80 <mvCtrlHighSpeedSerdesPhyConfig+0x17d4>
40005e6e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e72:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005e76:	f003 0303 	and.w	r3, r3, #3
40005e7a:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005e7e:	e001      	b.n	40005e84 <mvCtrlHighSpeedSerdesPhyConfig+0x17d8>
40005e80:	f44f 4380 	mov.w	r3, #16384	; 0x4000
40005e84:	18d3      	adds	r3, r2, r3
40005e86:	f103 0360 	add.w	r3, r3, #96	; 0x60
40005e8a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005e8e:	e016      	b.n	40005ebe <mvCtrlHighSpeedSerdesPhyConfig+0x1812>
40005e90:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e94:	2b02      	cmp	r3, #2
40005e96:	d80e      	bhi.n	40005eb6 <mvCtrlHighSpeedSerdesPhyConfig+0x180a>
40005e98:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005e9c:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005ea0:	f003 0307 	and.w	r3, r3, #7
40005ea4:	ea4f 4383 	mov.w	r3, r3, lsl #18
40005ea8:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
40005eac:	f103 0360 	add.w	r3, r3, #96	; 0x60
40005eb0:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005eb4:	e003      	b.n	40005ebe <mvCtrlHighSpeedSerdesPhyConfig+0x1812>
40005eb6:	f242 0360 	movw	r3, #8288	; 0x2060
40005eba:	f2cd 0308 	movt	r3, #53256	; 0xd008
40005ebe:	4618      	mov	r0, r3
40005ec0:	f7fe f8f4 	bl	400040ac <MV_MEMIO_LE32_READ>
40005ec4:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:937
		DEBUG_RD_REG(PEX_CAPABILITIES_REG(MV_PEX_UNIT_TO_IF(pexUnit)), tmp );
		tmp &= ~(0xf<<20);
40005ec8:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005ecc:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
40005ed0:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:938
		if ( pSerdesInfo->pexType == MV_PEX_ROOT_COMPLEX)
40005ed4:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40005ed8:	781b      	ldrb	r3, [r3, #0]
40005eda:	2b00      	cmp	r3, #0
40005edc:	d106      	bne.n	40005eec <mvCtrlHighSpeedSerdesPhyConfig+0x1840>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:939
			tmp |= (0x4<<20);
40005ede:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005ee2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
40005ee6:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
40005eea:	e005      	b.n	40005ef8 <mvCtrlHighSpeedSerdesPhyConfig+0x184c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:941
		else
			tmp	|= (0x1<<20);
40005eec:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40005ef0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
40005ef4:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:942
		MV_REG_WRITE(PEX_CAPABILITIES_REG(MV_PEX_UNIT_TO_IF(pexUnit)),tmp);
40005ef8:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005efc:	2b02      	cmp	r3, #2
40005efe:	d830      	bhi.n	40005f62 <mvCtrlHighSpeedSerdesPhyConfig+0x18b6>
40005f00:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f04:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005f08:	2b07      	cmp	r3, #7
40005f0a:	dc2a      	bgt.n	40005f62 <mvCtrlHighSpeedSerdesPhyConfig+0x18b6>
40005f0c:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f10:	2b02      	cmp	r3, #2
40005f12:	d80f      	bhi.n	40005f34 <mvCtrlHighSpeedSerdesPhyConfig+0x1888>
40005f14:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f18:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005f1c:	f103 0203 	add.w	r2, r3, #3
40005f20:	2b00      	cmp	r3, #0
40005f22:	bfb8      	it	lt
40005f24:	4613      	movlt	r3, r2
40005f26:	ea4f 03a3 	mov.w	r3, r3, asr #2
40005f2a:	f103 0301 	add.w	r3, r3, #1
40005f2e:	ea4f 4283 	mov.w	r2, r3, lsl #18
40005f32:	e001      	b.n	40005f38 <mvCtrlHighSpeedSerdesPhyConfig+0x188c>
40005f34:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
40005f38:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f3c:	2b02      	cmp	r3, #2
40005f3e:	d808      	bhi.n	40005f52 <mvCtrlHighSpeedSerdesPhyConfig+0x18a6>
40005f40:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f44:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005f48:	f003 0303 	and.w	r3, r3, #3
40005f4c:	ea4f 3383 	mov.w	r3, r3, lsl #14
40005f50:	e001      	b.n	40005f56 <mvCtrlHighSpeedSerdesPhyConfig+0x18aa>
40005f52:	f44f 4380 	mov.w	r3, #16384	; 0x4000
40005f56:	18d3      	adds	r3, r2, r3
40005f58:	f103 0360 	add.w	r3, r3, #96	; 0x60
40005f5c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005f60:	e016      	b.n	40005f90 <mvCtrlHighSpeedSerdesPhyConfig+0x18e4>
40005f62:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f66:	2b02      	cmp	r3, #2
40005f68:	d80e      	bhi.n	40005f88 <mvCtrlHighSpeedSerdesPhyConfig+0x18dc>
40005f6a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f6e:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005f72:	f003 0307 	and.w	r3, r3, #7
40005f76:	ea4f 4383 	mov.w	r3, r3, lsl #18
40005f7a:	f503 2384 	add.w	r3, r3, #270336	; 0x42000
40005f7e:	f103 0360 	add.w	r3, r3, #96	; 0x60
40005f82:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40005f86:	e003      	b.n	40005f90 <mvCtrlHighSpeedSerdesPhyConfig+0x18e4>
40005f88:	f242 0360 	movw	r3, #8288	; 0x2060
40005f8c:	f2cd 0308 	movt	r3, #53256	; 0xd008
40005f90:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40005f94:	601a      	str	r2, [r3, #0]
40005f96:	e000      	b.n	40005f9a <mvCtrlHighSpeedSerdesPhyConfig+0x18ee>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:934
	/* step14 [PEX-Only]  In order to configure RC/EP mode please write  to register 0x0060 bits */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 14: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
			continue;
40005f98:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:932
	}

	/* step14 [PEX-Only]  In order to configure RC/EP mode please write  to register 0x0060 bits */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 14: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40005f9a:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005f9e:	f103 0301 	add.w	r3, r3, #1
40005fa2:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
40005fa6:	f897 45c2 	ldrb.w	r4, [r7, #1474]	; 0x5c2
40005faa:	f7fe fafd 	bl	400045a8 <mvCtrlPexMaxUnitGet>
40005fae:	4603      	mov	r3, r0
40005fb0:	429c      	cmp	r4, r3
40005fb2:	f4ff af2f 	bcc.w	40005e14 <mvCtrlHighSpeedSerdesPhyConfig+0x1768>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:949
	}
		
	/* step 15 [PEX-Only] Only for EP mode set to Zero bits 19 and 16 of register 0x1a60 */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 15: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40005fb6:	f04f 0300 	mov.w	r3, #0
40005fba:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
40005fbe:	e0bc      	b.n	4000613a <mvCtrlHighSpeedSerdesPhyConfig+0x1a8e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:950
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
40005fc0:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005fc4:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40005fc8:	18d3      	adds	r3, r2, r3
40005fca:	7b1b      	ldrb	r3, [r3, #12]
40005fcc:	2b00      	cmp	r3, #0
40005fce:	f000 80ad 	beq.w	4000612c <mvCtrlHighSpeedSerdesPhyConfig+0x1a80>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:952
			continue;
		if ( pSerdesInfo->pexType == MV_PEX_END_POINT){
40005fd2:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40005fd6:	781b      	ldrb	r3, [r3, #0]
40005fd8:	2b01      	cmp	r3, #1
40005fda:	f040 80a8 	bne.w	4000612e <mvCtrlHighSpeedSerdesPhyConfig+0x1a82>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:953
			tmp = MV_REG_READ(PEX_DBG_CTRL_REG(MV_PEX_UNIT_TO_IF(pexUnit)));
40005fde:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005fe2:	2b02      	cmp	r3, #2
40005fe4:	d830      	bhi.n	40006048 <mvCtrlHighSpeedSerdesPhyConfig+0x199c>
40005fe6:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005fea:	ea4f 0383 	mov.w	r3, r3, lsl #2
40005fee:	2b07      	cmp	r3, #7
40005ff0:	dc2a      	bgt.n	40006048 <mvCtrlHighSpeedSerdesPhyConfig+0x199c>
40005ff2:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005ff6:	2b02      	cmp	r3, #2
40005ff8:	d80f      	bhi.n	4000601a <mvCtrlHighSpeedSerdesPhyConfig+0x196e>
40005ffa:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40005ffe:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006002:	f103 0203 	add.w	r2, r3, #3
40006006:	2b00      	cmp	r3, #0
40006008:	bfb8      	it	lt
4000600a:	4613      	movlt	r3, r2
4000600c:	ea4f 03a3 	mov.w	r3, r3, asr #2
40006010:	f103 0301 	add.w	r3, r3, #1
40006014:	ea4f 4283 	mov.w	r2, r3, lsl #18
40006018:	e001      	b.n	4000601e <mvCtrlHighSpeedSerdesPhyConfig+0x1972>
4000601a:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
4000601e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006022:	2b02      	cmp	r3, #2
40006024:	d808      	bhi.n	40006038 <mvCtrlHighSpeedSerdesPhyConfig+0x198c>
40006026:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000602a:	ea4f 0383 	mov.w	r3, r3, lsl #2
4000602e:	f003 0303 	and.w	r3, r3, #3
40006032:	ea4f 3383 	mov.w	r3, r3, lsl #14
40006036:	e001      	b.n	4000603c <mvCtrlHighSpeedSerdesPhyConfig+0x1990>
40006038:	f44f 4380 	mov.w	r3, #16384	; 0x4000
4000603c:	18d3      	adds	r3, r2, r3
4000603e:	f503 53d3 	add.w	r3, r3, #6752	; 0x1a60
40006042:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006046:	e016      	b.n	40006076 <mvCtrlHighSpeedSerdesPhyConfig+0x19ca>
40006048:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000604c:	2b02      	cmp	r3, #2
4000604e:	d80e      	bhi.n	4000606e <mvCtrlHighSpeedSerdesPhyConfig+0x19c2>
40006050:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006054:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006058:	f003 0307 	and.w	r3, r3, #7
4000605c:	ea4f 4383 	mov.w	r3, r3, lsl #18
40006060:	f503 2387 	add.w	r3, r3, #276480	; 0x43800
40006064:	f503 7318 	add.w	r3, r3, #608	; 0x260
40006068:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000606c:	e003      	b.n	40006076 <mvCtrlHighSpeedSerdesPhyConfig+0x19ca>
4000606e:	f643 2360 	movw	r3, #14944	; 0x3a60
40006072:	f2cd 0308 	movt	r3, #53256	; 0xd008
40006076:	4618      	mov	r0, r3
40006078:	f7fe f818 	bl	400040ac <MV_MEMIO_LE32_READ>
4000607c:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:955
			DEBUG_RD_REG(PEX_DBG_CTRL_REG(MV_PEX_UNIT_TO_IF(pexUnit)), tmp );
			tmp &= 0xfff6ffff;
40006080:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
40006084:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
40006088:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:956
			MV_REG_WRITE(PEX_DBG_CTRL_REG(MV_PEX_UNIT_TO_IF(pexUnit)),tmp);
4000608c:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006090:	2b02      	cmp	r3, #2
40006092:	d830      	bhi.n	400060f6 <mvCtrlHighSpeedSerdesPhyConfig+0x1a4a>
40006094:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006098:	ea4f 0383 	mov.w	r3, r3, lsl #2
4000609c:	2b07      	cmp	r3, #7
4000609e:	dc2a      	bgt.n	400060f6 <mvCtrlHighSpeedSerdesPhyConfig+0x1a4a>
400060a0:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400060a4:	2b02      	cmp	r3, #2
400060a6:	d80f      	bhi.n	400060c8 <mvCtrlHighSpeedSerdesPhyConfig+0x1a1c>
400060a8:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400060ac:	ea4f 0383 	mov.w	r3, r3, lsl #2
400060b0:	f103 0203 	add.w	r2, r3, #3
400060b4:	2b00      	cmp	r3, #0
400060b6:	bfb8      	it	lt
400060b8:	4613      	movlt	r3, r2
400060ba:	ea4f 03a3 	mov.w	r3, r3, asr #2
400060be:	f103 0301 	add.w	r3, r3, #1
400060c2:	ea4f 4283 	mov.w	r2, r3, lsl #18
400060c6:	e001      	b.n	400060cc <mvCtrlHighSpeedSerdesPhyConfig+0x1a20>
400060c8:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
400060cc:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400060d0:	2b02      	cmp	r3, #2
400060d2:	d808      	bhi.n	400060e6 <mvCtrlHighSpeedSerdesPhyConfig+0x1a3a>
400060d4:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400060d8:	ea4f 0383 	mov.w	r3, r3, lsl #2
400060dc:	f003 0303 	and.w	r3, r3, #3
400060e0:	ea4f 3383 	mov.w	r3, r3, lsl #14
400060e4:	e001      	b.n	400060ea <mvCtrlHighSpeedSerdesPhyConfig+0x1a3e>
400060e6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
400060ea:	18d3      	adds	r3, r2, r3
400060ec:	f503 53d3 	add.w	r3, r3, #6752	; 0x1a60
400060f0:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400060f4:	e016      	b.n	40006124 <mvCtrlHighSpeedSerdesPhyConfig+0x1a78>
400060f6:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
400060fa:	2b02      	cmp	r3, #2
400060fc:	d80e      	bhi.n	4000611c <mvCtrlHighSpeedSerdesPhyConfig+0x1a70>
400060fe:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006102:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006106:	f003 0307 	and.w	r3, r3, #7
4000610a:	ea4f 4383 	mov.w	r3, r3, lsl #18
4000610e:	f503 2387 	add.w	r3, r3, #276480	; 0x43800
40006112:	f503 7318 	add.w	r3, r3, #608	; 0x260
40006116:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000611a:	e003      	b.n	40006124 <mvCtrlHighSpeedSerdesPhyConfig+0x1a78>
4000611c:	f643 2360 	movw	r3, #14944	; 0x3a60
40006120:	f2cd 0308 	movt	r3, #53256	; 0xd008
40006124:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40006128:	601a      	str	r2, [r3, #0]
4000612a:	e000      	b.n	4000612e <mvCtrlHighSpeedSerdesPhyConfig+0x1a82>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:951
	/* step 15 [PEX-Only] Only for EP mode set to Zero bits 19 and 16 of register 0x1a60 */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 15: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
		if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
			continue;
4000612c:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:949
	}
		
	/* step 15 [PEX-Only] Only for EP mode set to Zero bits 19 and 16 of register 0x1a60 */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 15: [PEX-Only]  In order to configure");
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
4000612e:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006132:	f103 0301 	add.w	r3, r3, #1
40006136:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
4000613a:	f897 45c2 	ldrb.w	r4, [r7, #1474]	; 0x5c2
4000613e:	f7fe fa33 	bl	400045a8 <mvCtrlPexMaxUnitGet>
40006142:	4603      	mov	r3, r0
40006144:	429c      	cmp	r4, r3
40006146:	f4ff af3b 	bcc.w	40005fc0 <mvCtrlHighSpeedSerdesPhyConfig+0x1914>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:962
			DEBUG_WR_REG(PEX_DBG_CTRL_REG(MV_PEX_UNIT_TO_IF(pexUnit)),tmp);
		}
	}

	/************************** */
	if (pSerdesInfo->serdesMphyChange)
4000614a:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
4000614e:	695b      	ldr	r3, [r3, #20]
40006150:	2b00      	cmp	r3, #0
40006152:	f000 81fa 	beq.w	4000654a <mvCtrlHighSpeedSerdesPhyConfig+0x1e9e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:966
	{
		MV_SERDES_CHANGE_M_PHY *pSserdesMphyChange;
		MV_U32 busSpeed;
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40006156:	f04f 0300 	mov.w	r3, #0
4000615a:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
4000615e:	e1ed      	b.n	4000653c <mvCtrlHighSpeedSerdesPhyConfig+0x1e90>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:967
			serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
40006160:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40006164:	4618      	mov	r0, r3
40006166:	f8d7 159c 	ldr.w	r1, [r7, #1436]	; 0x59c
4000616a:	f7fe fa7b 	bl	40004664 <get_serdesLineCfg>
4000616e:	f8c7 0598 	str.w	r0, [r7, #1432]	; 0x598
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:968
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
40006172:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40006176:	4b95      	ldr	r3, [pc, #596]	; (400063cc <mvCtrlHighSpeedSerdesPhyConfig+0x1d20>)
40006178:	447b      	add	r3, pc
4000617a:	4619      	mov	r1, r3
4000617c:	4613      	mov	r3, r2
4000617e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40006182:	189b      	adds	r3, r3, r2
40006184:	18cb      	adds	r3, r1, r3
40006186:	781b      	ldrb	r3, [r3, #0]
40006188:	461a      	mov	r2, r3
4000618a:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
4000618e:	429a      	cmp	r2, r3
40006190:	f000 81cd 	beq.w	4000652e <mvCtrlHighSpeedSerdesPhyConfig+0x1e82>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:970
				continue;
			pSserdesMphyChange = pSerdesInfo->serdesMphyChange;
40006194:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
40006198:	695b      	ldr	r3, [r3, #20]
4000619a:	f8c7 35ac 	str.w	r3, [r7, #1452]	; 0x5ac
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:971
			busSpeed = pSerdesInfo->busSpeed & (1 << serdesLineNum);
4000619e:	f8d7 359c 	ldr.w	r3, [r7, #1436]	; 0x59c
400061a2:	691a      	ldr	r2, [r3, #16]
400061a4:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400061a8:	f04f 0101 	mov.w	r1, #1
400061ac:	fa01 f303 	lsl.w	r3, r1, r3
400061b0:	4013      	ands	r3, r2
400061b2:	f8c7 358c 	str.w	r3, [r7, #1420]	; 0x58c
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:972
			while (pSserdesMphyChange->serdesType != SERDES_UNIT_UNCONNECTED) {
400061b6:	e1b3      	b.n	40006520 <mvCtrlHighSpeedSerdesPhyConfig+0x1e74>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:973
				switch (pSserdesMphyChange->serdesType) {
400061b8:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
400061bc:	781b      	ldrb	r3, [r3, #0]
400061be:	f103 33ff 	add.w	r3, r3, #4294967295
400061c2:	2b06      	cmp	r3, #6
400061c4:	f200 8199 	bhi.w	400064fa <mvCtrlHighSpeedSerdesPhyConfig+0x1e4e>
400061c8:	a202      	add	r2, pc, #8	; (adr r2, 400061d4 <mvCtrlHighSpeedSerdesPhyConfig+0x1b28>)
400061ca:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
400061ce:	4402      	add	r2, r0
400061d0:	4710      	bx	r2
400061d2:	bf00      	nop
400061d4:	0000001d 	andeq	r0, r0, sp, lsl r0
400061d8:	000000ef 	andeq	r0, r0, pc, ror #1
400061dc:	00000155 	andeq	r0, r0, r5, asr r1
400061e0:	00000155 	andeq	r0, r0, r5, asr r1
400061e4:	00000155 	andeq	r0, r0, r5, asr r1
400061e8:	00000155 	andeq	r0, r0, r5, asr r1
400061ec:	000002ef 	andeq	r0, r0, pc, ror #5
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:975
				case SERDES_UNIT_PEX:
					if (serdesLineCfg != SERDES_UNIT_PEX) 
400061f0:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400061f4:	2b01      	cmp	r3, #1
400061f6:	f040 8182 	bne.w	400064fe <mvCtrlHighSpeedSerdesPhyConfig+0x1e52>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:977
						break;
					pexUnit    = serdesLineNum >> 2;
400061fa:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400061fe:	ea4f 0393 	mov.w	r3, r3, lsr #2
40006202:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:978
					pexLineNum = serdesLineNum % 4;
40006206:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
4000620a:	f003 0303 	and.w	r3, r3, #3
4000620e:	f887 3597 	strb.w	r3, [r7, #1431]	; 0x597
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:979
					if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
40006212:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006216:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000621a:	18d3      	adds	r3, r2, r3
4000621c:	7b1b      	ldrb	r3, [r3, #12]
4000621e:	2b00      	cmp	r3, #0
40006220:	f000 816f 	beq.w	40006502 <mvCtrlHighSpeedSerdesPhyConfig+0x1e56>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:981
						break;
					if ((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && pexLineNum)
40006224:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006228:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
4000622c:	18d3      	adds	r3, r2, r3
4000622e:	7b1b      	ldrb	r3, [r3, #12]
40006230:	2b02      	cmp	r3, #2
40006232:	d104      	bne.n	4000623e <mvCtrlHighSpeedSerdesPhyConfig+0x1b92>
40006234:	f897 3597 	ldrb.w	r3, [r7, #1431]	; 0x597
40006238:	2b00      	cmp	r3, #0
4000623a:	f040 8164 	bne.w	40006506 <mvCtrlHighSpeedSerdesPhyConfig+0x1e5a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:984
						break;

					if (busSpeed) {
4000623e:	f8d7 358c 	ldr.w	r3, [r7, #1420]	; 0x58c
40006242:	2b00      	cmp	r3, #0
40006244:	d01e      	beq.n	40006284 <mvCtrlHighSpeedSerdesPhyConfig+0x1bd8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:985
						MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueHiSpeed);
40006246:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000624a:	f003 0301 	and.w	r3, r3, #1
4000624e:	f103 0301 	add.w	r3, r3, #1
40006252:	ea4f 1243 	mov.w	r2, r3, lsl #5
40006256:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000625a:	ea4f 0353 	mov.w	r3, r3, lsr #1
4000625e:	b2db      	uxtb	r3, r3
40006260:	18d3      	adds	r3, r2, r3
40006262:	ea4f 3343 	mov.w	r3, r3, lsl #13
40006266:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
4000626a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000626e:	f897 2597 	ldrb.w	r2, [r7, #1431]	; 0x597
40006272:	ea4f 6202 	mov.w	r2, r2, lsl #24
40006276:	4611      	mov	r1, r2
40006278:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
4000627c:	6912      	ldr	r2, [r2, #16]
4000627e:	430a      	orrs	r2, r1
40006280:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:992
					}
					else {
						MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
40006282:	e147      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:989
					if (busSpeed) {
						MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueHiSpeed);
						DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueHiSpeed);
					}
					else {
						MV_REG_WRITE(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueLowSpeed);
40006284:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006288:	f003 0301 	and.w	r3, r3, #1
4000628c:	f103 0301 	add.w	r3, r3, #1
40006290:	ea4f 1243 	mov.w	r2, r3, lsl #5
40006294:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006298:	ea4f 0353 	mov.w	r3, r3, lsr #1
4000629c:	b2db      	uxtb	r3, r3
4000629e:	18d3      	adds	r3, r2, r3
400062a0:	ea4f 3343 	mov.w	r3, r3, lsl #13
400062a4:	f503 53d8 	add.w	r3, r3, #6912	; 0x1b00
400062a8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400062ac:	f897 2597 	ldrb.w	r2, [r7, #1431]	; 0x597
400062b0:	ea4f 6202 	mov.w	r2, r2, lsl #24
400062b4:	4611      	mov	r1, r2
400062b6:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
400062ba:	6892      	ldr	r2, [r2, #8]
400062bc:	430a      	orrs	r2, r1
400062be:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:992
						DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
400062c0:	e128      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:994
				case SERDES_UNIT_SATA:
					if (serdesLineCfg != SERDES_UNIT_SATA) 
400062c2:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400062c6:	2b02      	cmp	r3, #2
400062c8:	f040 811f 	bne.w	4000650a <mvCtrlHighSpeedSerdesPhyConfig+0x1e5e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:996
						break;
					sataPort =  serdesLineNum & 1; /* port 0 for serdes lines 4,6,  and port 1 for serdes lines 5*/
400062cc:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
400062d0:	f003 0301 	and.w	r3, r3, #1
400062d4:	f887 35b6 	strb.w	r3, [r7, #1462]	; 0x5b6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:997
					if (busSpeed) {
400062d8:	f8d7 358c 	ldr.w	r3, [r7, #1420]	; 0x58c
400062dc:	2b00      	cmp	r3, #0
400062de:	d011      	beq.n	40006304 <mvCtrlHighSpeedSerdesPhyConfig+0x1c58>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:998
						MV_REG_WRITE(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegHiSpeed , pSserdesMphyChange->serdesValueLowSpeed);
400062e0:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
400062e4:	f103 0351 	add.w	r3, r3, #81	; 0x51
400062e8:	ea4f 3343 	mov.w	r3, r3, lsl #13
400062ec:	461a      	mov	r2, r3
400062ee:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
400062f2:	68db      	ldr	r3, [r3, #12]
400062f4:	4313      	orrs	r3, r2
400062f6:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400062fa:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
400062fe:	6892      	ldr	r2, [r2, #8]
40006300:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1005
					}
					else {
						MV_REG_WRITE(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegLowSpeed, pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegLowSpeed, pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
40006302:	e107      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1002
					if (busSpeed) {
						MV_REG_WRITE(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegHiSpeed , pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegHiSpeed , pSserdesMphyChange->serdesValueLowSpeed);
					}
					else {
						MV_REG_WRITE(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegLowSpeed, pSserdesMphyChange->serdesValueLowSpeed);
40006304:	f897 35b6 	ldrb.w	r3, [r7, #1462]	; 0x5b6
40006308:	f103 0351 	add.w	r3, r3, #81	; 0x51
4000630c:	ea4f 3343 	mov.w	r3, r3, lsl #13
40006310:	461a      	mov	r2, r3
40006312:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
40006316:	685b      	ldr	r3, [r3, #4]
40006318:	4313      	orrs	r3, r2
4000631a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000631e:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
40006322:	6892      	ldr	r2, [r2, #8]
40006324:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1005
						DEBUG_WR_REG(SATA_BASE_REG(sataPort) | pSserdesMphyChange->serdesRegLowSpeed, pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
40006326:	e0f5      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1010
				case SERDES_UNIT_SGMII0:
				case SERDES_UNIT_SGMII1:
				case SERDES_UNIT_SGMII2:
				case SERDES_UNIT_SGMII3:
					if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII0])
40006328:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000632c:	4b28      	ldr	r3, [pc, #160]	; (400063d0 <mvCtrlHighSpeedSerdesPhyConfig+0x1d24>)
4000632e:	447b      	add	r3, pc
40006330:	4619      	mov	r1, r3
40006332:	4613      	mov	r3, r2
40006334:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40006338:	189b      	adds	r3, r3, r2
4000633a:	18cb      	adds	r3, r1, r3
4000633c:	f103 0303 	add.w	r3, r3, #3
40006340:	781b      	ldrb	r3, [r3, #0]
40006342:	461a      	mov	r2, r3
40006344:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40006348:	429a      	cmp	r2, r3
4000634a:	d104      	bne.n	40006356 <mvCtrlHighSpeedSerdesPhyConfig+0x1caa>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1011
						sgmiiPort = 0;
4000634c:	f04f 0300 	mov.w	r3, #0
40006350:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40006354:	e06d      	b.n	40006432 <mvCtrlHighSpeedSerdesPhyConfig+0x1d86>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1012
					else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII1])
40006356:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000635a:	4b1e      	ldr	r3, [pc, #120]	; (400063d4 <mvCtrlHighSpeedSerdesPhyConfig+0x1d28>)
4000635c:	447b      	add	r3, pc
4000635e:	4619      	mov	r1, r3
40006360:	4613      	mov	r3, r2
40006362:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40006366:	189b      	adds	r3, r3, r2
40006368:	18cb      	adds	r3, r1, r3
4000636a:	f103 0304 	add.w	r3, r3, #4
4000636e:	781b      	ldrb	r3, [r3, #0]
40006370:	461a      	mov	r2, r3
40006372:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40006376:	429a      	cmp	r2, r3
40006378:	d12e      	bne.n	400063d8 <mvCtrlHighSpeedSerdesPhyConfig+0x1d2c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1013
						sgmiiPort = 1;
4000637a:	f04f 0301 	mov.w	r3, #1
4000637e:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40006382:	e056      	b.n	40006432 <mvCtrlHighSpeedSerdesPhyConfig+0x1d86>
40006384:	0000232e 	andeq	r2, r0, lr, lsr #6
40006388:	0000230a 	andeq	r2, r0, sl, lsl #6
4000638c:	00002238 	andeq	r2, r0, r8, lsr r2
40006390:	00002172 	andeq	r2, r0, r2, ror r1
40006394:	000020f6 	strdeq	r2, [r0], -r6
40006398:	000020c6 	andeq	r2, r0, r6, asr #1
4000639c:	00002096 	muleq	r0, r6, r0
400063a0:	00002066 	andeq	r2, r0, r6, rrx
400063a4:	00001ebe 			; <UNDEFINED> instruction: 0x00001ebe
400063a8:	00001e9c 	muleq	r0, ip, lr
400063ac:	00001dd0 	ldrdeq	r1, [r0], -r0
400063b0:	00001dac 	andeq	r1, r0, ip, lsr #27
400063b4:	00001d84 	andeq	r1, r0, r4, lsl #27
400063b8:	00001d1c 	andeq	r1, r0, ip, lsl sp
400063bc:	00001cce 	andeq	r1, r0, lr, asr #25
400063c0:	00001c9e 	muleq	r0, lr, ip
400063c4:	00001c6e 	andeq	r1, r0, lr, ror #24
400063c8:	00001c3e 	andeq	r1, r0, lr, lsr ip
400063cc:	00001800 	andeq	r1, r0, r0, lsl #16
400063d0:	0000164a 	andeq	r1, r0, sl, asr #12
400063d4:	0000161c 	andeq	r1, r0, ip, lsl r6
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1014
					else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
400063d8:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
400063dc:	4b7d      	ldr	r3, [pc, #500]	; (400065d4 <mvCtrlHighSpeedSerdesPhyConfig+0x1f28>)
400063de:	447b      	add	r3, pc
400063e0:	4619      	mov	r1, r3
400063e2:	4613      	mov	r3, r2
400063e4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
400063e8:	189b      	adds	r3, r3, r2
400063ea:	18cb      	adds	r3, r1, r3
400063ec:	f103 0305 	add.w	r3, r3, #5
400063f0:	781b      	ldrb	r3, [r3, #0]
400063f2:	461a      	mov	r2, r3
400063f4:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400063f8:	429a      	cmp	r2, r3
400063fa:	d104      	bne.n	40006406 <mvCtrlHighSpeedSerdesPhyConfig+0x1d5a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1015
						sgmiiPort = 2;
400063fc:	f04f 0302 	mov.w	r3, #2
40006400:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
40006404:	e015      	b.n	40006432 <mvCtrlHighSpeedSerdesPhyConfig+0x1d86>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1016
					else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
40006406:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
4000640a:	4b73      	ldr	r3, [pc, #460]	; (400065d8 <mvCtrlHighSpeedSerdesPhyConfig+0x1f2c>)
4000640c:	447b      	add	r3, pc
4000640e:	4619      	mov	r1, r3
40006410:	4613      	mov	r3, r2
40006412:	ea4f 03c3 	mov.w	r3, r3, lsl #3
40006416:	189b      	adds	r3, r3, r2
40006418:	18cb      	adds	r3, r1, r3
4000641a:	f103 0306 	add.w	r3, r3, #6
4000641e:	781b      	ldrb	r3, [r3, #0]
40006420:	461a      	mov	r2, r3
40006422:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
40006426:	429a      	cmp	r2, r3
40006428:	d171      	bne.n	4000650e <mvCtrlHighSpeedSerdesPhyConfig+0x1e62>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1017
						sgmiiPort = 3;
4000642a:	f04f 0303 	mov.w	r3, #3
4000642e:	f887 35c1 	strb.w	r3, [r7, #1473]	; 0x5c1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1020
					else
						break;
					if (busSpeed) {
40006432:	f8d7 358c 	ldr.w	r3, [r7, #1420]	; 0x58c
40006436:	2b00      	cmp	r3, #0
40006438:	d021      	beq.n	4000647e <mvCtrlHighSpeedSerdesPhyConfig+0x1dd2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1021
						MV_REG_WRITE(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
4000643a:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
4000643e:	ea4f 0353 	mov.w	r3, r3, lsr #1
40006442:	b2db      	uxtb	r3, r3
40006444:	461a      	mov	r2, r3
40006446:	4613      	mov	r3, r2
40006448:	ea4f 7303 	mov.w	r3, r3, lsl #28
4000644c:	1a9b      	subs	r3, r3, r2
4000644e:	ea4f 1303 	mov.w	r3, r3, lsl #4
40006452:	461a      	mov	r2, r3
40006454:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40006458:	f003 0301 	and.w	r3, r3, #1
4000645c:	18d3      	adds	r3, r2, r3
4000645e:	ea4f 3383 	mov.w	r3, r3, lsl #14
40006462:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
40006466:	461a      	mov	r2, r3
40006468:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
4000646c:	68db      	ldr	r3, [r3, #12]
4000646e:	4313      	orrs	r3, r2
40006470:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006474:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
40006478:	6892      	ldr	r2, [r2, #8]
4000647a:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1028
					}                                                                                                                       
					else {                                                                                                                  
						MV_REG_WRITE(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
4000647c:	e04a      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1025
					if (busSpeed) {
						MV_REG_WRITE(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
					}                                                                                                                       
					else {                                                                                                                  
						MV_REG_WRITE(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
4000647e:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
40006482:	ea4f 0353 	mov.w	r3, r3, lsr #1
40006486:	b2db      	uxtb	r3, r3
40006488:	461a      	mov	r2, r3
4000648a:	4613      	mov	r3, r2
4000648c:	ea4f 7303 	mov.w	r3, r3, lsl #28
40006490:	1a9b      	subs	r3, r3, r2
40006492:	ea4f 1303 	mov.w	r3, r3, lsl #4
40006496:	461a      	mov	r2, r3
40006498:	f897 35c1 	ldrb.w	r3, [r7, #1473]	; 0x5c1
4000649c:	f003 0301 	and.w	r3, r3, #1
400064a0:	18d3      	adds	r3, r2, r3
400064a2:	ea4f 3383 	mov.w	r3, r3, lsl #14
400064a6:	f503 23e4 	add.w	r3, r3, #466944	; 0x72000
400064aa:	461a      	mov	r2, r3
400064ac:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
400064b0:	685b      	ldr	r3, [r3, #4]
400064b2:	4313      	orrs	r3, r2
400064b4:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400064b8:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
400064bc:	6892      	ldr	r2, [r2, #8]
400064be:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1028
						DEBUG_WR_REG(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
400064c0:	e028      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1030
				case SERDES_UNIT_QSGMII:
					if (serdesLineCfg != SERDES_UNIT_QSGMII) 
400064c2:	f8d7 3598 	ldr.w	r3, [r7, #1432]	; 0x598
400064c6:	2b07      	cmp	r3, #7
400064c8:	d123      	bne.n	40006512 <mvCtrlHighSpeedSerdesPhyConfig+0x1e66>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1032
						break;
					if (busSpeed) {
400064ca:	f8d7 358c 	ldr.w	r3, [r7, #1420]	; 0x58c
400064ce:	2b00      	cmp	r3, #0
400064d0:	d009      	beq.n	400064e6 <mvCtrlHighSpeedSerdesPhyConfig+0x1e3a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1033
						MV_REG_WRITE(pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
400064d2:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
400064d6:	68db      	ldr	r3, [r3, #12]
400064d8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400064dc:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
400064e0:	6892      	ldr	r2, [r2, #8]
400064e2:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1040
					}                                                                                              
					else {                                                                                         
						MV_REG_WRITE(pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
400064e4:	e016      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1037
					if (busSpeed) {
						MV_REG_WRITE(pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
						DEBUG_WR_REG(pSserdesMphyChange->serdesRegHiSpeed  ,pSserdesMphyChange->serdesValueLowSpeed);
					}                                                                                              
					else {                                                                                         
						MV_REG_WRITE(pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
400064e6:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
400064ea:	685b      	ldr	r3, [r3, #4]
400064ec:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400064f0:	f8d7 25ac 	ldr.w	r2, [r7, #1452]	; 0x5ac
400064f4:	6892      	ldr	r2, [r2, #8]
400064f6:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1040
						DEBUG_WR_REG(pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
400064f8:	e00c      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1042
				default:
					break;
400064fa:	bf00      	nop
400064fc:	e00a      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:976
			busSpeed = pSerdesInfo->busSpeed & (1 << serdesLineNum);
			while (pSserdesMphyChange->serdesType != SERDES_UNIT_UNCONNECTED) {
				switch (pSserdesMphyChange->serdesType) {
				case SERDES_UNIT_PEX:
					if (serdesLineCfg != SERDES_UNIT_PEX) 
						break;
400064fe:	bf00      	nop
40006500:	e008      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:980
					pexUnit    = serdesLineNum >> 2;
					pexLineNum = serdesLineNum % 4;
					if (pSerdesInfo->pexMod[pexUnit] == PEX_BUS_DISABLED)
						break;
40006502:	bf00      	nop
40006504:	e006      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:982
					if ((pSerdesInfo->pexMod[pexUnit] == PEX_BUS_MODE_X4) && pexLineNum)
						break;
40006506:	bf00      	nop
40006508:	e004      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:995
						DEBUG_WR_REG(PEX_PHY_ACCESS_REG(pexUnit) , (pexLineNum << 24) | pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
				case SERDES_UNIT_SATA:
					if (serdesLineCfg != SERDES_UNIT_SATA) 
						break;
4000650a:	bf00      	nop
4000650c:	e002      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1019
					else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII2])
						sgmiiPort = 2;
					else if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_SGMII3])
						sgmiiPort = 3;
					else
						break;
4000650e:	bf00      	nop
40006510:	e000      	b.n	40006514 <mvCtrlHighSpeedSerdesPhyConfig+0x1e68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1031
						DEBUG_WR_REG(MV_ETH_REGS_BASE(sgmiiPort) | pSserdesMphyChange->serdesRegLowSpeed ,pSserdesMphyChange->serdesValueLowSpeed);
					}
					break;
				case SERDES_UNIT_QSGMII:
					if (serdesLineCfg != SERDES_UNIT_QSGMII) 
						break;
40006512:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1044
					}
					break;
				default:
					break;
				}
				pSserdesMphyChange++;
40006514:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
40006518:	f103 0314 	add.w	r3, r3, #20
4000651c:	f8c7 35ac 	str.w	r3, [r7, #1452]	; 0x5ac
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:972
			serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
				continue;
			pSserdesMphyChange = pSerdesInfo->serdesMphyChange;
			busSpeed = pSerdesInfo->busSpeed & (1 << serdesLineNum);
			while (pSserdesMphyChange->serdesType != SERDES_UNIT_UNCONNECTED) {
40006520:	f8d7 35ac 	ldr.w	r3, [r7, #1452]	; 0x5ac
40006524:	781b      	ldrb	r3, [r3, #0]
40006526:	2b00      	cmp	r3, #0
40006528:	f47f ae46 	bne.w	400061b8 <mvCtrlHighSpeedSerdesPhyConfig+0x1b0c>
4000652c:	e000      	b.n	40006530 <mvCtrlHighSpeedSerdesPhyConfig+0x1e84>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:969
		MV_SERDES_CHANGE_M_PHY *pSserdesMphyChange;
		MV_U32 busSpeed;
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
			serdesLineCfg = get_serdesLineCfg(serdesLineNum,pSerdesInfo);
			if (serdesLineCfg == serdesCfg[serdesLineNum][SERDES_UNIT_UNCONNECTED])
				continue;
4000652e:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:966
	/************************** */
	if (pSerdesInfo->serdesMphyChange)
	{
		MV_SERDES_CHANGE_M_PHY *pSserdesMphyChange;
		MV_U32 busSpeed;
		for (serdesLineNum = 0; serdesLineNum < maxSerdesLines; serdesLineNum++) {
40006530:	f897 35c3 	ldrb.w	r3, [r7, #1475]	; 0x5c3
40006534:	f103 0301 	add.w	r3, r3, #1
40006538:	f887 35c3 	strb.w	r3, [r7, #1475]	; 0x5c3
4000653c:	f897 25c3 	ldrb.w	r2, [r7, #1475]	; 0x5c3
40006540:	f897 35a7 	ldrb.w	r3, [r7, #1447]	; 0x5a7
40006544:	429a      	cmp	r2, r3
40006546:	f4ff ae0b 	bcc.w	40006160 <mvCtrlHighSpeedSerdesPhyConfig+0x1ab4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1051
		}
	}
	/* step 16 [PEX-Only] Training Enable */
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 16: [PEX-Only] Training Enable");
	tmp = MV_REG_READ(SOC_CTRL_REG);
4000654a:	f248 2004 	movw	r0, #33284	; 0x8204
4000654e:	f2cd 0001 	movt	r0, #53249	; 0xd001
40006552:	f7fd fdab 	bl	400040ac <MV_MEMIO_LE32_READ>
40006556:	f8c7 05bc 	str.w	r0, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1053
	DEBUG_RD_REG(SOC_CTRL_REG, tmp );
	tmp &= ~(0x0F);
4000655a:	f8d7 35bc 	ldr.w	r3, [r7, #1468]	; 0x5bc
4000655e:	f023 030f 	bic.w	r3, r3, #15
40006562:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1054
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40006566:	f04f 0300 	mov.w	r3, #0
4000656a:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
4000656e:	e018      	b.n	400065a2 <mvCtrlHighSpeedSerdesPhyConfig+0x1ef6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1055
		if (pSerdesInfo->pexMod[pexUnit] != PEX_BUS_DISABLED)
40006570:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006574:	f8d7 259c 	ldr.w	r2, [r7, #1436]	; 0x59c
40006578:	18d3      	adds	r3, r2, r3
4000657a:	7b1b      	ldrb	r3, [r3, #12]
4000657c:	2b00      	cmp	r3, #0
4000657e:	d00a      	beq.n	40006596 <mvCtrlHighSpeedSerdesPhyConfig+0x1eea>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1056
			tmp |= (0x1<<pexUnit);
40006580:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
40006584:	f04f 0201 	mov.w	r2, #1
40006588:	fa02 f303 	lsl.w	r3, r2, r3
4000658c:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
40006590:	4313      	orrs	r3, r2
40006592:	f8c7 35bc 	str.w	r3, [r7, #1468]	; 0x5bc
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1054
	/*----------------------------------------------*/
	DEBUG_INIT_FULL_S("Steps 16: [PEX-Only] Training Enable");
	tmp = MV_REG_READ(SOC_CTRL_REG);
	DEBUG_RD_REG(SOC_CTRL_REG, tmp );
	tmp &= ~(0x0F);
	for (pexUnit = 0; pexUnit < mvCtrlPexMaxUnitGet(); pexUnit++) {
40006596:	f897 35c2 	ldrb.w	r3, [r7, #1474]	; 0x5c2
4000659a:	f103 0301 	add.w	r3, r3, #1
4000659e:	f887 35c2 	strb.w	r3, [r7, #1474]	; 0x5c2
400065a2:	f897 45c2 	ldrb.w	r4, [r7, #1474]	; 0x5c2
400065a6:	f7fd ffff 	bl	400045a8 <mvCtrlPexMaxUnitGet>
400065aa:	4603      	mov	r3, r0
400065ac:	429c      	cmp	r4, r3
400065ae:	d3df      	bcc.n	40006570 <mvCtrlHighSpeedSerdesPhyConfig+0x1ec4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1058
		if (pSerdesInfo->pexMod[pexUnit] != PEX_BUS_DISABLED)
			tmp |= (0x1<<pexUnit);
	}
	MV_REG_WRITE(SOC_CTRL_REG, tmp);
400065b0:	f248 2304 	movw	r3, #33284	; 0x8204
400065b4:	f2cd 0301 	movt	r3, #53249	; 0xd001
400065b8:	f8d7 25bc 	ldr.w	r2, [r7, #1468]	; 0x5bc
400065bc:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1061
	DEBUG_WR_REG(SOC_CTRL_REG, tmp);

	return MV_OK;
400065be:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_phy/mvHighSpeedEnvLib.c:1062
}
400065c2:	4618      	mov	r0, r3
400065c4:	f507 77e6 	add.w	r7, r7, #460	; 0x1cc
400065c8:	f507 6780 	add.w	r7, r7, #1024	; 0x400
400065cc:	46bd      	mov	sp, r7
400065ce:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
400065d2:	4770      	bx	lr
400065d4:	0000159a 	muleq	r0, sl, r5
400065d8:	0000156c 	andeq	r1, r0, ip, ror #10

400065dc <MV_MEMIO_LE32_READ>:
MV_MEMIO_LE32_READ():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/bootstrap_os.h:393
#define MV_MEMIO_LE32_WRITE(addr, data) \
        MV_MEMIO32_WRITE(addr, MV_32BIT_LE_FAST(data))

/* 32bit read in little endian mode */
static __inline MV_U32 MV_MEMIO_LE32_READ(MV_U32 addr)
{
400065dc:	b480      	push	{r7}
400065de:	b085      	sub	sp, #20
400065e0:	af00      	add	r7, sp, #0
400065e2:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/bootstrap_os.h:396
	MV_U32 data;

	data= (MV_U32)MV_MEMIO32_READ(addr);
400065e4:	687b      	ldr	r3, [r7, #4]
400065e6:	681b      	ldr	r3, [r3, #0]
400065e8:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/bootstrap_os.h:398

	return (MV_U32)MV_32BIT_LE_FAST(data);
400065ea:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/bootstrap_os.h:399
}
400065ec:	4618      	mov	r0, r3
400065ee:	f107 0714 	add.w	r7, r7, #20
400065f2:	46bd      	mov	sp, r7
400065f4:	bc80      	pop	{r7}
400065f6:	4770      	bx	lr

400065f8 <mvUartInit>:
mvUartInit():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:91
*	None.
*
*******************************************************************************/

MV_VOID mvUartInit(void)
{
400065f8:	b580      	push	{r7, lr}
400065fa:	b084      	sub	sp, #16
400065fc:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:93
	MV_U32 uiReg;
	volatile MV_UART_PORT *pUartPort = (volatile MV_UART_PORT *)(INTER_REGS_BASE + UART0_REG_OFFSET);
400065fe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
40006602:	f2cd 0301 	movt	r3, #53249	; 0xd001
40006606:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:95
	MV_U32 	tmpTClkRate; 
	MV_U32 baudDivisor = 0;
40006608:	f04f 0300 	mov.w	r3, #0
4000660c:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:97

	uiReg = (MV_REG_READ(REG_SAMPLE_RESET_LOW_ADDR) & (1 << REG_SAMPLE_RESET_TCLK_OFFS));
4000660e:	f248 2030 	movw	r0, #33328	; 0x8230
40006612:	f2cd 0001 	movt	r0, #53249	; 0xd001
40006616:	f7ff ffe1 	bl	400065dc <MV_MEMIO_LE32_READ>
4000661a:	4603      	mov	r3, r0
4000661c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
40006620:	603b      	str	r3, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:99
#ifdef MV88F78X60
	if(uiReg)
40006622:	683b      	ldr	r3, [r7, #0]
40006624:	2b00      	cmp	r3, #0
40006626:	d005      	beq.n	40006634 <mvUartInit+0x3c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:100
		tmpTClkRate = _200MHZ;	/* 200; */
40006628:	f44f 4342 	mov.w	r3, #49664	; 0xc200
4000662c:	f6c0 33eb 	movt	r3, #3051	; 0xbeb
40006630:	60fb      	str	r3, [r7, #12]
40006632:	e004      	b.n	4000663e <mvUartInit+0x46>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:102
	else
		tmpTClkRate = _250MHZ;	/* 250;	*/
40006634:	f24b 2380 	movw	r3, #45696	; 0xb280
40006638:	f6c0 63e6 	movt	r3, #3814	; 0xee6
4000663c:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:111
	else
		tmpTClkRate = _166MHZ;	/* 166; */
#endif

	/*  UART Init */
	switch (tmpTClkRate)
4000663e:	68fa      	ldr	r2, [r7, #12]
40006640:	f242 13ab 	movw	r3, #8619	; 0x21ab
40006644:	f6c0 13ef 	movt	r3, #2543	; 0x9ef
40006648:	429a      	cmp	r2, r3
4000664a:	d00f      	beq.n	4000666c <mvUartInit+0x74>
4000664c:	f44f 4342 	mov.w	r3, #49664	; 0xc200
40006650:	f6c0 33eb 	movt	r3, #3051	; 0xbeb
40006654:	429a      	cmp	r2, r3
40006656:	d00d      	beq.n	40006674 <mvUartInit+0x7c>
40006658:	f647 0340 	movw	r3, #30784	; 0x7840
4000665c:	f2c0 137d 	movt	r3, #381	; 0x17d
40006660:	429a      	cmp	r2, r3
40006662:	d10b      	bne.n	4000667c <mvUartInit+0x84>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:114
	{
		case _25MHZ:
			baudDivisor =  13; /* actually 13.5 */
40006664:	f04f 030d 	mov.w	r3, #13
40006668:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:115
			break;
4000666a:	e00b      	b.n	40006684 <mvUartInit+0x8c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:117
		case _166MHZ:
			baudDivisor =  90;
4000666c:	f04f 035a 	mov.w	r3, #90	; 0x5a
40006670:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:118
			break;	
40006672:	e007      	b.n	40006684 <mvUartInit+0x8c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:120
		case _200MHZ:
			baudDivisor = 108;
40006674:	f04f 036c 	mov.w	r3, #108	; 0x6c
40006678:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:121
			break;
4000667a:	e003      	b.n	40006684 <mvUartInit+0x8c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:124
		case _250MHZ:
		default:
			baudDivisor =  135;
4000667c:	f04f 0387 	mov.w	r3, #135	; 0x87
40006680:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:125
			break;
40006682:	bf00      	nop
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:128
	}

	pUartPort->ier = 0x00;
40006684:	687b      	ldr	r3, [r7, #4]
40006686:	f04f 0200 	mov.w	r2, #0
4000668a:	711a      	strb	r2, [r3, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:129
	pUartPort->lcr = LCR_DIVL_EN;           /* Access baud rate */
4000668c:	687b      	ldr	r3, [r7, #4]
4000668e:	f04f 0280 	mov.w	r2, #128	; 0x80
40006692:	731a      	strb	r2, [r3, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:130
	pUartPort->dll = baudDivisor & 0xff;    /* 9600 baud */
40006694:	68bb      	ldr	r3, [r7, #8]
40006696:	b2da      	uxtb	r2, r3
40006698:	687b      	ldr	r3, [r7, #4]
4000669a:	701a      	strb	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:131
	pUartPort->dlm = (baudDivisor >> 8) & 0xff;
4000669c:	68bb      	ldr	r3, [r7, #8]
4000669e:	ea4f 2313 	mov.w	r3, r3, lsr #8
400066a2:	b2da      	uxtb	r2, r3
400066a4:	687b      	ldr	r3, [r7, #4]
400066a6:	711a      	strb	r2, [r3, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:132
	pUartPort->lcr = LCR_8N1;               /* 8 data, 1 stop, no parity */
400066a8:	687b      	ldr	r3, [r7, #4]
400066aa:	f04f 0203 	mov.w	r2, #3
400066ae:	731a      	strb	r2, [r3, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:135

	/* Clear & enable FIFOs */
	pUartPort->fcr = FCR_FIFO_EN | FCR_RXSR | FCR_TXSR;
400066b0:	687b      	ldr	r3, [r7, #4]
400066b2:	f04f 0207 	mov.w	r2, #7
400066b6:	721a      	strb	r2, [r3, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:137
	return;
}
400066b8:	f107 0710 	add.w	r7, r7, #16
400066bc:	46bd      	mov	sp, r7
400066be:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400066c2:	4770      	bx	lr

400066c4 <mvUartPutc>:
mvUartPutc():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:157
* RETURN:
*	None.
*
*******************************************************************************/
MV_VOID	mvUartPutc(MV_U8 c)
{
400066c4:	b480      	push	{r7}
400066c6:	b085      	sub	sp, #20
400066c8:	af00      	add	r7, sp, #0
400066ca:	4603      	mov	r3, r0
400066cc:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:158
	volatile MV_UART_PORT *pUartPort = (volatile MV_UART_PORT *)(INTER_REGS_BASE + UART0_REG_OFFSET);
400066ce:	f44f 5300 	mov.w	r3, #8192	; 0x2000
400066d2:	f2cd 0301 	movt	r3, #53249	; 0xd001
400066d6:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:159
	while ((pUartPort->lsr & LSR_THRE) == 0) ;
400066d8:	bf00      	nop
400066da:	68fb      	ldr	r3, [r7, #12]
400066dc:	7d1b      	ldrb	r3, [r3, #20]
400066de:	b2db      	uxtb	r3, r3
400066e0:	f003 0320 	and.w	r3, r3, #32
400066e4:	2b00      	cmp	r3, #0
400066e6:	d0f8      	beq.n	400066da <mvUartPutc+0x16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:160
	pUartPort->thr = c;
400066e8:	68fb      	ldr	r3, [r7, #12]
400066ea:	79fa      	ldrb	r2, [r7, #7]
400066ec:	701a      	strb	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:162
	return;
}
400066ee:	f107 0714 	add.w	r7, r7, #20
400066f2:	46bd      	mov	sp, r7
400066f4:	bc80      	pop	{r7}
400066f6:	4770      	bx	lr

400066f8 <putstring>:
putstring():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:174
/* Input value:     char *str    		*/
/*		*/
/* Return Value:    none    		*/
/*-----------------------------------------------------------------------------------		*/
void putstring(char *str)
{
400066f8:	b580      	push	{r7, lr}
400066fa:	b082      	sub	sp, #8
400066fc:	af00      	add	r7, sp, #0
400066fe:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:177
#if !defined(MV_NO_PRINT)
/* For each character in the string...		*/
    while (*str != '\0')
40006700:	e010      	b.n	40006724 <putstring+0x2c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:181
    {

        /* Write it to the serial port 	*/
        mvUartPutc(*str);
40006702:	687b      	ldr	r3, [r7, #4]
40006704:	781b      	ldrb	r3, [r3, #0]
40006706:	4618      	mov	r0, r3
40006708:	f7ff ffdc 	bl	400066c4 <mvUartPutc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:182
		if (*str == '\n') mvUartPutc('\r');
4000670c:	687b      	ldr	r3, [r7, #4]
4000670e:	781b      	ldrb	r3, [r3, #0]
40006710:	2b0a      	cmp	r3, #10
40006712:	d103      	bne.n	4000671c <putstring+0x24>
40006714:	f04f 000d 	mov.w	r0, #13
40006718:	f7ff ffd4 	bl	400066c4 <mvUartPutc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:184

		str++;
4000671c:	687b      	ldr	r3, [r7, #4]
4000671e:	f103 0301 	add.w	r3, r3, #1
40006722:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:177
/*-----------------------------------------------------------------------------------		*/
void putstring(char *str)
{
#if !defined(MV_NO_PRINT)
/* For each character in the string...		*/
    while (*str != '\0')
40006724:	687b      	ldr	r3, [r7, #4]
40006726:	781b      	ldrb	r3, [r3, #0]
40006728:	2b00      	cmp	r3, #0
4000672a:	d1ea      	bne.n	40006702 <putstring+0xa>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:187
		if (*str == '\n') mvUartPutc('\r');

		str++;
    }
#endif
}
4000672c:	f107 0708 	add.w	r7, r7, #8
40006730:	46bd      	mov	sp, r7
40006732:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006736:	4770      	bx	lr

40006738 <putdata>:
putdata():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:200
/* Input value:     unit16 dec_num     	*/
/*	                                                                                    */
/* Return Value:    none    	*/
/*-----------------------------------------------------------------------------------	*/
void putdata (u32 dec_num,u32 length)
{
40006738:	b580      	push	{r7, lr}
4000673a:	b088      	sub	sp, #32
4000673c:	af00      	add	r7, sp, #0
4000673e:	6078      	str	r0, [r7, #4]
40006740:	6039      	str	r1, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:203
#if !defined(MV_NO_PRINT)
    char str[11];
    u32 i, flag = 0, mod_val;/*, length = 8;*/
40006742:	f04f 0300 	mov.w	r3, #0
40006746:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:206

    /* Initial the modular value	*/
    mod_val = dec_num;
40006748:	687b      	ldr	r3, [r7, #4]
4000674a:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:207
    for (i=length; i > 0; i--)
4000674c:	683b      	ldr	r3, [r7, #0]
4000674e:	61fb      	str	r3, [r7, #28]
40006750:	e038      	b.n	400067c4 <putdata+0x8c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:210
    {
	/* compute 1 hex number at a time	*/
	if (dec_num >= 16)
40006752:	687b      	ldr	r3, [r7, #4]
40006754:	2b0f      	cmp	r3, #15
40006756:	d908      	bls.n	4000676a <putdata+0x32>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:212
	{
	     mod_val = dec_num & (16 -1);
40006758:	687b      	ldr	r3, [r7, #4]
4000675a:	f003 030f 	and.w	r3, r3, #15
4000675e:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:213
	     dec_num = (dec_num >> 4);
40006760:	687b      	ldr	r3, [r7, #4]
40006762:	ea4f 1313 	mov.w	r3, r3, lsr #4
40006766:	607b      	str	r3, [r7, #4]
40006768:	e004      	b.n	40006774 <putdata+0x3c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:221
		dec_num = dec_num / 16; */
 	}	  
	/* set a flag to indicate the last digit	*/
	else
	{
	    mod_val = dec_num;
4000676a:	687b      	ldr	r3, [r7, #4]
4000676c:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:222
	    flag = 1;
4000676e:	f04f 0301 	mov.w	r3, #1
40006772:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:225
        }
	/* convert into ASCII hex number range from 0-9	*/
	if (mod_val <= 9)
40006774:	697b      	ldr	r3, [r7, #20]
40006776:	2b09      	cmp	r3, #9
40006778:	d80d      	bhi.n	40006796 <putdata+0x5e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:227
	{
	    str[i-1] = mod_val + 48;
4000677a:	69fb      	ldr	r3, [r7, #28]
4000677c:	f103 33ff 	add.w	r3, r3, #4294967295
40006780:	697a      	ldr	r2, [r7, #20]
40006782:	b2d2      	uxtb	r2, r2
40006784:	f102 0230 	add.w	r2, r2, #48	; 0x30
40006788:	b2d2      	uxtb	r2, r2
4000678a:	f107 0120 	add.w	r1, r7, #32
4000678e:	18cb      	adds	r3, r1, r3
40006790:	f803 2c18 	strb.w	r2, [r3, #-24]
40006794:	e00c      	b.n	400067b0 <putdata+0x78>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:232
	}
	/* convert into ASCII hex number range from A-F 	*/
	else
	{
	    str[i-1] = mod_val + 55;
40006796:	69fb      	ldr	r3, [r7, #28]
40006798:	f103 33ff 	add.w	r3, r3, #4294967295
4000679c:	697a      	ldr	r2, [r7, #20]
4000679e:	b2d2      	uxtb	r2, r2
400067a0:	f102 0237 	add.w	r2, r2, #55	; 0x37
400067a4:	b2d2      	uxtb	r2, r2
400067a6:	f107 0120 	add.w	r1, r7, #32
400067aa:	18cb      	adds	r3, r1, r3
400067ac:	f803 2c18 	strb.w	r2, [r3, #-24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:235
	}
	/* indicate the last computed digit, so set the remaining digit to 0	*/
	if (flag)
400067b0:	69bb      	ldr	r3, [r7, #24]
400067b2:	2b00      	cmp	r3, #0
400067b4:	d002      	beq.n	400067bc <putdata+0x84>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:237
	{
	    dec_num = 0;
400067b6:	f04f 0300 	mov.w	r3, #0
400067ba:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:207
    char str[11];
    u32 i, flag = 0, mod_val;/*, length = 8;*/

    /* Initial the modular value	*/
    mod_val = dec_num;
    for (i=length; i > 0; i--)
400067bc:	69fb      	ldr	r3, [r7, #28]
400067be:	f103 33ff 	add.w	r3, r3, #4294967295
400067c2:	61fb      	str	r3, [r7, #28]
400067c4:	69fb      	ldr	r3, [r7, #28]
400067c6:	2b00      	cmp	r3, #0
400067c8:	d1c3      	bne.n	40006752 <putdata+0x1a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:244
    }
	
    /*str[8] = '\n';
    str[9] = '';
    str[10] = '\0';*/
	str[length] = '\0';
400067ca:	f107 0208 	add.w	r2, r7, #8
400067ce:	683b      	ldr	r3, [r7, #0]
400067d0:	18d3      	adds	r3, r2, r3
400067d2:	f04f 0200 	mov.w	r2, #0
400067d6:	701a      	strb	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:245
    putstring(str);
400067d8:	f107 0308 	add.w	r3, r7, #8
400067dc:	4618      	mov	r0, r3
400067de:	f7ff ff8b 	bl	400066f8 <putstring>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:248

#endif
}
400067e2:	f107 0720 	add.w	r7, r7, #32
400067e6:	46bd      	mov	sp, r7
400067e8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400067ec:	4770      	bx	lr
400067ee:	bf00      	nop

400067f0 <mvUartGetc>:
mvUartGetc():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:267
* RETURN:
*	carachter from the uart port.
*
*******************************************************************************/
MV_U8	mvUartGetc()
{
400067f0:	b480      	push	{r7}
400067f2:	b083      	sub	sp, #12
400067f4:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:269
#if !defined(MV_NO_INPUT)
	volatile MV_UART_PORT *pUartPort = (volatile MV_UART_PORT *)(INTER_REGS_BASE + UART0_REG_OFFSET);
400067f6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
400067fa:	f2cd 0301 	movt	r3, #53249	; 0xd001
400067fe:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:270
	while ((pUartPort->lsr & LSR_DR) == 0) ;
40006800:	bf00      	nop
40006802:	687b      	ldr	r3, [r7, #4]
40006804:	7d1b      	ldrb	r3, [r3, #20]
40006806:	b2db      	uxtb	r3, r3
40006808:	f003 0301 	and.w	r3, r3, #1
4000680c:	2b00      	cmp	r3, #0
4000680e:	d0f8      	beq.n	40006802 <mvUartGetc+0x12>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:271
	return (pUartPort->rbr);
40006810:	687b      	ldr	r3, [r7, #4]
40006812:	781b      	ldrb	r3, [r3, #0]
40006814:	b2db      	uxtb	r3, r3
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:275
#else
	return 0xff;
#endif
}
40006816:	4618      	mov	r0, r3
40006818:	f107 070c 	add.w	r7, r7, #12
4000681c:	46bd      	mov	sp, r7
4000681e:	bc80      	pop	{r7}
40006820:	4770      	bx	lr
40006822:	bf00      	nop

40006824 <mvUartTstc>:
mvUartTstc():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:295
* RETURN:
*	None.
*
*******************************************************************************/
MV_BOOL mvUartTstc()
{
40006824:	b480      	push	{r7}
40006826:	b083      	sub	sp, #12
40006828:	af00      	add	r7, sp, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:297
#if !defined(MV_NO_INPUT)
	volatile MV_UART_PORT *pUartPort = (volatile MV_UART_PORT *)(INTER_REGS_BASE + UART0_REG_OFFSET);
4000682a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
4000682e:	f2cd 0301 	movt	r3, #53249	; 0xd001
40006832:	607b      	str	r3, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:298
	return ((pUartPort->lsr & LSR_DR) != 0);
40006834:	687b      	ldr	r3, [r7, #4]
40006836:	7d1b      	ldrb	r3, [r3, #20]
40006838:	b2db      	uxtb	r3, r3
4000683a:	f003 0301 	and.w	r3, r3, #1
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mvUart.c:302
#else
	return FALSE;
#endif /* #if !defined(MV_NO_INPUT) */
}
4000683e:	4618      	mov	r0, r3
40006840:	f107 070c 	add.w	r7, r7, #12
40006844:	46bd      	mov	sp, r7
40006846:	bc80      	pop	{r7}
40006848:	4770      	bx	lr
4000684a:	bf00      	nop

4000684c <MV_MEMIO_LE32_READ>:
MV_MEMIO_LE32_READ():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:387
#define MV_MEMIO_LE32_WRITE(addr, data) \
        MV_MEMIO32_WRITE(addr, MV_32BIT_LE_FAST(data))

/* 32bit read in little endian mode */
static __inline MV_U32 MV_MEMIO_LE32_READ(MV_U32 addr)
{
4000684c:	b480      	push	{r7}
4000684e:	b085      	sub	sp, #20
40006850:	af00      	add	r7, sp, #0
40006852:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:390
	MV_U32 data;

	data= (MV_U32)MV_MEMIO32_READ(addr);
40006854:	687b      	ldr	r3, [r7, #4]
40006856:	681b      	ldr	r3, [r3, #0]
40006858:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:392

	return (MV_U32)MV_32BIT_LE_FAST(data);
4000685a:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:393
}
4000685c:	4618      	mov	r0, r3
4000685e:	f107 0714 	add.w	r7, r7, #20
40006862:	46bd      	mov	sp, r7
40006864:	bc80      	pop	{r7}
40006866:	4770      	bx	lr

40006868 <twsiTimeoutChk>:
twsiTimeoutChk():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:85
static MV_STATUS twsiTargetOffsSet(MV_U8 chanNum, MV_U32 offset, MV_BOOL moreThen256);
static MV_VOID mvTwsiDelay(MV_U32 uiDelay);

/*******************************************************************************/
static MV_BOOL twsiTimeoutChk(MV_U32 timeout, const MV_8 *pString)
{
40006868:	b480      	push	{r7}
4000686a:	b083      	sub	sp, #12
4000686c:	af00      	add	r7, sp, #0
4000686e:	6078      	str	r0, [r7, #4]
40006870:	6039      	str	r1, [r7, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:86
	if (timeout >= TWSI_TIMEOUT_VALUE)
40006872:	687a      	ldr	r2, [r7, #4]
40006874:	f240 43ff 	movw	r3, #1279	; 0x4ff
40006878:	429a      	cmp	r2, r3
4000687a:	d902      	bls.n	40006882 <twsiTimeoutChk+0x1a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:87
		return MV_TRUE;
4000687c:	f04f 0301 	mov.w	r3, #1
40006880:	e001      	b.n	40006886 <twsiTimeoutChk+0x1e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:89

	return MV_FALSE;
40006882:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:90
}
40006886:	4618      	mov	r0, r3
40006888:	f107 070c 	add.w	r7, r7, #12
4000688c:	46bd      	mov	sp, r7
4000688e:	bc80      	pop	{r7}
40006890:	4770      	bx	lr
40006892:	bf00      	nop

40006894 <mvTwsiStartBitSet>:
mvTwsiStartBitSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:116
*       MV_OK is start bit was set successfuly on the bus.
*       MV_FAIL if interrupt flag was set before setting start bit.
*
*******************************************************************************/
MV_STATUS mvTwsiStartBitSet(MV_U8 chanNum)
{
40006894:	b580      	push	{r7, lr}
40006896:	b086      	sub	sp, #24
40006898:	af00      	add	r7, sp, #0
4000689a:	4603      	mov	r3, r0
4000689c:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:117
	MV_BOOL isIntFlag = MV_FALSE;
4000689e:	f04f 0300 	mov.w	r3, #0
400068a2:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:121
	MV_U32 timeout, temp;

	/* check Int flag */
	if (twsiMainIntGet(chanNum))
400068a4:	79fb      	ldrb	r3, [r7, #7]
400068a6:	4618      	mov	r0, r3
400068a8:	f000 f8f6 	bl	40006a98 <twsiMainIntGet>
400068ac:	4603      	mov	r3, r0
400068ae:	2b00      	cmp	r3, #0
400068b0:	d002      	beq.n	400068b8 <mvTwsiStartBitSet+0x24>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:122
		isIntFlag = MV_TRUE;
400068b2:	f04f 0301 	mov.w	r3, #1
400068b6:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:124
	/* set start Bit */
	temp = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
400068b8:	79fb      	ldrb	r3, [r7, #7]
400068ba:	f503 7388 	add.w	r3, r3, #272	; 0x110
400068be:	ea4f 2303 	mov.w	r3, r3, lsl #8
400068c2:	f103 0308 	add.w	r3, r3, #8
400068c6:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400068ca:	4618      	mov	r0, r3
400068cc:	f7ff ffbe 	bl	4000684c <MV_MEMIO_LE32_READ>
400068d0:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:127
	
/*	add = TWSI_CONTROL_REG(chanNum); */
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), temp | TWSI_CONTROL_START_BIT);
400068d2:	79fb      	ldrb	r3, [r7, #7]
400068d4:	f503 7388 	add.w	r3, r3, #272	; 0x110
400068d8:	ea4f 2303 	mov.w	r3, r3, lsl #8
400068dc:	f103 0308 	add.w	r3, r3, #8
400068e0:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400068e4:	68fa      	ldr	r2, [r7, #12]
400068e6:	f042 0220 	orr.w	r2, r2, #32
400068ea:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:130

	/* in case that the int flag was set before i.e. repeated start bit */
	if (isIntFlag)
400068ec:	697b      	ldr	r3, [r7, #20]
400068ee:	2b00      	cmp	r3, #0
400068f0:	d003      	beq.n	400068fa <mvTwsiStartBitSet+0x66>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:131
		twsiIntFlgClr(chanNum);
400068f2:	79fb      	ldrb	r3, [r7, #7]
400068f4:	4618      	mov	r0, r3
400068f6:	f000 f8f3 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:134

	/* wait for interrupt */
	timeout = 0;
400068fa:	f04f 0300 	mov.w	r3, #0
400068fe:	613b      	str	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:135
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
40006900:	bf00      	nop
40006902:	79fb      	ldrb	r3, [r7, #7]
40006904:	4618      	mov	r0, r3
40006906:	f000 f8c7 	bl	40006a98 <twsiMainIntGet>
4000690a:	4603      	mov	r3, r0
4000690c:	2b00      	cmp	r3, #0
4000690e:	d10d      	bne.n	4000692c <mvTwsiStartBitSet+0x98>
40006910:	693a      	ldr	r2, [r7, #16]
40006912:	f240 43ff 	movw	r3, #1279	; 0x4ff
40006916:	429a      	cmp	r2, r3
40006918:	bf8c      	ite	hi
4000691a:	2300      	movhi	r3, #0
4000691c:	2301      	movls	r3, #1
4000691e:	b2db      	uxtb	r3, r3
40006920:	693a      	ldr	r2, [r7, #16]
40006922:	f102 0201 	add.w	r2, r2, #1
40006926:	613a      	str	r2, [r7, #16]
40006928:	2b00      	cmp	r3, #0
4000692a:	d1ea      	bne.n	40006902 <mvTwsiStartBitSet+0x6e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:139
		;

	/* check for timeout */
	if (MV_TRUE == twsiTimeoutChk(timeout, "TWSI: mvTwsiStartBitSet ERROR - Start Clear bit TimeOut .\n"))
4000692c:	6938      	ldr	r0, [r7, #16]
4000692e:	4b1b      	ldr	r3, [pc, #108]	; (4000699c <mvTwsiStartBitSet+0x108>)
40006930:	447b      	add	r3, pc
40006932:	4619      	mov	r1, r3
40006934:	f7ff ff98 	bl	40006868 <twsiTimeoutChk>
40006938:	4603      	mov	r3, r0
4000693a:	2b01      	cmp	r3, #1
4000693c:	d102      	bne.n	40006944 <mvTwsiStartBitSet+0xb0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:140
		return MV_TIMEOUT;
4000693e:	f04f 030e 	mov.w	r3, #14
40006942:	e023      	b.n	4000698c <mvTwsiStartBitSet+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:143

	/* check that start bit went down */
	if ((MV_REG_READ(TWSI_CONTROL_REG(chanNum)) & TWSI_CONTROL_START_BIT) != 0)
40006944:	79fb      	ldrb	r3, [r7, #7]
40006946:	f503 7388 	add.w	r3, r3, #272	; 0x110
4000694a:	ea4f 2303 	mov.w	r3, r3, lsl #8
4000694e:	f103 0308 	add.w	r3, r3, #8
40006952:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006956:	4618      	mov	r0, r3
40006958:	f7ff ff78 	bl	4000684c <MV_MEMIO_LE32_READ>
4000695c:	4603      	mov	r3, r0
4000695e:	f003 0320 	and.w	r3, r3, #32
40006962:	2b00      	cmp	r3, #0
40006964:	d002      	beq.n	4000696c <mvTwsiStartBitSet+0xd8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:144
		return MV_FAIL;
40006966:	f04f 0301 	mov.w	r3, #1
4000696a:	e00f      	b.n	4000698c <mvTwsiStartBitSet+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:147

	/* check the status */
	temp = twsiStsGet(chanNum);
4000696c:	79fb      	ldrb	r3, [r7, #7]
4000696e:	4618      	mov	r0, r3
40006970:	f000 fa14 	bl	40006d9c <twsiStsGet>
40006974:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:148
	if ((temp != TWSI_START_CON_TRA) && (temp != TWSI_REPEATED_START_CON_TRA))
40006976:	68fb      	ldr	r3, [r7, #12]
40006978:	2b08      	cmp	r3, #8
4000697a:	d005      	beq.n	40006988 <mvTwsiStartBitSet+0xf4>
4000697c:	68fb      	ldr	r3, [r7, #12]
4000697e:	2b10      	cmp	r3, #16
40006980:	d002      	beq.n	40006988 <mvTwsiStartBitSet+0xf4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:149
		return MV_FAIL;
40006982:	f04f 0301 	mov.w	r3, #1
40006986:	e001      	b.n	4000698c <mvTwsiStartBitSet+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:151

	return MV_OK;
40006988:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:153

}
4000698c:	4618      	mov	r0, r3
4000698e:	f107 0718 	add.w	r7, r7, #24
40006992:	46bd      	mov	sp, r7
40006994:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006998:	4770      	bx	lr
4000699a:	bf00      	nop
4000699c:	00001178 	andeq	r1, r0, r8, ror r1

400069a0 <mvTwsiStopBitSet>:
mvTwsiStopBitSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:174
* RETURN:
*       MV_TRUE is stop bit was set successfuly on the bus.
*
*******************************************************************************/
MV_STATUS mvTwsiStopBitSet(MV_U8 chanNum)
{
400069a0:	b580      	push	{r7, lr}
400069a2:	b084      	sub	sp, #16
400069a4:	af00      	add	r7, sp, #0
400069a6:	4603      	mov	r3, r0
400069a8:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:178
	MV_U32 timeout, temp;

	/* Generate stop bit */
	temp = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
400069aa:	79fb      	ldrb	r3, [r7, #7]
400069ac:	f503 7388 	add.w	r3, r3, #272	; 0x110
400069b0:	ea4f 2303 	mov.w	r3, r3, lsl #8
400069b4:	f103 0308 	add.w	r3, r3, #8
400069b8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400069bc:	4618      	mov	r0, r3
400069be:	f7ff ff45 	bl	4000684c <MV_MEMIO_LE32_READ>
400069c2:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:181
	
/*	add = TWSI_CONTROL_REG(chanNum); */
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), temp | TWSI_CONTROL_STOP_BIT);
400069c4:	79fb      	ldrb	r3, [r7, #7]
400069c6:	f503 7388 	add.w	r3, r3, #272	; 0x110
400069ca:	ea4f 2303 	mov.w	r3, r3, lsl #8
400069ce:	f103 0308 	add.w	r3, r3, #8
400069d2:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400069d6:	68ba      	ldr	r2, [r7, #8]
400069d8:	f042 0210 	orr.w	r2, r2, #16
400069dc:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:183

	twsiIntFlgClr(chanNum);
400069de:	79fb      	ldrb	r3, [r7, #7]
400069e0:	4618      	mov	r0, r3
400069e2:	f000 f87d 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:186

	/* wait for stop bit to come down */
	timeout = 0;
400069e6:	f04f 0300 	mov.w	r3, #0
400069ea:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:187
	while (((MV_REG_READ(TWSI_CONTROL_REG(chanNum)) & TWSI_CONTROL_STOP_BIT) != 0)
400069ec:	bf00      	nop
400069ee:	79fb      	ldrb	r3, [r7, #7]
400069f0:	f503 7388 	add.w	r3, r3, #272	; 0x110
400069f4:	ea4f 2303 	mov.w	r3, r3, lsl #8
400069f8:	f103 0308 	add.w	r3, r3, #8
400069fc:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006a00:	4618      	mov	r0, r3
40006a02:	f7ff ff23 	bl	4000684c <MV_MEMIO_LE32_READ>
40006a06:	4603      	mov	r3, r0
40006a08:	f003 0310 	and.w	r3, r3, #16
40006a0c:	2b00      	cmp	r3, #0
40006a0e:	d00d      	beq.n	40006a2c <mvTwsiStopBitSet+0x8c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:188
				&& (timeout++ < TWSI_TIMEOUT_VALUE))
40006a10:	68fa      	ldr	r2, [r7, #12]
40006a12:	f240 43ff 	movw	r3, #1279	; 0x4ff
40006a16:	429a      	cmp	r2, r3
40006a18:	bf8c      	ite	hi
40006a1a:	2300      	movhi	r3, #0
40006a1c:	2301      	movls	r3, #1
40006a1e:	b2db      	uxtb	r3, r3
40006a20:	68fa      	ldr	r2, [r7, #12]
40006a22:	f102 0201 	add.w	r2, r2, #1
40006a26:	60fa      	str	r2, [r7, #12]
40006a28:	2b00      	cmp	r3, #0
40006a2a:	d1e0      	bne.n	400069ee <mvTwsiStopBitSet+0x4e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:192
		;

	/* check for timeout */
	if (MV_TRUE == twsiTimeoutChk(timeout, "TWSI: mvTwsiStopBitSet ERROR - Stop bit TimeOut .\n"))
40006a2c:	68f8      	ldr	r0, [r7, #12]
40006a2e:	4b19      	ldr	r3, [pc, #100]	; (40006a94 <mvTwsiStopBitSet+0xf4>)
40006a30:	447b      	add	r3, pc
40006a32:	4619      	mov	r1, r3
40006a34:	f7ff ff18 	bl	40006868 <twsiTimeoutChk>
40006a38:	4603      	mov	r3, r0
40006a3a:	2b01      	cmp	r3, #1
40006a3c:	d102      	bne.n	40006a44 <mvTwsiStopBitSet+0xa4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:193
		return MV_TIMEOUT;
40006a3e:	f04f 030e 	mov.w	r3, #14
40006a42:	e020      	b.n	40006a86 <mvTwsiStopBitSet+0xe6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:196

	/* check that the stop bit went down */
	if ((MV_REG_READ(TWSI_CONTROL_REG(chanNum)) & TWSI_CONTROL_STOP_BIT) != 0)
40006a44:	79fb      	ldrb	r3, [r7, #7]
40006a46:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006a4a:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006a4e:	f103 0308 	add.w	r3, r3, #8
40006a52:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006a56:	4618      	mov	r0, r3
40006a58:	f7ff fef8 	bl	4000684c <MV_MEMIO_LE32_READ>
40006a5c:	4603      	mov	r3, r0
40006a5e:	f003 0310 	and.w	r3, r3, #16
40006a62:	2b00      	cmp	r3, #0
40006a64:	d002      	beq.n	40006a6c <mvTwsiStopBitSet+0xcc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:197
		return MV_FAIL;
40006a66:	f04f 0301 	mov.w	r3, #1
40006a6a:	e00c      	b.n	40006a86 <mvTwsiStopBitSet+0xe6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:200

	/* check the status */
	temp = twsiStsGet(chanNum);
40006a6c:	79fb      	ldrb	r3, [r7, #7]
40006a6e:	4618      	mov	r0, r3
40006a70:	f000 f994 	bl	40006d9c <twsiStsGet>
40006a74:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:201
	if (temp != TWSI_NO_REL_STS_INT_FLAG_IS_KEPT_0)
40006a76:	68bb      	ldr	r3, [r7, #8]
40006a78:	2bf8      	cmp	r3, #248	; 0xf8
40006a7a:	d002      	beq.n	40006a82 <mvTwsiStopBitSet+0xe2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:202
		return MV_FAIL;
40006a7c:	f04f 0301 	mov.w	r3, #1
40006a80:	e001      	b.n	40006a86 <mvTwsiStopBitSet+0xe6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:204

	return MV_OK;
40006a82:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:205
}
40006a86:	4618      	mov	r0, r3
40006a88:	f107 0710 	add.w	r7, r7, #16
40006a8c:	46bd      	mov	sp, r7
40006a8e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006a92:	4770      	bx	lr
40006a94:	000010b4 	strheq	r1, [r0], -r4

40006a98 <twsiMainIntGet>:
twsiMainIntGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:224
* RETURN:
*       MV_TRUE is interrupt flag is set, MV_FALSE otherwise.
*
*******************************************************************************/
static MV_BOOL twsiMainIntGet(MV_U8 chanNum)
{
40006a98:	b580      	push	{r7, lr}
40006a9a:	b084      	sub	sp, #16
40006a9c:	af00      	add	r7, sp, #0
40006a9e:	4603      	mov	r3, r0
40006aa0:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:229
	MV_U32 temp;

	/* get the int flag bit */

	temp = MV_REG_READ(MV_TWSI_CPU_MAIN_INT_CASUE(chanNum));
40006aa2:	f641 0084 	movw	r0, #6276	; 0x1884
40006aa6:	f2cd 0002 	movt	r0, #53250	; 0xd002
40006aaa:	f7ff fecf 	bl	4000684c <MV_MEMIO_LE32_READ>
40006aae:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:230
	if (temp & (1<<CPU_MAIN_INT_TWSI_OFFS(chanNum))) /*   (TWSI_CPU_MAIN_INT_BIT(chanNum)))	*/
40006ab0:	79fb      	ldrb	r3, [r7, #7]
40006ab2:	f103 0302 	add.w	r3, r3, #2
40006ab6:	f04f 0201 	mov.w	r2, #1
40006aba:	fa02 f303 	lsl.w	r3, r2, r3
40006abe:	461a      	mov	r2, r3
40006ac0:	68fb      	ldr	r3, [r7, #12]
40006ac2:	4013      	ands	r3, r2
40006ac4:	2b00      	cmp	r3, #0
40006ac6:	d002      	beq.n	40006ace <twsiMainIntGet+0x36>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:231
		return MV_TRUE;
40006ac8:	f04f 0301 	mov.w	r3, #1
40006acc:	e001      	b.n	40006ad2 <twsiMainIntGet+0x3a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:233

	return MV_FALSE;
40006ace:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:234
}
40006ad2:	4618      	mov	r0, r3
40006ad4:	f107 0710 	add.w	r7, r7, #16
40006ad8:	46bd      	mov	sp, r7
40006ada:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006ade:	4770      	bx	lr

40006ae0 <twsiIntFlgClr>:
twsiIntFlgClr():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:255
* RETURN:
*       None.
*
*******************************************************************************/
static MV_VOID twsiIntFlgClr(MV_U8 chanNum)
{
40006ae0:	b580      	push	{r7, lr}
40006ae2:	b084      	sub	sp, #16
40006ae4:	af00      	add	r7, sp, #0
40006ae6:	4603      	mov	r3, r0
40006ae8:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:258
	MV_U32 temp;

	mvTwsiDelay(1);
40006aea:	f04f 0001 	mov.w	r0, #1
40006aee:	f000 fd4b 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:260
	/* clear the int flag bit */
	temp = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
40006af2:	79fb      	ldrb	r3, [r7, #7]
40006af4:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006af8:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006afc:	f103 0308 	add.w	r3, r3, #8
40006b00:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006b04:	4618      	mov	r0, r3
40006b06:	f7ff fea1 	bl	4000684c <MV_MEMIO_LE32_READ>
40006b0a:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:261
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), temp & ~(TWSI_CONTROL_INT_FLAG_SET));
40006b0c:	79fb      	ldrb	r3, [r7, #7]
40006b0e:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006b12:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006b16:	f103 0308 	add.w	r3, r3, #8
40006b1a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006b1e:	68fa      	ldr	r2, [r7, #12]
40006b20:	f022 0208 	bic.w	r2, r2, #8
40006b24:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:264

	/* wait for 1 mili sec for the clear to take effect */
	mvTwsiDelay(1);
40006b26:	f04f 0001 	mov.w	r0, #1
40006b2a:	f000 fd2d 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:267

	return;
}
40006b2e:	f107 0710 	add.w	r7, r7, #16
40006b32:	46bd      	mov	sp, r7
40006b34:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006b38:	4770      	bx	lr
40006b3a:	bf00      	nop

40006b3c <twsiAckBitSet>:
twsiAckBitSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:286
* RETURN:
*       None.
*
*******************************************************************************/
static MV_VOID twsiAckBitSet(MV_U8 chanNum)
{
40006b3c:	b580      	push	{r7, lr}
40006b3e:	b084      	sub	sp, #16
40006b40:	af00      	add	r7, sp, #0
40006b42:	4603      	mov	r3, r0
40006b44:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:290
	MV_U32 temp;

	/*Set the Ack bit */
	temp = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
40006b46:	79fb      	ldrb	r3, [r7, #7]
40006b48:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006b4c:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006b50:	f103 0308 	add.w	r3, r3, #8
40006b54:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006b58:	4618      	mov	r0, r3
40006b5a:	f7ff fe77 	bl	4000684c <MV_MEMIO_LE32_READ>
40006b5e:	60f8      	str	r0, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:292
	
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), temp | TWSI_CONTROL_ACK);
40006b60:	79fb      	ldrb	r3, [r7, #7]
40006b62:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006b66:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006b6a:	f103 0308 	add.w	r3, r3, #8
40006b6e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006b72:	68fa      	ldr	r2, [r7, #12]
40006b74:	f042 0204 	orr.w	r2, r2, #4
40006b78:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:295

	/* Add delay of 1ms */
	mvTwsiDelay(1);
40006b7a:	f04f 0001 	mov.w	r0, #1
40006b7e:	f000 fd03 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:297
	return;
}
40006b82:	f107 0710 	add.w	r7, r7, #16
40006b86:	46bd      	mov	sp, r7
40006b88:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006b8c:	4770      	bx	lr
40006b8e:	bf00      	nop

40006b90 <mvTwsiInit>:
mvTwsiInit():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:322
* RETURN:
*       Actual frequancy.
*
*******************************************************************************/
MV_U32 mvTwsiInit(MV_U8 chanNum, MV_HZ frequancy, MV_U32 Tclk, MV_TWSI_ADDR *pTwsiAddr, MV_BOOL generalCallEnable)
{
40006b90:	b580      	push	{r7, lr}
40006b92:	b08e      	sub	sp, #56	; 0x38
40006b94:	af00      	add	r7, sp, #0
40006b96:	60b9      	str	r1, [r7, #8]
40006b98:	607a      	str	r2, [r7, #4]
40006b9a:	603b      	str	r3, [r7, #0]
40006b9c:	4603      	mov	r3, r0
40006b9e:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:323
	MV_U32 n, m, freq, margin, minMargin = 0xffffffff;
40006ba0:	f04f 33ff 	mov.w	r3, #4294967295
40006ba4:	62fb      	str	r3, [r7, #44]	; 0x2c
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:325
	MV_U32 power;
	MV_U32 actualFreq = 0, actualN = 0, actualM = 0, val;
40006ba6:	f04f 0300 	mov.w	r3, #0
40006baa:	62bb      	str	r3, [r7, #40]	; 0x28
40006bac:	f04f 0300 	mov.w	r3, #0
40006bb0:	627b      	str	r3, [r7, #36]	; 0x24
40006bb2:	f04f 0300 	mov.w	r3, #0
40006bb6:	623b      	str	r3, [r7, #32]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:334
	val = (MV_REG_READ(REG_MPP_CONTROL_ADDR) | (REG_MPP_CONTROL_TWSI_VALUE << REG_MPP_CONTROL_TWSI_OFFS));
	MV_REG_WRITE(REG_MPP_CONTROL_ADDR, val);
#endif

	/* Calucalte N and M for the TWSI clock baud rate */
	for (n = 0; n < 8; n++) {
40006bb8:	f04f 0300 	mov.w	r3, #0
40006bbc:	637b      	str	r3, [r7, #52]	; 0x34
40006bbe:	e03d      	b.n	40006c3c <mvTwsiInit+0xac>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:335
		for (m = 0; m < 16; m++) {
40006bc0:	f04f 0300 	mov.w	r3, #0
40006bc4:	633b      	str	r3, [r7, #48]	; 0x30
40006bc6:	e032      	b.n	40006c2e <mvTwsiInit+0x9e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:336
			power = 2 << n;	/* power = 2^(n+1) */
40006bc8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
40006bca:	f04f 0202 	mov.w	r2, #2
40006bce:	fa02 f303 	lsl.w	r3, r2, r3
40006bd2:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:337
			freq = Tclk / (10 * (m + 1) * power);
40006bd4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
40006bd6:	f103 0301 	add.w	r3, r3, #1
40006bda:	69ba      	ldr	r2, [r7, #24]
40006bdc:	fb02 f203 	mul.w	r2, r2, r3
40006be0:	4613      	mov	r3, r2
40006be2:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006be6:	189b      	adds	r3, r3, r2
40006be8:	ea4f 0343 	mov.w	r3, r3, lsl #1
40006bec:	6878      	ldr	r0, [r7, #4]
40006bee:	4619      	mov	r1, r3
40006bf0:	f000 edbc 	blx	4000776c <__aeabi_uidiv>
40006bf4:	4603      	mov	r3, r0
40006bf6:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:338
			margin = MV_ABS(frequancy - freq);
40006bf8:	68ba      	ldr	r2, [r7, #8]
40006bfa:	697b      	ldr	r3, [r7, #20]
40006bfc:	1ad3      	subs	r3, r2, r3
40006bfe:	2b00      	cmp	r3, #0
40006c00:	bfb8      	it	lt
40006c02:	425b      	neglt	r3, r3
40006c04:	613b      	str	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:340

			if ((freq <= frequancy) && (margin < minMargin)) {
40006c06:	697a      	ldr	r2, [r7, #20]
40006c08:	68bb      	ldr	r3, [r7, #8]
40006c0a:	429a      	cmp	r2, r3
40006c0c:	d80b      	bhi.n	40006c26 <mvTwsiInit+0x96>
40006c0e:	693a      	ldr	r2, [r7, #16]
40006c10:	6afb      	ldr	r3, [r7, #44]	; 0x2c
40006c12:	429a      	cmp	r2, r3
40006c14:	d207      	bcs.n	40006c26 <mvTwsiInit+0x96>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:341
				minMargin = margin;
40006c16:	693b      	ldr	r3, [r7, #16]
40006c18:	62fb      	str	r3, [r7, #44]	; 0x2c
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:342
				actualFreq = freq;
40006c1a:	697b      	ldr	r3, [r7, #20]
40006c1c:	62bb      	str	r3, [r7, #40]	; 0x28
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:343
				actualN = n;
40006c1e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
40006c20:	627b      	str	r3, [r7, #36]	; 0x24
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:344
				actualM = m;
40006c22:	6b3b      	ldr	r3, [r7, #48]	; 0x30
40006c24:	623b      	str	r3, [r7, #32]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:335
	MV_REG_WRITE(REG_MPP_CONTROL_ADDR, val);
#endif

	/* Calucalte N and M for the TWSI clock baud rate */
	for (n = 0; n < 8; n++) {
		for (m = 0; m < 16; m++) {
40006c26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
40006c28:	f103 0301 	add.w	r3, r3, #1
40006c2c:	633b      	str	r3, [r7, #48]	; 0x30
40006c2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
40006c30:	2b0f      	cmp	r3, #15
40006c32:	d9c9      	bls.n	40006bc8 <mvTwsiInit+0x38>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:334
	val = (MV_REG_READ(REG_MPP_CONTROL_ADDR) | (REG_MPP_CONTROL_TWSI_VALUE << REG_MPP_CONTROL_TWSI_OFFS));
	MV_REG_WRITE(REG_MPP_CONTROL_ADDR, val);
#endif

	/* Calucalte N and M for the TWSI clock baud rate */
	for (n = 0; n < 8; n++) {
40006c34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
40006c36:	f103 0301 	add.w	r3, r3, #1
40006c3a:	637b      	str	r3, [r7, #52]	; 0x34
40006c3c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
40006c3e:	2b07      	cmp	r3, #7
40006c40:	d9be      	bls.n	40006bc0 <mvTwsiInit+0x30>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:349
				actualM = m;
			}
		}
	}
	/* Reset the TWSI logic */
	twsiReset(chanNum);
40006c42:	7bfb      	ldrb	r3, [r7, #15]
40006c44:	4618      	mov	r0, r3
40006c46:	f000 f8c3 	bl	40006dd0 <twsiReset>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:352

	/* Set the baud rate */
	val = ((actualM << TWSI_BAUD_RATE_M_OFFS) | actualN << TWSI_BAUD_RATE_N_OFFS);
40006c4a:	6a3b      	ldr	r3, [r7, #32]
40006c4c:	ea4f 02c3 	mov.w	r2, r3, lsl #3
40006c50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
40006c52:	4313      	orrs	r3, r2
40006c54:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:354
/*	add = TWSI_STATUS_BAUDE_RATE_REG(chanNum); */
	MV_REG_WRITE(TWSI_STATUS_BAUDE_RATE_REG(chanNum), val);
40006c56:	7bfb      	ldrb	r3, [r7, #15]
40006c58:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006c5c:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006c60:	f103 030c 	add.w	r3, r3, #12
40006c64:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006c68:	69fa      	ldr	r2, [r7, #28]
40006c6a:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:358

	/* Enable the TWSI and slave */
/*	add = TWSI_CONTROL_REG(chanNum); */
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), TWSI_CONTROL_ENA | TWSI_CONTROL_ACK);
40006c6c:	7bfb      	ldrb	r3, [r7, #15]
40006c6e:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006c72:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006c76:	f103 0308 	add.w	r3, r3, #8
40006c7a:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006c7e:	f04f 0244 	mov.w	r2, #68	; 0x44
40006c82:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:361

	/* set the TWSI slave address */
	if (pTwsiAddr->type == ADDR10_BIT) {	/* 10 Bit deviceAddress */
40006c84:	683b      	ldr	r3, [r7, #0]
40006c86:	791b      	ldrb	r3, [r3, #4]
40006c88:	2b01      	cmp	r3, #1
40006c8a:	d12a      	bne.n	40006ce2 <mvTwsiInit+0x152>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:363
		/* writing the 2 most significant bits of the 10 bit address */
		val = ((pTwsiAddr->address & TWSI_SLAVE_ADDR_10BIT_MASK) >> TWSI_SLAVE_ADDR_10BIT_OFFS);
40006c8c:	683b      	ldr	r3, [r7, #0]
40006c8e:	681b      	ldr	r3, [r3, #0]
40006c90:	f403 7340 	and.w	r3, r3, #768	; 0x300
40006c94:	ea4f 13d3 	mov.w	r3, r3, lsr #7
40006c98:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:365
		/* bits 7:3 must be 0x11110 */
		val |= TWSI_SLAVE_ADDR_10BIT_CONST;
40006c9a:	69fb      	ldr	r3, [r7, #28]
40006c9c:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
40006ca0:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:367
		/* set GCE bit */
		if (generalCallEnable)
40006ca2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
40006ca4:	2b00      	cmp	r3, #0
40006ca6:	d003      	beq.n	40006cb0 <mvTwsiInit+0x120>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:368
			val |= TWSI_SLAVE_ADDR_GCE_ENA;
40006ca8:	69fb      	ldr	r3, [r7, #28]
40006caa:	f043 0301 	orr.w	r3, r3, #1
40006cae:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:371
		/* write slave address */
/*		add = TWSI_SLAVE_ADDR_REG(chanNum); */
		MV_REG_WRITE(TWSI_SLAVE_ADDR_REG(chanNum), val);
40006cb0:	7bfb      	ldrb	r3, [r7, #15]
40006cb2:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006cb6:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006cba:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006cbe:	69fa      	ldr	r2, [r7, #28]
40006cc0:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:374

		/* writing the 8 least significant bits of the 10 bit address */
		val = (pTwsiAddr->address << TWSI_EXTENDED_SLAVE_OFFS) & TWSI_EXTENDED_SLAVE_MASK;
40006cc2:	683b      	ldr	r3, [r7, #0]
40006cc4:	681b      	ldr	r3, [r3, #0]
40006cc6:	b2db      	uxtb	r3, r3
40006cc8:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:376
/*		add = TWSI_EXTENDED_SLAVE_ADDR_REG(chanNum); */
		MV_REG_WRITE(TWSI_EXTENDED_SLAVE_ADDR_REG(chanNum), val);
40006cca:	7bfb      	ldrb	r3, [r7, #15]
40006ccc:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006cd0:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006cd4:	f103 0310 	add.w	r3, r3, #16
40006cd8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006cdc:	69fa      	ldr	r2, [r7, #28]
40006cde:	601a      	str	r2, [r3, #0]
40006ce0:	e01b      	b.n	40006d1a <mvTwsiInit+0x18a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:381
	} else {		/*7 bit address */

		/* set the 7 Bits address */
/*		add = TWSI_EXTENDED_SLAVE_ADDR_REG(chanNum); */
		MV_REG_WRITE(TWSI_EXTENDED_SLAVE_ADDR_REG(chanNum), 0x0);
40006ce2:	7bfb      	ldrb	r3, [r7, #15]
40006ce4:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006ce8:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006cec:	f103 0310 	add.w	r3, r3, #16
40006cf0:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006cf4:	f04f 0200 	mov.w	r2, #0
40006cf8:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:382
		val = (pTwsiAddr->address << TWSI_SLAVE_ADDR_7BIT_OFFS) & TWSI_SLAVE_ADDR_7BIT_MASK;
40006cfa:	683b      	ldr	r3, [r7, #0]
40006cfc:	681b      	ldr	r3, [r3, #0]
40006cfe:	ea4f 0343 	mov.w	r3, r3, lsl #1
40006d02:	f403 73ff 	and.w	r3, r3, #510	; 0x1fe
40006d06:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:384
/*		add = TWSI_SLAVE_ADDR_REG(chanNum); */
		MV_REG_WRITE(TWSI_SLAVE_ADDR_REG(chanNum), val);
40006d08:	7bfb      	ldrb	r3, [r7, #15]
40006d0a:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006d0e:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006d12:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006d16:	69fa      	ldr	r2, [r7, #28]
40006d18:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:388
	}

	/* unmask twsi int */
	val = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
40006d1a:	7bfb      	ldrb	r3, [r7, #15]
40006d1c:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006d20:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006d24:	f103 0308 	add.w	r3, r3, #8
40006d28:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006d2c:	4618      	mov	r0, r3
40006d2e:	f7ff fd8d 	bl	4000684c <MV_MEMIO_LE32_READ>
40006d32:	61f8      	str	r0, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:389
	MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), val | TWSI_CONTROL_INT_ENA);
40006d34:	7bfb      	ldrb	r3, [r7, #15]
40006d36:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006d3a:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006d3e:	f103 0308 	add.w	r3, r3, #8
40006d42:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006d46:	69fa      	ldr	r2, [r7, #28]
40006d48:	f042 0280 	orr.w	r2, r2, #128	; 0x80
40006d4c:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:392
		
	/* unmask twsi int in Interrupt source control register */
	val = (MV_REG_READ(CPU_INT_SOURCE_CONTROL_REG(CPU_MAIN_INT_CAUSE_TWSI(chanNum))) |
40006d4e:	7bfb      	ldrb	r3, [r7, #15]
40006d50:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
40006d54:	f103 03df 	add.w	r3, r3, #223	; 0xdf
40006d58:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006d5c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006d60:	4618      	mov	r0, r3
40006d62:	f7ff fd73 	bl	4000684c <MV_MEMIO_LE32_READ>
40006d66:	4603      	mov	r3, r0
40006d68:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
40006d6c:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:394
			 (1<<CPU_INT_SOURCE_CONTROL_ENA_OFFS));
	MV_REG_WRITE(CPU_INT_SOURCE_CONTROL_REG(CPU_MAIN_INT_CAUSE_TWSI(chanNum)),val);
40006d6e:	7bfb      	ldrb	r3, [r7, #15]
40006d70:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
40006d74:	f103 03df 	add.w	r3, r3, #223	; 0xdf
40006d78:	ea4f 0383 	mov.w	r3, r3, lsl #2
40006d7c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006d80:	69fa      	ldr	r2, [r7, #28]
40006d82:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:397

	/* Add delay of 1ms */
	mvTwsiDelay(1);
40006d84:	f04f 0001 	mov.w	r0, #1
40006d88:	f000 fbfe 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:399

	return actualFreq;
40006d8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:400
}
40006d8e:	4618      	mov	r0, r3
40006d90:	f107 0738 	add.w	r7, r7, #56	; 0x38
40006d94:	46bd      	mov	sp, r7
40006d96:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006d9a:	4770      	bx	lr

40006d9c <twsiStsGet>:
twsiStsGet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:419
* RETURN:
*       MV_U32 - the TWSI status.
*
*******************************************************************************/
static MV_U32 twsiStsGet(MV_U8 chanNum)
{
40006d9c:	b580      	push	{r7, lr}
40006d9e:	b082      	sub	sp, #8
40006da0:	af00      	add	r7, sp, #0
40006da2:	4603      	mov	r3, r0
40006da4:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:420
	return MV_REG_READ(TWSI_STATUS_BAUDE_RATE_REG(chanNum));
40006da6:	79fb      	ldrb	r3, [r7, #7]
40006da8:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006dac:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006db0:	f103 030c 	add.w	r3, r3, #12
40006db4:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006db8:	4618      	mov	r0, r3
40006dba:	f7ff fd47 	bl	4000684c <MV_MEMIO_LE32_READ>
40006dbe:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:422

}
40006dc0:	4618      	mov	r0, r3
40006dc2:	f107 0708 	add.w	r7, r7, #8
40006dc6:	46bd      	mov	sp, r7
40006dc8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006dcc:	4770      	bx	lr
40006dce:	bf00      	nop

40006dd0 <twsiReset>:
twsiReset():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:441
* RETURN:
*       None
*
*******************************************************************************/
static MV_VOID twsiReset(MV_U8 chanNum)
{
40006dd0:	b580      	push	{r7, lr}
40006dd2:	b082      	sub	sp, #8
40006dd4:	af00      	add	r7, sp, #0
40006dd6:	4603      	mov	r3, r0
40006dd8:	71fb      	strb	r3, [r7, #7]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:444

	/* Reset the TWSI logic */
	MV_REG_WRITE(TWSI_SOFT_RESET_REG(chanNum), 0);
40006dda:	79fb      	ldrb	r3, [r7, #7]
40006ddc:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006de0:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006de4:	f103 031c 	add.w	r3, r3, #28
40006de8:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006dec:	f04f 0200 	mov.w	r2, #0
40006df0:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:447

	/* wait for 2 mili sec */
	mvTwsiDelay(2);
40006df2:	f04f 0002 	mov.w	r0, #2
40006df6:	f000 fbc7 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:450

	return;
}
40006dfa:	f107 0708 	add.w	r7, r7, #8
40006dfe:	46bd      	mov	sp, r7
40006e00:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006e04:	4770      	bx	lr
40006e06:	bf00      	nop

40006e08 <mvTwsiAddrSet>:
mvTwsiAddrSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:474
*       MV_OK - if setting the address completed succesfully.
*	MV_FAIL otherwmise.
*
*******************************************************************************/
MV_STATUS mvTwsiAddrSet(MV_U8 chanNum, MV_TWSI_ADDR *pTwsiAddr, MV_TWSI_CMD command)
{
40006e08:	b580      	push	{r7, lr}
40006e0a:	b082      	sub	sp, #8
40006e0c:	af00      	add	r7, sp, #0
40006e0e:	6039      	str	r1, [r7, #0]
40006e10:	4613      	mov	r3, r2
40006e12:	4602      	mov	r2, r0
40006e14:	71fa      	strb	r2, [r7, #7]
40006e16:	71bb      	strb	r3, [r7, #6]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:477
/*	   pTwsiAddr->type, ((command == MV_TWSI_WRITE) ? "Write" : "Read")));	*/
	/* 10 Bit address */
	if (pTwsiAddr->type == ADDR10_BIT) {
40006e18:	683b      	ldr	r3, [r7, #0]
40006e1a:	791b      	ldrb	r3, [r3, #4]
40006e1c:	2b01      	cmp	r3, #1
40006e1e:	d10a      	bne.n	40006e36 <mvTwsiAddrSet+0x2e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:478
		return twsiAddr10BitSet(chanNum, pTwsiAddr->address, command);
40006e20:	683b      	ldr	r3, [r7, #0]
40006e22:	681a      	ldr	r2, [r3, #0]
40006e24:	79f9      	ldrb	r1, [r7, #7]
40006e26:	79bb      	ldrb	r3, [r7, #6]
40006e28:	4608      	mov	r0, r1
40006e2a:	4611      	mov	r1, r2
40006e2c:	461a      	mov	r2, r3
40006e2e:	f000 f813 	bl	40006e58 <twsiAddr10BitSet>
40006e32:	4603      	mov	r3, r0
40006e34:	e009      	b.n	40006e4a <mvTwsiAddrSet+0x42>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:482
	}
	/* 7 Bit address */
	else {
		return twsiAddr7BitSet(chanNum, pTwsiAddr->address, command);
40006e36:	683b      	ldr	r3, [r7, #0]
40006e38:	681a      	ldr	r2, [r3, #0]
40006e3a:	79f9      	ldrb	r1, [r7, #7]
40006e3c:	79bb      	ldrb	r3, [r7, #6]
40006e3e:	4608      	mov	r0, r1
40006e40:	4611      	mov	r1, r2
40006e42:	461a      	mov	r2, r3
40006e44:	f000 f8c6 	bl	40006fd4 <twsiAddr7BitSet>
40006e48:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:485
	}

}
40006e4a:	4618      	mov	r0, r3
40006e4c:	f107 0708 	add.w	r7, r7, #8
40006e50:	46bd      	mov	sp, r7
40006e52:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006e56:	4770      	bx	lr

40006e58 <twsiAddr10BitSet>:
twsiAddr10BitSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:516
*       MV_OK - if setting the address completed succesfully.
*	MV_FAIL otherwmise.
*
*******************************************************************************/
static MV_STATUS twsiAddr10BitSet(MV_U8 chanNum, MV_U32 deviceAddress, MV_TWSI_CMD command)
{
40006e58:	b580      	push	{r7, lr}
40006e5a:	b084      	sub	sp, #16
40006e5c:	af00      	add	r7, sp, #0
40006e5e:	6039      	str	r1, [r7, #0]
40006e60:	4613      	mov	r3, r2
40006e62:	4602      	mov	r2, r0
40006e64:	71fa      	strb	r2, [r7, #7]
40006e66:	71bb      	strb	r3, [r7, #6]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:520
	MV_U32 val, timeout;

	/* writing the 2 most significant bits of the 10 bit address */
	val = ((deviceAddress & TWSI_DATA_ADDR_10BIT_MASK) >> TWSI_DATA_ADDR_10BIT_OFFS);
40006e68:	683b      	ldr	r3, [r7, #0]
40006e6a:	f403 7340 	and.w	r3, r3, #768	; 0x300
40006e6e:	ea4f 13d3 	mov.w	r3, r3, lsr #7
40006e72:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:522
	/* bits 7:3 must be 0x11110 */
	val |= TWSI_DATA_ADDR_10BIT_CONST;
40006e74:	68bb      	ldr	r3, [r7, #8]
40006e76:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
40006e7a:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:524
	/* set command */
	val |= command;
40006e7c:	79bb      	ldrb	r3, [r7, #6]
40006e7e:	68ba      	ldr	r2, [r7, #8]
40006e80:	4313      	orrs	r3, r2
40006e82:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:525
	MV_REG_WRITE(TWSI_DATA_REG(chanNum), val);
40006e84:	79fb      	ldrb	r3, [r7, #7]
40006e86:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006e8a:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006e8e:	f103 0304 	add.w	r3, r3, #4
40006e92:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006e96:	68ba      	ldr	r2, [r7, #8]
40006e98:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:527

	mvTwsiDelay(1);
40006e9a:	f04f 0001 	mov.w	r0, #1
40006e9e:	f000 fb73 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:530

	/* clear Int flag */
	twsiIntFlgClr(chanNum);
40006ea2:	79fb      	ldrb	r3, [r7, #7]
40006ea4:	4618      	mov	r0, r3
40006ea6:	f7ff fe1b 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:533

	/* wait for Int to be Set */
	timeout = 0;
40006eaa:	f04f 0300 	mov.w	r3, #0
40006eae:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:534
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
40006eb0:	bf00      	nop
40006eb2:	79fb      	ldrb	r3, [r7, #7]
40006eb4:	4618      	mov	r0, r3
40006eb6:	f7ff fdef 	bl	40006a98 <twsiMainIntGet>
40006eba:	4603      	mov	r3, r0
40006ebc:	2b00      	cmp	r3, #0
40006ebe:	d10d      	bne.n	40006edc <twsiAddr10BitSet+0x84>
40006ec0:	68fa      	ldr	r2, [r7, #12]
40006ec2:	f240 43ff 	movw	r3, #1279	; 0x4ff
40006ec6:	429a      	cmp	r2, r3
40006ec8:	bf8c      	ite	hi
40006eca:	2300      	movhi	r3, #0
40006ecc:	2301      	movls	r3, #1
40006ece:	b2db      	uxtb	r3, r3
40006ed0:	68fa      	ldr	r2, [r7, #12]
40006ed2:	f102 0201 	add.w	r2, r2, #1
40006ed6:	60fa      	str	r2, [r7, #12]
40006ed8:	2b00      	cmp	r3, #0
40006eda:	d1ea      	bne.n	40006eb2 <twsiAddr10BitSet+0x5a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:539
		;

	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiAddr10BitSet ERROR - 1st addr (10Bit) Int TimeOut.\n"))
40006edc:	68f8      	ldr	r0, [r7, #12]
40006ede:	4b3b      	ldr	r3, [pc, #236]	; (40006fcc <twsiAddr10BitSet+0x174>)
40006ee0:	447b      	add	r3, pc
40006ee2:	4619      	mov	r1, r3
40006ee4:	f7ff fcc0 	bl	40006868 <twsiTimeoutChk>
40006ee8:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:538
	timeout = 0;
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
		;

	/* check for timeout */
	if (MV_TRUE ==
40006eea:	2b01      	cmp	r3, #1
40006eec:	d102      	bne.n	40006ef4 <twsiAddr10BitSet+0x9c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:540
		   twsiTimeoutChk(timeout, "TWSI: twsiAddr10BitSet ERROR - 1st addr (10Bit) Int TimeOut.\n"))
		return MV_TIMEOUT;
40006eee:	f04f 030e 	mov.w	r3, #14
40006ef2:	e063      	b.n	40006fbc <twsiAddr10BitSet+0x164>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:543

	/* check the status */
	val = twsiStsGet(chanNum);
40006ef4:	79fb      	ldrb	r3, [r7, #7]
40006ef6:	4618      	mov	r0, r3
40006ef8:	f7ff ff50 	bl	40006d9c <twsiStsGet>
40006efc:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:544
	if (((val != TWSI_AD_PLS_RD_BIT_TRA_ACK_REC) && (command == MV_TWSI_READ)) ||
40006efe:	68bb      	ldr	r3, [r7, #8]
40006f00:	2b40      	cmp	r3, #64	; 0x40
40006f02:	d002      	beq.n	40006f0a <twsiAddr10BitSet+0xb2>
40006f04:	79bb      	ldrb	r3, [r7, #6]
40006f06:	2b01      	cmp	r3, #1
40006f08:	d005      	beq.n	40006f16 <twsiAddr10BitSet+0xbe>
40006f0a:	68bb      	ldr	r3, [r7, #8]
40006f0c:	2b18      	cmp	r3, #24
40006f0e:	d005      	beq.n	40006f1c <twsiAddr10BitSet+0xc4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:545
			 ((val != TWSI_AD_PLS_WR_BIT_TRA_ACK_REC) && (command == MV_TWSI_WRITE))) {
40006f10:	79bb      	ldrb	r3, [r7, #6]
40006f12:	2b00      	cmp	r3, #0
40006f14:	d102      	bne.n	40006f1c <twsiAddr10BitSet+0xc4>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:548
		/* mvOsPrintf("TWSI: twsiAddr10BitSet ERROR - status %x 1st addr (10 Bit) in %s mode.\n", val,	*/
/*				   ((command == MV_TWSI_WRITE) ? "Write" : "Read"));	*/
		return MV_FAIL;
40006f16:	f04f 0301 	mov.w	r3, #1
40006f1a:	e04f      	b.n	40006fbc <twsiAddr10BitSet+0x164>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:552
			 }

			 /* set  8 LSB of the address */
			 val = (deviceAddress << TWSI_DATA_ADDR_7BIT_OFFS) & TWSI_DATA_ADDR_7BIT_MASK;
40006f1c:	683b      	ldr	r3, [r7, #0]
40006f1e:	ea4f 0343 	mov.w	r3, r3, lsl #1
40006f22:	f403 73ff 	and.w	r3, r3, #510	; 0x1fe
40006f26:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:553
			 MV_REG_WRITE(TWSI_DATA_REG(chanNum), val);
40006f28:	79fb      	ldrb	r3, [r7, #7]
40006f2a:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006f2e:	ea4f 2303 	mov.w	r3, r3, lsl #8
40006f32:	f103 0304 	add.w	r3, r3, #4
40006f36:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40006f3a:	68ba      	ldr	r2, [r7, #8]
40006f3c:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:556

			 /* clear Int flag */
			 twsiIntFlgClr(chanNum);
40006f3e:	79fb      	ldrb	r3, [r7, #7]
40006f40:	4618      	mov	r0, r3
40006f42:	f7ff fdcd 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:559

			 /* wait for Int to be Set */
			 timeout = 0;
40006f46:	f04f 0300 	mov.w	r3, #0
40006f4a:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:560
			 while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
40006f4c:	bf00      	nop
40006f4e:	79fb      	ldrb	r3, [r7, #7]
40006f50:	4618      	mov	r0, r3
40006f52:	f7ff fda1 	bl	40006a98 <twsiMainIntGet>
40006f56:	4603      	mov	r3, r0
40006f58:	2b00      	cmp	r3, #0
40006f5a:	d10d      	bne.n	40006f78 <twsiAddr10BitSet+0x120>
40006f5c:	68fa      	ldr	r2, [r7, #12]
40006f5e:	f240 43ff 	movw	r3, #1279	; 0x4ff
40006f62:	429a      	cmp	r2, r3
40006f64:	bf8c      	ite	hi
40006f66:	2300      	movhi	r3, #0
40006f68:	2301      	movls	r3, #1
40006f6a:	b2db      	uxtb	r3, r3
40006f6c:	68fa      	ldr	r2, [r7, #12]
40006f6e:	f102 0201 	add.w	r2, r2, #1
40006f72:	60fa      	str	r2, [r7, #12]
40006f74:	2b00      	cmp	r3, #0
40006f76:	d1ea      	bne.n	40006f4e <twsiAddr10BitSet+0xf6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:565
				 ;

			 /* check for timeout */
			 if (MV_TRUE ==
						  twsiTimeoutChk(timeout, "TWSI: twsiAddr10BitSet ERROR - 2nd (10 Bit) Int TimOut.\n"))
40006f78:	68f8      	ldr	r0, [r7, #12]
40006f7a:	4b15      	ldr	r3, [pc, #84]	; (40006fd0 <twsiAddr10BitSet+0x178>)
40006f7c:	447b      	add	r3, pc
40006f7e:	4619      	mov	r1, r3
40006f80:	f7ff fc72 	bl	40006868 <twsiTimeoutChk>
40006f84:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:564
			 timeout = 0;
			 while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
				 ;

			 /* check for timeout */
			 if (MV_TRUE ==
40006f86:	2b01      	cmp	r3, #1
40006f88:	d102      	bne.n	40006f90 <twsiAddr10BitSet+0x138>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:566
						  twsiTimeoutChk(timeout, "TWSI: twsiAddr10BitSet ERROR - 2nd (10 Bit) Int TimOut.\n"))
				 return MV_TIMEOUT;
40006f8a:	f04f 030e 	mov.w	r3, #14
40006f8e:	e015      	b.n	40006fbc <twsiAddr10BitSet+0x164>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:569

			 /* check the status */
			 val = twsiStsGet(chanNum);
40006f90:	79fb      	ldrb	r3, [r7, #7]
40006f92:	4618      	mov	r0, r3
40006f94:	f7ff ff02 	bl	40006d9c <twsiStsGet>
40006f98:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:570
			 if (((val != TWSI_SEC_AD_PLS_RD_BIT_TRA_ACK_REC) && (command == MV_TWSI_READ)) ||
40006f9a:	68bb      	ldr	r3, [r7, #8]
40006f9c:	2be0      	cmp	r3, #224	; 0xe0
40006f9e:	d002      	beq.n	40006fa6 <twsiAddr10BitSet+0x14e>
40006fa0:	79bb      	ldrb	r3, [r7, #6]
40006fa2:	2b01      	cmp	r3, #1
40006fa4:	d005      	beq.n	40006fb2 <twsiAddr10BitSet+0x15a>
40006fa6:	68bb      	ldr	r3, [r7, #8]
40006fa8:	2bd0      	cmp	r3, #208	; 0xd0
40006faa:	d005      	beq.n	40006fb8 <twsiAddr10BitSet+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:571
							((val != TWSI_SEC_AD_PLS_WR_BIT_TRA_ACK_REC) && (command == MV_TWSI_WRITE))) {
40006fac:	79bb      	ldrb	r3, [r7, #6]
40006fae:	2b00      	cmp	r3, #0
40006fb0:	d102      	bne.n	40006fb8 <twsiAddr10BitSet+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:574
				 /* mvOsPrintf("TWSI: twsiAddr10BitSet ERROR - status %x 2nd addr(10 Bit) in %s mode.\n", val,	*/
/*							((command == MV_TWSI_WRITE) ? "Write" : "Read"));	*/
				 return MV_FAIL;
40006fb2:	f04f 0301 	mov.w	r3, #1
40006fb6:	e001      	b.n	40006fbc <twsiAddr10BitSet+0x164>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:577
							}

							return MV_OK;
40006fb8:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:578
}
40006fbc:	4618      	mov	r0, r3
40006fbe:	f107 0710 	add.w	r7, r7, #16
40006fc2:	46bd      	mov	sp, r7
40006fc4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40006fc8:	4770      	bx	lr
40006fca:	bf00      	nop
40006fcc:	00000c38 	andeq	r0, r0, r8, lsr ip
40006fd0:	00000bdc 	ldrdeq	r0, [r0], -ip

40006fd4 <twsiAddr7BitSet>:
twsiAddr7BitSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:603
*       MV_OK - if setting the address completed succesfully.
*	MV_FAIL otherwmise.
*
*******************************************************************************/
static MV_STATUS twsiAddr7BitSet(MV_U8 chanNum, MV_U32 deviceAddress, MV_TWSI_CMD command)
{
40006fd4:	b580      	push	{r7, lr}
40006fd6:	b084      	sub	sp, #16
40006fd8:	af00      	add	r7, sp, #0
40006fda:	6039      	str	r1, [r7, #0]
40006fdc:	4613      	mov	r3, r2
40006fde:	4602      	mov	r2, r0
40006fe0:	71fa      	strb	r2, [r7, #7]
40006fe2:	71bb      	strb	r3, [r7, #6]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:607
	MV_U32 val, timeout;

	/* set the address */
	val = (deviceAddress << TWSI_DATA_ADDR_7BIT_OFFS) & TWSI_DATA_ADDR_7BIT_MASK;
40006fe4:	683b      	ldr	r3, [r7, #0]
40006fe6:	ea4f 0343 	mov.w	r3, r3, lsl #1
40006fea:	f403 73ff 	and.w	r3, r3, #510	; 0x1fe
40006fee:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:609
	/* set command */
	val |= command;
40006ff0:	79bb      	ldrb	r3, [r7, #6]
40006ff2:	68ba      	ldr	r2, [r7, #8]
40006ff4:	4313      	orrs	r3, r2
40006ff6:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:610
	MV_REG_WRITE(TWSI_DATA_REG(chanNum), val);
40006ff8:	79fb      	ldrb	r3, [r7, #7]
40006ffa:	f503 7388 	add.w	r3, r3, #272	; 0x110
40006ffe:	ea4f 2303 	mov.w	r3, r3, lsl #8
40007002:	f103 0304 	add.w	r3, r3, #4
40007006:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
4000700a:	68ba      	ldr	r2, [r7, #8]
4000700c:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:612
	/* WA add a delay */
	mvTwsiDelay(1);
4000700e:	f04f 0001 	mov.w	r0, #1
40007012:	f000 fab9 	bl	40007588 <mvTwsiDelay>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:615

	/* clear Int flag */
	twsiIntFlgClr(chanNum);
40007016:	79fb      	ldrb	r3, [r7, #7]
40007018:	4618      	mov	r0, r3
4000701a:	f7ff fd61 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:618

	/* wait for Int to be Set */
	timeout = 0;
4000701e:	f04f 0300 	mov.w	r3, #0
40007022:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:619
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
40007024:	bf00      	nop
40007026:	79fb      	ldrb	r3, [r7, #7]
40007028:	4618      	mov	r0, r3
4000702a:	f7ff fd35 	bl	40006a98 <twsiMainIntGet>
4000702e:	4603      	mov	r3, r0
40007030:	2b00      	cmp	r3, #0
40007032:	d10d      	bne.n	40007050 <twsiAddr7BitSet+0x7c>
40007034:	68fa      	ldr	r2, [r7, #12]
40007036:	f240 43ff 	movw	r3, #1279	; 0x4ff
4000703a:	429a      	cmp	r2, r3
4000703c:	bf8c      	ite	hi
4000703e:	2300      	movhi	r3, #0
40007040:	2301      	movls	r3, #1
40007042:	b2db      	uxtb	r3, r3
40007044:	68fa      	ldr	r2, [r7, #12]
40007046:	f102 0201 	add.w	r2, r2, #1
4000704a:	60fa      	str	r2, [r7, #12]
4000704c:	2b00      	cmp	r3, #0
4000704e:	d1ea      	bne.n	40007026 <twsiAddr7BitSet+0x52>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:624
		;

	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiAddr7BitSet ERROR - Addr (7 Bit) int TimeOut.\n"))
40007050:	68f8      	ldr	r0, [r7, #12]
40007052:	4b14      	ldr	r3, [pc, #80]	; (400070a4 <twsiAddr7BitSet+0xd0>)
40007054:	447b      	add	r3, pc
40007056:	4619      	mov	r1, r3
40007058:	f7ff fc06 	bl	40006868 <twsiTimeoutChk>
4000705c:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:623
	timeout = 0;
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
		;

	/* check for timeout */
	if (MV_TRUE ==
4000705e:	2b01      	cmp	r3, #1
40007060:	d102      	bne.n	40007068 <twsiAddr7BitSet+0x94>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:625
		   twsiTimeoutChk(timeout, "TWSI: twsiAddr7BitSet ERROR - Addr (7 Bit) int TimeOut.\n"))
		return MV_TIMEOUT;
40007062:	f04f 030e 	mov.w	r3, #14
40007066:	e015      	b.n	40007094 <twsiAddr7BitSet+0xc0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:628

	/* check the status */
	val = twsiStsGet(chanNum);
40007068:	79fb      	ldrb	r3, [r7, #7]
4000706a:	4618      	mov	r0, r3
4000706c:	f7ff fe96 	bl	40006d9c <twsiStsGet>
40007070:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:629
	if (((val != TWSI_AD_PLS_RD_BIT_TRA_ACK_REC) && (command == MV_TWSI_READ)) ||
40007072:	68bb      	ldr	r3, [r7, #8]
40007074:	2b40      	cmp	r3, #64	; 0x40
40007076:	d002      	beq.n	4000707e <twsiAddr7BitSet+0xaa>
40007078:	79bb      	ldrb	r3, [r7, #6]
4000707a:	2b01      	cmp	r3, #1
4000707c:	d005      	beq.n	4000708a <twsiAddr7BitSet+0xb6>
4000707e:	68bb      	ldr	r3, [r7, #8]
40007080:	2b18      	cmp	r3, #24
40007082:	d005      	beq.n	40007090 <twsiAddr7BitSet+0xbc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:630
			 ((val != TWSI_AD_PLS_WR_BIT_TRA_ACK_REC) && (command == MV_TWSI_WRITE))) {
40007084:	79bb      	ldrb	r3, [r7, #6]
40007086:	2b00      	cmp	r3, #0
40007088:	d102      	bne.n	40007090 <twsiAddr7BitSet+0xbc>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:633
		/* only in debug, since in boot we try to read the SPD of both DRAM, and we don't
		want error messeges in case DIMM doesn't exist. */
		return MV_FAIL;
4000708a:	f04f 0301 	mov.w	r3, #1
4000708e:	e001      	b.n	40007094 <twsiAddr7BitSet+0xc0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:636
			 }

			 return MV_OK;
40007090:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:637
}
40007094:	4618      	mov	r0, r3
40007096:	f107 0710 	add.w	r7, r7, #16
4000709a:	46bd      	mov	sp, r7
4000709c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400070a0:	4770      	bx	lr
400070a2:	bf00      	nop
400070a4:	00000b40 	andeq	r0, r0, r0, asr #22

400070a8 <twsiDataTransmit>:
twsiDataTransmit():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:667
*	MV_BAD_PARAM - if pBlock is NULL,
*	MV_FAIL otherwmise.
*
*******************************************************************************/
static MV_STATUS twsiDataTransmit(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize)
{
400070a8:	b580      	push	{r7, lr}
400070aa:	b088      	sub	sp, #32
400070ac:	af00      	add	r7, sp, #0
400070ae:	4603      	mov	r3, r0
400070b0:	60b9      	str	r1, [r7, #8]
400070b2:	607a      	str	r2, [r7, #4]
400070b4:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:668
	MV_U32 timeout, temp, blockSizeWr = blockSize;
400070b6:	687b      	ldr	r3, [r7, #4]
400070b8:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:670

	if (NULL == pBlock)
400070ba:	68bb      	ldr	r3, [r7, #8]
400070bc:	2b00      	cmp	r3, #0
400070be:	d102      	bne.n	400070c6 <twsiDataTransmit+0x1e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:671
		return MV_BAD_PARAM;
400070c0:	f04f 0304 	mov.w	r3, #4
400070c4:	e071      	b.n	400071aa <twsiDataTransmit+0x102>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:674

	/* wait for Int to be Set */
	timeout = 0;
400070c6:	f04f 0300 	mov.w	r3, #0
400070ca:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:675
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
400070cc:	bf00      	nop
400070ce:	7bfb      	ldrb	r3, [r7, #15]
400070d0:	4618      	mov	r0, r3
400070d2:	f7ff fce1 	bl	40006a98 <twsiMainIntGet>
400070d6:	4603      	mov	r3, r0
400070d8:	2b00      	cmp	r3, #0
400070da:	d10d      	bne.n	400070f8 <twsiDataTransmit+0x50>
400070dc:	69fa      	ldr	r2, [r7, #28]
400070de:	f240 43ff 	movw	r3, #1279	; 0x4ff
400070e2:	429a      	cmp	r2, r3
400070e4:	bf8c      	ite	hi
400070e6:	2300      	movhi	r3, #0
400070e8:	2301      	movls	r3, #1
400070ea:	b2db      	uxtb	r3, r3
400070ec:	69fa      	ldr	r2, [r7, #28]
400070ee:	f102 0201 	add.w	r2, r2, #1
400070f2:	61fa      	str	r2, [r7, #28]
400070f4:	2b00      	cmp	r3, #0
400070f6:	d1ea      	bne.n	400070ce <twsiDataTransmit+0x26>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:680
		;

	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
400070f8:	69f8      	ldr	r0, [r7, #28]
400070fa:	4b2f      	ldr	r3, [pc, #188]	; (400071b8 <twsiDataTransmit+0x110>)
400070fc:	447b      	add	r3, pc
400070fe:	4619      	mov	r1, r3
40007100:	f7ff fbb2 	bl	40006868 <twsiTimeoutChk>
40007104:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:679
	timeout = 0;
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
		;

	/* check for timeout */
	if (MV_TRUE ==
40007106:	2b01      	cmp	r3, #1
40007108:	d14a      	bne.n	400071a0 <twsiDataTransmit+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:681
		   twsiTimeoutChk(timeout, "TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
		return MV_TIMEOUT;
4000710a:	f04f 030e 	mov.w	r3, #14
4000710e:	e04c      	b.n	400071aa <twsiDataTransmit+0x102>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:685

	while (blockSizeWr) {
		/* write the data */
		MV_REG_WRITE(TWSI_DATA_REG(chanNum), (MV_U32) *pBlock);
40007110:	7bfb      	ldrb	r3, [r7, #15]
40007112:	f503 7388 	add.w	r3, r3, #272	; 0x110
40007116:	ea4f 2303 	mov.w	r3, r3, lsl #8
4000711a:	f103 0304 	add.w	r3, r3, #4
4000711e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40007122:	68ba      	ldr	r2, [r7, #8]
40007124:	7812      	ldrb	r2, [r2, #0]
40007126:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:686
		pBlock++;
40007128:	68bb      	ldr	r3, [r7, #8]
4000712a:	f103 0301 	add.w	r3, r3, #1
4000712e:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:687
		blockSizeWr--;
40007130:	69bb      	ldr	r3, [r7, #24]
40007132:	f103 33ff 	add.w	r3, r3, #4294967295
40007136:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:689

		twsiIntFlgClr(chanNum);
40007138:	7bfb      	ldrb	r3, [r7, #15]
4000713a:	4618      	mov	r0, r3
4000713c:	f7ff fcd0 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:692

		/* wait for Int to be Set */
		timeout = 0;
40007140:	f04f 0300 	mov.w	r3, #0
40007144:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:693
		while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
40007146:	bf00      	nop
40007148:	7bfb      	ldrb	r3, [r7, #15]
4000714a:	4618      	mov	r0, r3
4000714c:	f7ff fca4 	bl	40006a98 <twsiMainIntGet>
40007150:	4603      	mov	r3, r0
40007152:	2b00      	cmp	r3, #0
40007154:	d10d      	bne.n	40007172 <twsiDataTransmit+0xca>
40007156:	69fa      	ldr	r2, [r7, #28]
40007158:	f240 43ff 	movw	r3, #1279	; 0x4ff
4000715c:	429a      	cmp	r2, r3
4000715e:	bf8c      	ite	hi
40007160:	2300      	movhi	r3, #0
40007162:	2301      	movls	r3, #1
40007164:	b2db      	uxtb	r3, r3
40007166:	69fa      	ldr	r2, [r7, #28]
40007168:	f102 0201 	add.w	r2, r2, #1
4000716c:	61fa      	str	r2, [r7, #28]
4000716e:	2b00      	cmp	r3, #0
40007170:	d1ea      	bne.n	40007148 <twsiDataTransmit+0xa0>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:698
			;

		/* check for timeout */
		if (MV_TRUE ==
				  twsiTimeoutChk(timeout, "TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
40007172:	69f8      	ldr	r0, [r7, #28]
40007174:	4b11      	ldr	r3, [pc, #68]	; (400071bc <twsiDataTransmit+0x114>)
40007176:	447b      	add	r3, pc
40007178:	4619      	mov	r1, r3
4000717a:	f7ff fb75 	bl	40006868 <twsiTimeoutChk>
4000717e:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:697
		timeout = 0;
		while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
			;

		/* check for timeout */
		if (MV_TRUE ==
40007180:	2b01      	cmp	r3, #1
40007182:	d102      	bne.n	4000718a <twsiDataTransmit+0xe2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:699
				  twsiTimeoutChk(timeout, "TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
			return MV_TIMEOUT;
40007184:	f04f 030e 	mov.w	r3, #14
40007188:	e00f      	b.n	400071aa <twsiDataTransmit+0x102>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:702

		/* check the status */
		temp = twsiStsGet(chanNum);
4000718a:	7bfb      	ldrb	r3, [r7, #15]
4000718c:	4618      	mov	r0, r3
4000718e:	f7ff fe05 	bl	40006d9c <twsiStsGet>
40007192:	6178      	str	r0, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:703
		if (temp != TWSI_M_TRAN_DATA_BYTE_ACK_REC) {
40007194:	697b      	ldr	r3, [r7, #20]
40007196:	2b28      	cmp	r3, #40	; 0x28
40007198:	d002      	beq.n	400071a0 <twsiDataTransmit+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:705
			/* mvOsPrintf("TWSI: twsiDataTransmit ERROR - status %x in write trans\n", temp);	*/
			return MV_FAIL;
4000719a:	f04f 0301 	mov.w	r3, #1
4000719e:	e004      	b.n	400071aa <twsiDataTransmit+0x102>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:683
	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiDataTransmit ERROR - Read Data Int TimeOut.\n"))
		return MV_TIMEOUT;

	while (blockSizeWr) {
400071a0:	69bb      	ldr	r3, [r7, #24]
400071a2:	2b00      	cmp	r3, #0
400071a4:	d1b4      	bne.n	40007110 <twsiDataTransmit+0x68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:710
			return MV_FAIL;
		}

	}

	return MV_OK;
400071a6:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:711
}
400071aa:	4618      	mov	r0, r3
400071ac:	f107 0720 	add.w	r7, r7, #32
400071b0:	46bd      	mov	sp, r7
400071b2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400071b6:	4770      	bx	lr
400071b8:	00000ad4 	ldrdeq	r0, [r0], -r4
400071bc:	00000a5a 	andeq	r0, r0, sl, asr sl

400071c0 <twsiDataReceive>:
twsiDataReceive():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:742
*	MV_BAD_PARAM - if pBlock is NULL,
*	MV_FAIL otherwmise.
*
*******************************************************************************/
static MV_STATUS twsiDataReceive(MV_U8 chanNum, MV_U8 *pBlock, MV_U32 blockSize)
{
400071c0:	b580      	push	{r7, lr}
400071c2:	b088      	sub	sp, #32
400071c4:	af00      	add	r7, sp, #0
400071c6:	4603      	mov	r3, r0
400071c8:	60b9      	str	r1, [r7, #8]
400071ca:	607a      	str	r2, [r7, #4]
400071cc:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:743
	MV_U32 timeout, temp, blockSizeRd = blockSize;
400071ce:	687b      	ldr	r3, [r7, #4]
400071d0:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:745

	if (NULL == pBlock)
400071d2:	68bb      	ldr	r3, [r7, #8]
400071d4:	2b00      	cmp	r3, #0
400071d6:	d102      	bne.n	400071de <twsiDataReceive+0x1e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:746
		return MV_BAD_PARAM;
400071d8:	f04f 0304 	mov.w	r3, #4
400071dc:	e0a0      	b.n	40007320 <twsiDataReceive+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:749

	/* wait for Int to be Set */
	timeout = 0;
400071de:	f04f 0300 	mov.w	r3, #0
400071e2:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:750
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
400071e4:	bf00      	nop
400071e6:	7bfb      	ldrb	r3, [r7, #15]
400071e8:	4618      	mov	r0, r3
400071ea:	f7ff fc55 	bl	40006a98 <twsiMainIntGet>
400071ee:	4603      	mov	r3, r0
400071f0:	2b00      	cmp	r3, #0
400071f2:	d10d      	bne.n	40007210 <twsiDataReceive+0x50>
400071f4:	69fa      	ldr	r2, [r7, #28]
400071f6:	f240 43ff 	movw	r3, #1279	; 0x4ff
400071fa:	429a      	cmp	r2, r3
400071fc:	bf8c      	ite	hi
400071fe:	2300      	movhi	r3, #0
40007200:	2301      	movls	r3, #1
40007202:	b2db      	uxtb	r3, r3
40007204:	69fa      	ldr	r2, [r7, #28]
40007206:	f102 0201 	add.w	r2, r2, #1
4000720a:	61fa      	str	r2, [r7, #28]
4000720c:	2b00      	cmp	r3, #0
4000720e:	d1ea      	bne.n	400071e6 <twsiDataReceive+0x26>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:755
		;

	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiDataReceive ERROR - Read Data int Time out .\n"))
40007210:	69f8      	ldr	r0, [r7, #28]
40007212:	4b47      	ldr	r3, [pc, #284]	; (40007330 <twsiDataReceive+0x170>)
40007214:	447b      	add	r3, pc
40007216:	4619      	mov	r1, r3
40007218:	f7ff fb26 	bl	40006868 <twsiTimeoutChk>
4000721c:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:754
	timeout = 0;
	while (!twsiMainIntGet(chanNum) && (timeout++ < TWSI_TIMEOUT_VALUE))
		;

	/* check for timeout */
	if (MV_TRUE ==
4000721e:	2b01      	cmp	r3, #1
40007220:	d179      	bne.n	40007316 <twsiDataReceive+0x156>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:756
		   twsiTimeoutChk(timeout, "TWSI: twsiDataReceive ERROR - Read Data int Time out .\n"))
		return MV_TIMEOUT;
40007222:	f04f 030e 	mov.w	r3, #14
40007226:	e07b      	b.n	40007320 <twsiDataReceive+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:759

	while (blockSizeRd) {
		if (blockSizeRd == 1) {
40007228:	69bb      	ldr	r3, [r7, #24]
4000722a:	2b01      	cmp	r3, #1
4000722c:	d11b      	bne.n	40007266 <twsiDataReceive+0xa6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:761
			/* clear ack and Int flag */
			temp = MV_REG_READ(TWSI_CONTROL_REG(chanNum));
4000722e:	7bfb      	ldrb	r3, [r7, #15]
40007230:	f503 7388 	add.w	r3, r3, #272	; 0x110
40007234:	ea4f 2303 	mov.w	r3, r3, lsl #8
40007238:	f103 0308 	add.w	r3, r3, #8
4000723c:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40007240:	4618      	mov	r0, r3
40007242:	f7ff fb03 	bl	4000684c <MV_MEMIO_LE32_READ>
40007246:	6178      	str	r0, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:762
			temp &= ~(TWSI_CONTROL_ACK);
40007248:	697b      	ldr	r3, [r7, #20]
4000724a:	f023 0304 	bic.w	r3, r3, #4
4000724e:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:763
			MV_REG_WRITE(TWSI_CONTROL_REG(chanNum), temp);
40007250:	7bfb      	ldrb	r3, [r7, #15]
40007252:	f503 7388 	add.w	r3, r3, #272	; 0x110
40007256:	ea4f 2303 	mov.w	r3, r3, lsl #8
4000725a:	f103 0308 	add.w	r3, r3, #8
4000725e:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
40007262:	697a      	ldr	r2, [r7, #20]
40007264:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:765
		}
		twsiIntFlgClr(chanNum);
40007266:	7bfb      	ldrb	r3, [r7, #15]
40007268:	4618      	mov	r0, r3
4000726a:	f7ff fc39 	bl	40006ae0 <twsiIntFlgClr>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:767
		/* wait for Int to be Set */
		timeout = 0;
4000726e:	f04f 0300 	mov.w	r3, #0
40007272:	61fb      	str	r3, [r7, #28]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:768
		while ((!twsiMainIntGet(chanNum)) && (timeout++ < TWSI_TIMEOUT_VALUE))
40007274:	bf00      	nop
40007276:	7bfb      	ldrb	r3, [r7, #15]
40007278:	4618      	mov	r0, r3
4000727a:	f7ff fc0d 	bl	40006a98 <twsiMainIntGet>
4000727e:	4603      	mov	r3, r0
40007280:	2b00      	cmp	r3, #0
40007282:	d10d      	bne.n	400072a0 <twsiDataReceive+0xe0>
40007284:	69fa      	ldr	r2, [r7, #28]
40007286:	f240 43ff 	movw	r3, #1279	; 0x4ff
4000728a:	429a      	cmp	r2, r3
4000728c:	bf8c      	ite	hi
4000728e:	2300      	movhi	r3, #0
40007290:	2301      	movls	r3, #1
40007292:	b2db      	uxtb	r3, r3
40007294:	69fa      	ldr	r2, [r7, #28]
40007296:	f102 0201 	add.w	r2, r2, #1
4000729a:	61fa      	str	r2, [r7, #28]
4000729c:	2b00      	cmp	r3, #0
4000729e:	d1ea      	bne.n	40007276 <twsiDataReceive+0xb6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:773
			;

		/* check for timeout */
		if (MV_TRUE ==
				  twsiTimeoutChk(timeout, "TWSI: twsiDataReceive ERROR - Read Data Int Time out .\n"))
400072a0:	69f8      	ldr	r0, [r7, #28]
400072a2:	4b24      	ldr	r3, [pc, #144]	; (40007334 <twsiDataReceive+0x174>)
400072a4:	447b      	add	r3, pc
400072a6:	4619      	mov	r1, r3
400072a8:	f7ff fade 	bl	40006868 <twsiTimeoutChk>
400072ac:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:772
		timeout = 0;
		while ((!twsiMainIntGet(chanNum)) && (timeout++ < TWSI_TIMEOUT_VALUE))
			;

		/* check for timeout */
		if (MV_TRUE ==
400072ae:	2b01      	cmp	r3, #1
400072b0:	d102      	bne.n	400072b8 <twsiDataReceive+0xf8>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:774
				  twsiTimeoutChk(timeout, "TWSI: twsiDataReceive ERROR - Read Data Int Time out .\n"))
			return MV_TIMEOUT;
400072b2:	f04f 030e 	mov.w	r3, #14
400072b6:	e033      	b.n	40007320 <twsiDataReceive+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:777

		/* check the status */
		temp = twsiStsGet(chanNum);
400072b8:	7bfb      	ldrb	r3, [r7, #15]
400072ba:	4618      	mov	r0, r3
400072bc:	f7ff fd6e 	bl	40006d9c <twsiStsGet>
400072c0:	6178      	str	r0, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:778
		if ((temp != TWSI_M_REC_RD_DATA_ACK_TRA) && (blockSizeRd != 1)) {
400072c2:	697b      	ldr	r3, [r7, #20]
400072c4:	2b50      	cmp	r3, #80	; 0x50
400072c6:	d005      	beq.n	400072d4 <twsiDataReceive+0x114>
400072c8:	69bb      	ldr	r3, [r7, #24]
400072ca:	2b01      	cmp	r3, #1
400072cc:	d002      	beq.n	400072d4 <twsiDataReceive+0x114>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:780
			/* mvOsPrintf("TWSI: twsiDataReceive ERROR - status %x in read trans \n", temp);	*/
			return MV_FAIL;
400072ce:	f04f 0301 	mov.w	r3, #1
400072d2:	e025      	b.n	40007320 <twsiDataReceive+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:781
		} else if ((temp != TWSI_M_REC_RD_DATA_ACK_NOT_TRA) && (blockSizeRd == 1)) {
400072d4:	697b      	ldr	r3, [r7, #20]
400072d6:	2b58      	cmp	r3, #88	; 0x58
400072d8:	d005      	beq.n	400072e6 <twsiDataReceive+0x126>
400072da:	69bb      	ldr	r3, [r7, #24]
400072dc:	2b01      	cmp	r3, #1
400072de:	d102      	bne.n	400072e6 <twsiDataReceive+0x126>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:783
			/* mvOsPrintf("TWSI: twsiDataReceive ERROR - status %x in Rd Terminate\n", temp);	*/
			return MV_FAIL;
400072e0:	f04f 0301 	mov.w	r3, #1
400072e4:	e01c      	b.n	40007320 <twsiDataReceive+0x160>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:787
		}

		/* read the data */
		*pBlock = (MV_U8) MV_REG_READ(TWSI_DATA_REG(chanNum));
400072e6:	7bfb      	ldrb	r3, [r7, #15]
400072e8:	f503 7388 	add.w	r3, r3, #272	; 0x110
400072ec:	ea4f 2303 	mov.w	r3, r3, lsl #8
400072f0:	f103 0304 	add.w	r3, r3, #4
400072f4:	f043 4350 	orr.w	r3, r3, #3489660928	; 0xd0000000
400072f8:	4618      	mov	r0, r3
400072fa:	f7ff faa7 	bl	4000684c <MV_MEMIO_LE32_READ>
400072fe:	4603      	mov	r3, r0
40007300:	b2da      	uxtb	r2, r3
40007302:	68bb      	ldr	r3, [r7, #8]
40007304:	701a      	strb	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:788
		pBlock++;
40007306:	68bb      	ldr	r3, [r7, #8]
40007308:	f103 0301 	add.w	r3, r3, #1
4000730c:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:789
		blockSizeRd--;
4000730e:	69bb      	ldr	r3, [r7, #24]
40007310:	f103 33ff 	add.w	r3, r3, #4294967295
40007314:	61bb      	str	r3, [r7, #24]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:758
	/* check for timeout */
	if (MV_TRUE ==
		   twsiTimeoutChk(timeout, "TWSI: twsiDataReceive ERROR - Read Data int Time out .\n"))
		return MV_TIMEOUT;

	while (blockSizeRd) {
40007316:	69bb      	ldr	r3, [r7, #24]
40007318:	2b00      	cmp	r3, #0
4000731a:	d185      	bne.n	40007228 <twsiDataReceive+0x68>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:792
		*pBlock = (MV_U8) MV_REG_READ(TWSI_DATA_REG(chanNum));
		pBlock++;
		blockSizeRd--;
	}

	return MV_OK;
4000731c:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:793
}
40007320:	4618      	mov	r0, r3
40007322:	f107 0720 	add.w	r7, r7, #32
40007326:	46bd      	mov	sp, r7
40007328:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
4000732c:	4770      	bx	lr
4000732e:	bf00      	nop
40007330:	000009f4 	strdeq	r0, [r0], -r4
40007334:	0000099c 	muleq	r0, ip, r9

40007338 <twsiTargetOffsSet>:
twsiTargetOffsSet():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:821
*       MV_OK - if setting the offset completed succesfully.
*	MV_FAIL otherwmise.
*
*******************************************************************************/
static MV_STATUS twsiTargetOffsSet(MV_U8 chanNum, MV_U32 offset, MV_BOOL moreThen256)
{
40007338:	b580      	push	{r7, lr}
4000733a:	b086      	sub	sp, #24
4000733c:	af00      	add	r7, sp, #0
4000733e:	4603      	mov	r3, r0
40007340:	60b9      	str	r1, [r7, #8]
40007342:	607a      	str	r2, [r7, #4]
40007344:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:825
	MV_U8 offBlock[2];
	MV_U32 offSize;

	if (moreThen256 == MV_TRUE) {
40007346:	687b      	ldr	r3, [r7, #4]
40007348:	2b01      	cmp	r3, #1
4000734a:	d10b      	bne.n	40007364 <twsiTargetOffsSet+0x2c>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:826
		offBlock[0] = (offset >> 8) & 0xff;
4000734c:	68bb      	ldr	r3, [r7, #8]
4000734e:	ea4f 2313 	mov.w	r3, r3, lsr #8
40007352:	b2db      	uxtb	r3, r3
40007354:	743b      	strb	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:827
		offBlock[1] = offset & 0xff;
40007356:	68bb      	ldr	r3, [r7, #8]
40007358:	b2db      	uxtb	r3, r3
4000735a:	747b      	strb	r3, [r7, #17]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:828
		offSize = 2;
4000735c:	f04f 0302 	mov.w	r3, #2
40007360:	617b      	str	r3, [r7, #20]
40007362:	e005      	b.n	40007370 <twsiTargetOffsSet+0x38>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:830
	} else {
		offBlock[0] = offset & 0xff;
40007364:	68bb      	ldr	r3, [r7, #8]
40007366:	b2db      	uxtb	r3, r3
40007368:	743b      	strb	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:831
		offSize = 1;
4000736a:	f04f 0301 	mov.w	r3, #1
4000736e:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:833
	}
	return twsiDataTransmit(chanNum, offBlock, offSize);
40007370:	7bfa      	ldrb	r2, [r7, #15]
40007372:	f107 0310 	add.w	r3, r7, #16
40007376:	4610      	mov	r0, r2
40007378:	4619      	mov	r1, r3
4000737a:	697a      	ldr	r2, [r7, #20]
4000737c:	f7ff fe94 	bl	400070a8 <twsiDataTransmit>
40007380:	4603      	mov	r3, r0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:835

}
40007382:	4618      	mov	r0, r3
40007384:	f107 0718 	add.w	r7, r7, #24
40007388:	46bd      	mov	sp, r7
4000738a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
4000738e:	4770      	bx	lr

40007390 <mvTwsiRead>:
mvTwsiRead():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:866
* 	MV_BAD_PARAM - if pBlock is NULL,
*	MV_FAIL otherwmise.
*
*******************************************************************************/
MV_STATUS mvTwsiRead(MV_U8 chanNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *pBlock, MV_U32 blockSize)
{
40007390:	b580      	push	{r7, lr}
40007392:	b084      	sub	sp, #16
40007394:	af00      	add	r7, sp, #0
40007396:	60b9      	str	r1, [r7, #8]
40007398:	607a      	str	r2, [r7, #4]
4000739a:	603b      	str	r3, [r7, #0]
4000739c:	4603      	mov	r3, r0
4000739e:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:867
	if ((NULL == pBlock) || (NULL == pTwsiSlave))
400073a0:	687b      	ldr	r3, [r7, #4]
400073a2:	2b00      	cmp	r3, #0
400073a4:	d002      	beq.n	400073ac <mvTwsiRead+0x1c>
400073a6:	68bb      	ldr	r3, [r7, #8]
400073a8:	2b00      	cmp	r3, #0
400073aa:	d102      	bne.n	400073b2 <mvTwsiRead+0x22>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:868
		return MV_BAD_PARAM;
400073ac:	f04f 0304 	mov.w	r3, #4
400073b0:	e077      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:869
	if (MV_OK != mvTwsiStartBitSet(chanNum)) {
400073b2:	7bfb      	ldrb	r3, [r7, #15]
400073b4:	4618      	mov	r0, r3
400073b6:	f7ff fa6d 	bl	40006894 <mvTwsiStartBitSet>
400073ba:	4603      	mov	r3, r0
400073bc:	2b00      	cmp	r3, #0
400073be:	d006      	beq.n	400073ce <mvTwsiRead+0x3e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:870
		mvTwsiStopBitSet(chanNum);
400073c0:	7bfb      	ldrb	r3, [r7, #15]
400073c2:	4618      	mov	r0, r3
400073c4:	f7ff faec 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:871
		return MV_FAIL;
400073c8:	f04f 0301 	mov.w	r3, #1
400073cc:	e069      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:876
	}


	/* in case offset exsist (i.e. eeprom ) */
	if (MV_TRUE == pTwsiSlave->validOffset) {
400073ce:	68bb      	ldr	r3, [r7, #8]
400073d0:	689b      	ldr	r3, [r3, #8]
400073d2:	2b01      	cmp	r3, #1
400073d4:	d133      	bne.n	4000743e <mvTwsiRead+0xae>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:877
		if (MV_OK != mvTwsiAddrSet(chanNum, &(pTwsiSlave->slaveAddr), MV_TWSI_WRITE)) {
400073d6:	68bb      	ldr	r3, [r7, #8]
400073d8:	7bfa      	ldrb	r2, [r7, #15]
400073da:	4610      	mov	r0, r2
400073dc:	4619      	mov	r1, r3
400073de:	f04f 0200 	mov.w	r2, #0
400073e2:	f7ff fd11 	bl	40006e08 <mvTwsiAddrSet>
400073e6:	4603      	mov	r3, r0
400073e8:	2b00      	cmp	r3, #0
400073ea:	d006      	beq.n	400073fa <mvTwsiRead+0x6a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:878
			mvTwsiStopBitSet(chanNum);
400073ec:	7bfb      	ldrb	r3, [r7, #15]
400073ee:	4618      	mov	r0, r3
400073f0:	f7ff fad6 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:879
			return MV_FAIL;
400073f4:	f04f 0301 	mov.w	r3, #1
400073f8:	e053      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:881
		}
		if (MV_OK != twsiTargetOffsSet(chanNum, pTwsiSlave->offset, pTwsiSlave->moreThen256)) {
400073fa:	68bb      	ldr	r3, [r7, #8]
400073fc:	68da      	ldr	r2, [r3, #12]
400073fe:	68bb      	ldr	r3, [r7, #8]
40007400:	691b      	ldr	r3, [r3, #16]
40007402:	7bf9      	ldrb	r1, [r7, #15]
40007404:	4608      	mov	r0, r1
40007406:	4611      	mov	r1, r2
40007408:	461a      	mov	r2, r3
4000740a:	f7ff ff95 	bl	40007338 <twsiTargetOffsSet>
4000740e:	4603      	mov	r3, r0
40007410:	2b00      	cmp	r3, #0
40007412:	d006      	beq.n	40007422 <mvTwsiRead+0x92>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:882
			mvTwsiStopBitSet(chanNum);
40007414:	7bfb      	ldrb	r3, [r7, #15]
40007416:	4618      	mov	r0, r3
40007418:	f7ff fac2 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:883
			return MV_FAIL;
4000741c:	f04f 0301 	mov.w	r3, #1
40007420:	e03f      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:885
		}
		if (MV_OK != mvTwsiStartBitSet(chanNum)) {
40007422:	7bfb      	ldrb	r3, [r7, #15]
40007424:	4618      	mov	r0, r3
40007426:	f7ff fa35 	bl	40006894 <mvTwsiStartBitSet>
4000742a:	4603      	mov	r3, r0
4000742c:	2b00      	cmp	r3, #0
4000742e:	d006      	beq.n	4000743e <mvTwsiRead+0xae>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:886
			mvTwsiStopBitSet(chanNum);
40007430:	7bfb      	ldrb	r3, [r7, #15]
40007432:	4618      	mov	r0, r3
40007434:	f7ff fab4 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:887
			return MV_FAIL;
40007438:	f04f 0301 	mov.w	r3, #1
4000743c:	e031      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:890
		}
	}
	if (MV_OK != mvTwsiAddrSet(chanNum, &(pTwsiSlave->slaveAddr), MV_TWSI_READ)) {
4000743e:	68bb      	ldr	r3, [r7, #8]
40007440:	7bfa      	ldrb	r2, [r7, #15]
40007442:	4610      	mov	r0, r2
40007444:	4619      	mov	r1, r3
40007446:	f04f 0201 	mov.w	r2, #1
4000744a:	f7ff fcdd 	bl	40006e08 <mvTwsiAddrSet>
4000744e:	4603      	mov	r3, r0
40007450:	2b00      	cmp	r3, #0
40007452:	d006      	beq.n	40007462 <mvTwsiRead+0xd2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:891
		mvTwsiStopBitSet(chanNum);
40007454:	7bfb      	ldrb	r3, [r7, #15]
40007456:	4618      	mov	r0, r3
40007458:	f7ff faa2 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:892
		return MV_FAIL;
4000745c:	f04f 0301 	mov.w	r3, #1
40007460:	e01f      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:894
	}
	if (MV_OK != twsiDataReceive(chanNum, pBlock, blockSize)) {
40007462:	7bfb      	ldrb	r3, [r7, #15]
40007464:	4618      	mov	r0, r3
40007466:	6879      	ldr	r1, [r7, #4]
40007468:	683a      	ldr	r2, [r7, #0]
4000746a:	f7ff fea9 	bl	400071c0 <twsiDataReceive>
4000746e:	4603      	mov	r3, r0
40007470:	2b00      	cmp	r3, #0
40007472:	d006      	beq.n	40007482 <mvTwsiRead+0xf2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:895
		mvTwsiStopBitSet(chanNum);
40007474:	7bfb      	ldrb	r3, [r7, #15]
40007476:	4618      	mov	r0, r3
40007478:	f7ff fa92 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:896
		return MV_FAIL;
4000747c:	f04f 0301 	mov.w	r3, #1
40007480:	e00f      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:899
	}

	if (MV_OK != mvTwsiStopBitSet(chanNum)) {
40007482:	7bfb      	ldrb	r3, [r7, #15]
40007484:	4618      	mov	r0, r3
40007486:	f7ff fa8b 	bl	400069a0 <mvTwsiStopBitSet>
4000748a:	4603      	mov	r3, r0
4000748c:	2b00      	cmp	r3, #0
4000748e:	d002      	beq.n	40007496 <mvTwsiRead+0x106>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:900
		return MV_FAIL;
40007490:	f04f 0301 	mov.w	r3, #1
40007494:	e005      	b.n	400074a2 <mvTwsiRead+0x112>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:903
	}

	twsiAckBitSet(chanNum);
40007496:	7bfb      	ldrb	r3, [r7, #15]
40007498:	4618      	mov	r0, r3
4000749a:	f7ff fb4f 	bl	40006b3c <twsiAckBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:906


	return MV_OK;
4000749e:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:907
}
400074a2:	4618      	mov	r0, r3
400074a4:	f107 0710 	add.w	r7, r7, #16
400074a8:	46bd      	mov	sp, r7
400074aa:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
400074ae:	4770      	bx	lr

400074b0 <mvTwsiWrite>:
mvTwsiWrite():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:939
*
* NOTE: Part of the EEPROM, required that the offset will be aligned to the
*	max write burst supported.
*******************************************************************************/
MV_STATUS mvTwsiWrite(MV_U8 chanNum, MV_TWSI_SLAVE *pTwsiSlave, MV_U8 *pBlock, MV_U32 blockSize)
{
400074b0:	b580      	push	{r7, lr}
400074b2:	b084      	sub	sp, #16
400074b4:	af00      	add	r7, sp, #0
400074b6:	60b9      	str	r1, [r7, #8]
400074b8:	607a      	str	r2, [r7, #4]
400074ba:	603b      	str	r3, [r7, #0]
400074bc:	4603      	mov	r3, r0
400074be:	73fb      	strb	r3, [r7, #15]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:940
	if ((NULL == pBlock) || (NULL == pTwsiSlave))
400074c0:	687b      	ldr	r3, [r7, #4]
400074c2:	2b00      	cmp	r3, #0
400074c4:	d002      	beq.n	400074cc <mvTwsiWrite+0x1c>
400074c6:	68bb      	ldr	r3, [r7, #8]
400074c8:	2b00      	cmp	r3, #0
400074ca:	d102      	bne.n	400074d2 <mvTwsiWrite+0x22>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:941
		return MV_BAD_PARAM;
400074cc:	f04f 0304 	mov.w	r3, #4
400074d0:	e053      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:943

	if (MV_OK != mvTwsiStartBitSet(chanNum)) {
400074d2:	7bfb      	ldrb	r3, [r7, #15]
400074d4:	4618      	mov	r0, r3
400074d6:	f7ff f9dd 	bl	40006894 <mvTwsiStartBitSet>
400074da:	4603      	mov	r3, r0
400074dc:	2b00      	cmp	r3, #0
400074de:	d006      	beq.n	400074ee <mvTwsiWrite+0x3e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:944
		mvTwsiStopBitSet(chanNum);
400074e0:	7bfb      	ldrb	r3, [r7, #15]
400074e2:	4618      	mov	r0, r3
400074e4:	f7ff fa5c 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:945
		return MV_FAIL;
400074e8:	f04f 0301 	mov.w	r3, #1
400074ec:	e045      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:948
	}

	if (MV_OK != mvTwsiAddrSet(chanNum, &(pTwsiSlave->slaveAddr), MV_TWSI_WRITE)) {
400074ee:	68bb      	ldr	r3, [r7, #8]
400074f0:	7bfa      	ldrb	r2, [r7, #15]
400074f2:	4610      	mov	r0, r2
400074f4:	4619      	mov	r1, r3
400074f6:	f04f 0200 	mov.w	r2, #0
400074fa:	f7ff fc85 	bl	40006e08 <mvTwsiAddrSet>
400074fe:	4603      	mov	r3, r0
40007500:	2b00      	cmp	r3, #0
40007502:	d006      	beq.n	40007512 <mvTwsiWrite+0x62>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:949
		mvTwsiStopBitSet(chanNum);
40007504:	7bfb      	ldrb	r3, [r7, #15]
40007506:	4618      	mov	r0, r3
40007508:	f7ff fa4a 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:950
		return MV_FAIL;
4000750c:	f04f 0301 	mov.w	r3, #1
40007510:	e033      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:954
	}

	/* in case offset exsist (i.e. eeprom ) */
	if (MV_TRUE == pTwsiSlave->validOffset) {
40007512:	68bb      	ldr	r3, [r7, #8]
40007514:	689b      	ldr	r3, [r3, #8]
40007516:	2b01      	cmp	r3, #1
40007518:	d113      	bne.n	40007542 <mvTwsiWrite+0x92>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:955
		if (MV_OK != twsiTargetOffsSet(chanNum, pTwsiSlave->offset, pTwsiSlave->moreThen256)) {
4000751a:	68bb      	ldr	r3, [r7, #8]
4000751c:	68da      	ldr	r2, [r3, #12]
4000751e:	68bb      	ldr	r3, [r7, #8]
40007520:	691b      	ldr	r3, [r3, #16]
40007522:	7bf9      	ldrb	r1, [r7, #15]
40007524:	4608      	mov	r0, r1
40007526:	4611      	mov	r1, r2
40007528:	461a      	mov	r2, r3
4000752a:	f7ff ff05 	bl	40007338 <twsiTargetOffsSet>
4000752e:	4603      	mov	r3, r0
40007530:	2b00      	cmp	r3, #0
40007532:	d006      	beq.n	40007542 <mvTwsiWrite+0x92>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:956
			mvTwsiStopBitSet(chanNum);
40007534:	7bfb      	ldrb	r3, [r7, #15]
40007536:	4618      	mov	r0, r3
40007538:	f7ff fa32 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:957
			return MV_FAIL;
4000753c:	f04f 0301 	mov.w	r3, #1
40007540:	e01b      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:960
		}
	}
	if (MV_OK != twsiDataTransmit(chanNum, pBlock, blockSize)) {
40007542:	7bfb      	ldrb	r3, [r7, #15]
40007544:	4618      	mov	r0, r3
40007546:	6879      	ldr	r1, [r7, #4]
40007548:	683a      	ldr	r2, [r7, #0]
4000754a:	f7ff fdad 	bl	400070a8 <twsiDataTransmit>
4000754e:	4603      	mov	r3, r0
40007550:	2b00      	cmp	r3, #0
40007552:	d006      	beq.n	40007562 <mvTwsiWrite+0xb2>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:961
		mvTwsiStopBitSet(chanNum);
40007554:	7bfb      	ldrb	r3, [r7, #15]
40007556:	4618      	mov	r0, r3
40007558:	f7ff fa22 	bl	400069a0 <mvTwsiStopBitSet>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:962
		return MV_FAIL;
4000755c:	f04f 0301 	mov.w	r3, #1
40007560:	e00b      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:964
	}
	if (MV_OK != mvTwsiStopBitSet(chanNum)) {
40007562:	7bfb      	ldrb	r3, [r7, #15]
40007564:	4618      	mov	r0, r3
40007566:	f7ff fa1b 	bl	400069a0 <mvTwsiStopBitSet>
4000756a:	4603      	mov	r3, r0
4000756c:	2b00      	cmp	r3, #0
4000756e:	d002      	beq.n	40007576 <mvTwsiWrite+0xc6>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:965
		return MV_FAIL;
40007570:	f04f 0301 	mov.w	r3, #1
40007574:	e001      	b.n	4000757a <mvTwsiWrite+0xca>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:968
	}

	return MV_OK;
40007576:	f04f 0300 	mov.w	r3, #0
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:969
}
4000757a:	4618      	mov	r0, r3
4000757c:	f107 0710 	add.w	r7, r7, #16
40007580:	46bd      	mov	sp, r7
40007582:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
40007586:	4770      	bx	lr

40007588 <mvTwsiDelay>:
mvTwsiDelay():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:976

/*
 * Delay in 1 us
 */
MV_VOID mvTwsiDelay(MV_U32 uiDelay)
{
40007588:	b580      	push	{r7, lr}
4000758a:	b086      	sub	sp, #24
4000758c:	af00      	add	r7, sp, #0
4000758e:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:980
	MV_U32 uiReg,uiTclk,uiCycles;

	/* Read Sample at reset to find TCLK frequency - 0x18230 [28] */
	uiReg = (MV_REG_READ(REG_SAMPLE_RESET_LOW_ADDR) & (1 << REG_SAMPLE_RESET_TCLK_OFFS));
40007590:	f248 2030 	movw	r0, #33328	; 0x8230
40007594:	f2cd 0001 	movt	r0, #53249	; 0xd001
40007598:	f7ff f958 	bl	4000684c <MV_MEMIO_LE32_READ>
4000759c:	4603      	mov	r3, r0
4000759e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
400075a2:	613b      	str	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:981
	if(uiReg)
400075a4:	693b      	ldr	r3, [r7, #16]
400075a6:	2b00      	cmp	r3, #0
400075a8:	d003      	beq.n	400075b2 <mvTwsiDelay+0x2a>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:982
		uiTclk = 200;
400075aa:	f04f 03c8 	mov.w	r3, #200	; 0xc8
400075ae:	617b      	str	r3, [r7, #20]
400075b0:	e002      	b.n	400075b8 <mvTwsiDelay+0x30>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:984
	else
		uiTclk = 250;
400075b2:	f04f 03fa 	mov.w	r3, #250	; 0xfa
400075b6:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:987

	/* reset Timer configurations */
	MV_REG_WRITE(REG_TIMERS_CTRL_ADDR, 0);
400075b8:	f44f 7340 	mov.w	r3, #768	; 0x300
400075bc:	f2cd 0302 	movt	r3, #53250	; 0xd002
400075c0:	f04f 0200 	mov.w	r2, #0
400075c4:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:989
	/* From TCLK calculate the uiCycles needed for the requested us uiDelay */
	uiCycles = uiTclk * uiDelay * 1000;
400075c6:	697b      	ldr	r3, [r7, #20]
400075c8:	687a      	ldr	r2, [r7, #4]
400075ca:	fb02 f303 	mul.w	r3, r2, r3
400075ce:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
400075d2:	fb02 f303 	mul.w	r3, r2, r3
400075d6:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:991
	/* Set the Timer value */
	MV_REG_WRITE(REG_TIMER0_VALUE_ADDR, uiCycles);
400075d8:	f44f 7345 	mov.w	r3, #788	; 0x314
400075dc:	f2cd 0302 	movt	r3, #53250	; 0xd002
400075e0:	68fa      	ldr	r2, [r7, #12]
400075e2:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:993
	/* Enable the Timer */
	MV_REG_BIT_SET(REG_TIMERS_CTRL_ADDR, REG_TIMER0_ENABLE_MASK);
400075e4:	f44f 7340 	mov.w	r3, #768	; 0x300
400075e8:	f2cd 0302 	movt	r3, #53250	; 0xd002
400075ec:	f44f 7240 	mov.w	r2, #768	; 0x300
400075f0:	f2cd 0202 	movt	r2, #53250	; 0xd002
400075f4:	6812      	ldr	r2, [r2, #0]
400075f6:	f042 0201 	orr.w	r2, r2, #1
400075fa:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:995
	/* loop waiting for the timer to expire */
	while (MV_REG_READ(REG_TIMER0_VALUE_ADDR)) {}
400075fc:	bf00      	nop
400075fe:	f44f 7045 	mov.w	r0, #788	; 0x314
40007602:	f2cd 0002 	movt	r0, #53250	; 0xd002
40007606:	f7ff f921 	bl	4000684c <MV_MEMIO_LE32_READ>
4000760a:	4603      	mov	r3, r0
4000760c:	2b00      	cmp	r3, #0
4000760e:	d1f6      	bne.n	400075fe <mvTwsiDelay+0x76>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/mv_twsi.c:997

40007610:	f107 0718 	add.w	r7, r7, #24
40007614:	46bd      	mov	sp, r7
40007616:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
4000761a:	4770      	bx	lr

4000761c <memset>:
memset():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:65
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*******************************************************************************/
void *memset(void *s, int c, int n)
{
4000761c:	b480      	push	{r7}
4000761e:	b087      	sub	sp, #28
40007620:	af00      	add	r7, sp, #0
40007622:	60f8      	str	r0, [r7, #12]
40007624:	60b9      	str	r1, [r7, #8]
40007626:	607a      	str	r2, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:66
    unsigned char* p=s;
40007628:	68fb      	ldr	r3, [r7, #12]
4000762a:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:67
    while(n--)
4000762c:	e007      	b.n	4000763e <memset+0x22>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:68
        *p++ = (unsigned char)c;
4000762e:	68bb      	ldr	r3, [r7, #8]
40007630:	b2da      	uxtb	r2, r3
40007632:	697b      	ldr	r3, [r7, #20]
40007634:	701a      	strb	r2, [r3, #0]
40007636:	697b      	ldr	r3, [r7, #20]
40007638:	f103 0301 	add.w	r3, r3, #1
4000763c:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:67

*******************************************************************************/
void *memset(void *s, int c, int n)
{
    unsigned char* p=s;
    while(n--)
4000763e:	687b      	ldr	r3, [r7, #4]
40007640:	2b00      	cmp	r3, #0
40007642:	bf0c      	ite	eq
40007644:	2300      	moveq	r3, #0
40007646:	2301      	movne	r3, #1
40007648:	b2db      	uxtb	r3, r3
4000764a:	687a      	ldr	r2, [r7, #4]
4000764c:	f102 32ff 	add.w	r2, r2, #4294967295
40007650:	607a      	str	r2, [r7, #4]
40007652:	2b00      	cmp	r3, #0
40007654:	d1eb      	bne.n	4000762e <memset+0x12>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:69
        *p++ = (unsigned char)c;
    return s;
40007656:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:70
}
40007658:	4618      	mov	r0, r3
4000765a:	f107 071c 	add.w	r7, r7, #28
4000765e:	46bd      	mov	sp, r7
40007660:	bc80      	pop	{r7}
40007662:	4770      	bx	lr

40007664 <memcpy>:
memcpy():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:73

void *memcpy(void *dest, const void *src, int n)
{
40007664:	b480      	push	{r7}
40007666:	b087      	sub	sp, #28
40007668:	af00      	add	r7, sp, #0
4000766a:	60f8      	str	r0, [r7, #12]
4000766c:	60b9      	str	r1, [r7, #8]
4000766e:	607a      	str	r2, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:74
    char *dp = dest;
40007670:	68fb      	ldr	r3, [r7, #12]
40007672:	617b      	str	r3, [r7, #20]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:75
    const char *sp = src;
40007674:	68bb      	ldr	r3, [r7, #8]
40007676:	613b      	str	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:76
    while (n--)
40007678:	e00b      	b.n	40007692 <memcpy+0x2e>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:77
        *dp++ = *sp++;
4000767a:	693b      	ldr	r3, [r7, #16]
4000767c:	781a      	ldrb	r2, [r3, #0]
4000767e:	697b      	ldr	r3, [r7, #20]
40007680:	701a      	strb	r2, [r3, #0]
40007682:	697b      	ldr	r3, [r7, #20]
40007684:	f103 0301 	add.w	r3, r3, #1
40007688:	617b      	str	r3, [r7, #20]
4000768a:	693b      	ldr	r3, [r7, #16]
4000768c:	f103 0301 	add.w	r3, r3, #1
40007690:	613b      	str	r3, [r7, #16]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:76

void *memcpy(void *dest, const void *src, int n)
{
    char *dp = dest;
    const char *sp = src;
    while (n--)
40007692:	687b      	ldr	r3, [r7, #4]
40007694:	2b00      	cmp	r3, #0
40007696:	bf0c      	ite	eq
40007698:	2300      	moveq	r3, #0
4000769a:	2301      	movne	r3, #1
4000769c:	b2db      	uxtb	r3, r3
4000769e:	687a      	ldr	r2, [r7, #4]
400076a0:	f102 32ff 	add.w	r2, r2, #4294967295
400076a4:	607a      	str	r2, [r7, #4]
400076a6:	2b00      	cmp	r3, #0
400076a8:	d1e7      	bne.n	4000767a <memcpy+0x16>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:78
        *dp++ = *sp++;
    return dest;
400076aa:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/utils.c:79
}
400076ac:	4618      	mov	r0, r3
400076ae:	f107 071c 	add.w	r7, r7, #28
400076b2:	46bd      	mov	sp, r7
400076b4:	bc80      	pop	{r7}
400076b6:	4770      	bx	lr

400076b8 <MV_MEMIO_LE32_READ>:
MV_MEMIO_LE32_READ():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:387
#define MV_MEMIO_LE32_WRITE(addr, data) \
        MV_MEMIO32_WRITE(addr, MV_32BIT_LE_FAST(data))

/* 32bit read in little endian mode */
static __inline MV_U32 MV_MEMIO_LE32_READ(MV_U32 addr)
{
400076b8:	b480      	push	{r7}
400076ba:	b085      	sub	sp, #20
400076bc:	af00      	add	r7, sp, #0
400076be:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:390
	MV_U32 data;

	data= (MV_U32)MV_MEMIO32_READ(addr);
400076c0:	687b      	ldr	r3, [r7, #4]
400076c2:	681b      	ldr	r3, [r3, #0]
400076c4:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:392

	return (MV_U32)MV_32BIT_LE_FAST(data);
400076c6:	68fb      	ldr	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/./inc/mv_os.h:393
}
400076c8:	4618      	mov	r0, r3
400076ca:	f107 0714 	add.w	r7, r7, #20
400076ce:	46bd      	mov	sp, r7
400076d0:	bc80      	pop	{r7}
400076d2:	4770      	bx	lr

400076d4 <__udelay>:
__udelay():
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:89


#define MV_BOARD_REFCLK_25MHZ	 25000000

void __udelay(unsigned long usec)
{
400076d4:	b580      	push	{r7, lr}
400076d6:	b084      	sub	sp, #16
400076d8:	af00      	add	r7, sp, #0
400076da:	6078      	str	r0, [r7, #4]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:94
    unsigned long delayticks;
	unsigned int cntmrCtrl;

	/* In case udelay is called before timier was initialized */
	delayticks = (usec * (MV_BOARD_REFCLK_25MHZ / 1000000));
400076dc:	687a      	ldr	r2, [r7, #4]
400076de:	4613      	mov	r3, r2
400076e0:	ea4f 0383 	mov.w	r3, r3, lsl #2
400076e4:	189b      	adds	r3, r3, r2
400076e6:	ea4f 0283 	mov.w	r2, r3, lsl #2
400076ea:	189b      	adds	r3, r3, r2
400076ec:	60fb      	str	r3, [r7, #12]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:96
	/* init the counter */
	MV_REG_WRITE(CNTMR_RELOAD_REG(UBOOT_CNTR),delayticks);
400076ee:	f44f 7344 	mov.w	r3, #784	; 0x310
400076f2:	f2cd 0302 	movt	r3, #53250	; 0xd002
400076f6:	68fa      	ldr	r2, [r7, #12]
400076f8:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:97
	MV_REG_WRITE(CNTMR_VAL_REG(UBOOT_CNTR),delayticks);
400076fa:	f44f 7345 	mov.w	r3, #788	; 0x314
400076fe:	f2cd 0302 	movt	r3, #53250	; 0xd002
40007702:	68fa      	ldr	r2, [r7, #12]
40007704:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:101

	/* set control for timer \ cunter and enable */
	/* read control register */
	cntmrCtrl = MV_REG_READ(CNTMR_CTRL_REG(UBOOT_CNTR));
40007706:	f44f 7040 	mov.w	r0, #768	; 0x300
4000770a:	f2cd 0002 	movt	r0, #53250	; 0xd002
4000770e:	f7ff ffd3 	bl	400076b8 <MV_MEMIO_LE32_READ>
40007712:	60b8      	str	r0, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:102
	cntmrCtrl &= ~CTCR_ARM_TIMER_AUTO_EN(UBOOT_CNTR);
40007714:	68bb      	ldr	r3, [r7, #8]
40007716:	f023 0302 	bic.w	r3, r3, #2
4000771a:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:103
	cntmrCtrl |= CTCR_ARM_TIMER_EN(UBOOT_CNTR);
4000771c:	68bb      	ldr	r3, [r7, #8]
4000771e:	f043 0301 	orr.w	r3, r3, #1
40007722:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:104
	cntmrCtrl |= CTCR_ARM_TIMER_25MhzFRQ_EN(UBOOT_CNTR);
40007724:	68bb      	ldr	r3, [r7, #8]
40007726:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
4000772a:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:105
	MV_REG_WRITE(CNTMR_CTRL_REG(UBOOT_CNTR),cntmrCtrl);
4000772c:	f44f 7340 	mov.w	r3, #768	; 0x300
40007730:	f2cd 0302 	movt	r3, #53250	; 0xd002
40007734:	68ba      	ldr	r2, [r7, #8]
40007736:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:107

	while(MV_REG_READ(CNTMR_VAL_REG(UBOOT_CNTR)));
40007738:	bf00      	nop
4000773a:	f44f 7045 	mov.w	r0, #788	; 0x314
4000773e:	f2cd 0002 	movt	r0, #53250	; 0xd002
40007742:	f7ff ffb9 	bl	400076b8 <MV_MEMIO_LE32_READ>
40007746:	4603      	mov	r3, r0
40007748:	2b00      	cmp	r3, #0
4000774a:	d1f6      	bne.n	4000773a <__udelay+0x66>
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:110

	/* disable times*/
	cntmrCtrl &= ~CTCR_ARM_TIMER_EN(UBOOT_CNTR);
4000774c:	68bb      	ldr	r3, [r7, #8]
4000774e:	f023 0301 	bic.w	r3, r3, #1
40007752:	60bb      	str	r3, [r7, #8]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:111
	MV_REG_WRITE(CNTMR_CTRL_REG(UBOOT_CNTR),cntmrCtrl);
40007754:	f44f 7340 	mov.w	r3, #768	; 0x300
40007758:	f2cd 0302 	movt	r3, #53250	; 0xd002
4000775c:	68ba      	ldr	r2, [r7, #8]
4000775e:	601a      	str	r2, [r3, #0]
/home/omrii/projects/uboot/syssw1/u-boot/tools/bin_hdr_armada_axp/src_util/time.c:112
}
40007760:	f107 0710 	add.w	r7, r7, #16
40007764:	46bd      	mov	sp, r7
40007766:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
4000776a:	4770      	bx	lr

4000776c <__aeabi_uidiv>:
__aeabi_uidiv():
4000776c:	e2512001 	subs	r2, r1, #1
40007770:	012fff1e 	bxeq	lr
40007774:	3a000074 	bcc	4000794c <__aeabi_uidiv+0x1e0>
40007778:	e1500001 	cmp	r0, r1
4000777c:	9a00006b 	bls	40007930 <__aeabi_uidiv+0x1c4>
40007780:	e1110002 	tst	r1, r2
40007784:	0a00006c 	beq	4000793c <__aeabi_uidiv+0x1d0>
40007788:	e16f3f10 	clz	r3, r0
4000778c:	e16f2f11 	clz	r2, r1
40007790:	e0423003 	sub	r3, r2, r3
40007794:	e273301f 	rsbs	r3, r3, #31
40007798:	10833083 	addne	r3, r3, r3, lsl #1
4000779c:	e3a02000 	mov	r2, #0
400077a0:	108ff103 	addne	pc, pc, r3, lsl #2
400077a4:	e1a00000 	nop			; (mov r0, r0)
400077a8:	e1500f81 	cmp	r0, r1, lsl #31
400077ac:	e0a22002 	adc	r2, r2, r2
400077b0:	20400f81 	subcs	r0, r0, r1, lsl #31
400077b4:	e1500f01 	cmp	r0, r1, lsl #30
400077b8:	e0a22002 	adc	r2, r2, r2
400077bc:	20400f01 	subcs	r0, r0, r1, lsl #30
400077c0:	e1500e81 	cmp	r0, r1, lsl #29
400077c4:	e0a22002 	adc	r2, r2, r2
400077c8:	20400e81 	subcs	r0, r0, r1, lsl #29
400077cc:	e1500e01 	cmp	r0, r1, lsl #28
400077d0:	e0a22002 	adc	r2, r2, r2
400077d4:	20400e01 	subcs	r0, r0, r1, lsl #28
400077d8:	e1500d81 	cmp	r0, r1, lsl #27
400077dc:	e0a22002 	adc	r2, r2, r2
400077e0:	20400d81 	subcs	r0, r0, r1, lsl #27
400077e4:	e1500d01 	cmp	r0, r1, lsl #26
400077e8:	e0a22002 	adc	r2, r2, r2
400077ec:	20400d01 	subcs	r0, r0, r1, lsl #26
400077f0:	e1500c81 	cmp	r0, r1, lsl #25
400077f4:	e0a22002 	adc	r2, r2, r2
400077f8:	20400c81 	subcs	r0, r0, r1, lsl #25
400077fc:	e1500c01 	cmp	r0, r1, lsl #24
40007800:	e0a22002 	adc	r2, r2, r2
40007804:	20400c01 	subcs	r0, r0, r1, lsl #24
40007808:	e1500b81 	cmp	r0, r1, lsl #23
4000780c:	e0a22002 	adc	r2, r2, r2
40007810:	20400b81 	subcs	r0, r0, r1, lsl #23
40007814:	e1500b01 	cmp	r0, r1, lsl #22
40007818:	e0a22002 	adc	r2, r2, r2
4000781c:	20400b01 	subcs	r0, r0, r1, lsl #22
40007820:	e1500a81 	cmp	r0, r1, lsl #21
40007824:	e0a22002 	adc	r2, r2, r2
40007828:	20400a81 	subcs	r0, r0, r1, lsl #21
4000782c:	e1500a01 	cmp	r0, r1, lsl #20
40007830:	e0a22002 	adc	r2, r2, r2
40007834:	20400a01 	subcs	r0, r0, r1, lsl #20
40007838:	e1500981 	cmp	r0, r1, lsl #19
4000783c:	e0a22002 	adc	r2, r2, r2
40007840:	20400981 	subcs	r0, r0, r1, lsl #19
40007844:	e1500901 	cmp	r0, r1, lsl #18
40007848:	e0a22002 	adc	r2, r2, r2
4000784c:	20400901 	subcs	r0, r0, r1, lsl #18
40007850:	e1500881 	cmp	r0, r1, lsl #17
40007854:	e0a22002 	adc	r2, r2, r2
40007858:	20400881 	subcs	r0, r0, r1, lsl #17
4000785c:	e1500801 	cmp	r0, r1, lsl #16
40007860:	e0a22002 	adc	r2, r2, r2
40007864:	20400801 	subcs	r0, r0, r1, lsl #16
40007868:	e1500781 	cmp	r0, r1, lsl #15
4000786c:	e0a22002 	adc	r2, r2, r2
40007870:	20400781 	subcs	r0, r0, r1, lsl #15
40007874:	e1500701 	cmp	r0, r1, lsl #14
40007878:	e0a22002 	adc	r2, r2, r2
4000787c:	20400701 	subcs	r0, r0, r1, lsl #14
40007880:	e1500681 	cmp	r0, r1, lsl #13
40007884:	e0a22002 	adc	r2, r2, r2
40007888:	20400681 	subcs	r0, r0, r1, lsl #13
4000788c:	e1500601 	cmp	r0, r1, lsl #12
40007890:	e0a22002 	adc	r2, r2, r2
40007894:	20400601 	subcs	r0, r0, r1, lsl #12
40007898:	e1500581 	cmp	r0, r1, lsl #11
4000789c:	e0a22002 	adc	r2, r2, r2
400078a0:	20400581 	subcs	r0, r0, r1, lsl #11
400078a4:	e1500501 	cmp	r0, r1, lsl #10
400078a8:	e0a22002 	adc	r2, r2, r2
400078ac:	20400501 	subcs	r0, r0, r1, lsl #10
400078b0:	e1500481 	cmp	r0, r1, lsl #9
400078b4:	e0a22002 	adc	r2, r2, r2
400078b8:	20400481 	subcs	r0, r0, r1, lsl #9
400078bc:	e1500401 	cmp	r0, r1, lsl #8
400078c0:	e0a22002 	adc	r2, r2, r2
400078c4:	20400401 	subcs	r0, r0, r1, lsl #8
400078c8:	e1500381 	cmp	r0, r1, lsl #7
400078cc:	e0a22002 	adc	r2, r2, r2
400078d0:	20400381 	subcs	r0, r0, r1, lsl #7
400078d4:	e1500301 	cmp	r0, r1, lsl #6
400078d8:	e0a22002 	adc	r2, r2, r2
400078dc:	20400301 	subcs	r0, r0, r1, lsl #6
400078e0:	e1500281 	cmp	r0, r1, lsl #5
400078e4:	e0a22002 	adc	r2, r2, r2
400078e8:	20400281 	subcs	r0, r0, r1, lsl #5
400078ec:	e1500201 	cmp	r0, r1, lsl #4
400078f0:	e0a22002 	adc	r2, r2, r2
400078f4:	20400201 	subcs	r0, r0, r1, lsl #4
400078f8:	e1500181 	cmp	r0, r1, lsl #3
400078fc:	e0a22002 	adc	r2, r2, r2
40007900:	20400181 	subcs	r0, r0, r1, lsl #3
40007904:	e1500101 	cmp	r0, r1, lsl #2
40007908:	e0a22002 	adc	r2, r2, r2
4000790c:	20400101 	subcs	r0, r0, r1, lsl #2
40007910:	e1500081 	cmp	r0, r1, lsl #1
40007914:	e0a22002 	adc	r2, r2, r2
40007918:	20400081 	subcs	r0, r0, r1, lsl #1
4000791c:	e1500001 	cmp	r0, r1
40007920:	e0a22002 	adc	r2, r2, r2
40007924:	20400001 	subcs	r0, r0, r1
40007928:	e1a00002 	mov	r0, r2
4000792c:	e12fff1e 	bx	lr
40007930:	03a00001 	moveq	r0, #1
40007934:	13a00000 	movne	r0, #0
40007938:	e12fff1e 	bx	lr
4000793c:	e16f2f11 	clz	r2, r1
40007940:	e262201f 	rsb	r2, r2, #31
40007944:	e1a00230 	lsr	r0, r0, r2
40007948:	e12fff1e 	bx	lr
4000794c:	e3500000 	cmp	r0, #0
40007950:	13e00000 	mvnne	r0, #0
40007954:	ea000007 	b	40007978 <__aeabi_idiv0>

40007958 <__aeabi_uidivmod>:
__aeabi_uidivmod():
40007958:	e3510000 	cmp	r1, #0
4000795c:	0afffffa 	beq	4000794c <__aeabi_uidiv+0x1e0>
40007960:	e92d4003 	push	{r0, r1, lr}
40007964:	ebffff80 	bl	4000776c <__aeabi_uidiv>
40007968:	e8bd4006 	pop	{r1, r2, lr}
4000796c:	e0030092 	mul	r3, r2, r0
40007970:	e0411003 	sub	r1, r1, r3
40007974:	e12fff1e 	bx	lr

40007978 <__aeabi_idiv0>:
__aeabi_idiv0():
40007978:	e12fff1e 	bx	lr

Disassembly of section .rodata:

4000797c <serdesCfg>:
4000797c:	ffff0100 			; <UNDEFINED> instruction: 0xffff0100
40007980:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
40007984:	ff0100ff 			; <UNDEFINED> instruction: 0xff0100ff
40007988:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
4000798c:	010002ff 	strdeq	r0, [r0, -pc]
40007990:	ffff02ff 			; <UNDEFINED> instruction: 0xffff02ff
40007994:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
40007998:	02ffff01 	rscseq	pc, pc, #4
4000799c:	ff03ffff 			; <UNDEFINED> instruction: 0xff03ffff
400079a0:	ff020100 			; <UNDEFINED> instruction: 0xff020100
400079a4:	ffff03ff 			; <UNDEFINED> instruction: 0xffff03ff
400079a8:	02010004 	andeq	r0, r1, #4
400079ac:	ffff03ff 			; <UNDEFINED> instruction: 0xffff03ff
400079b0:	0100ff04 	tsteq	r0, r4, lsl #30
400079b4:	03ff0402 	mvnseq	r0, #33554432	; 0x2000000
400079b8:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
400079bc:	ff02ff01 			; <UNDEFINED> instruction: 0xff02ff01
400079c0:	04ff03ff 	ldrbteq	r0, [pc], #1023	; 400079c8 <serdesCfg+0x4c>
400079c4:	ffff0100 			; <UNDEFINED> instruction: 0xffff0100
400079c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079cc:	ff0100ff 			; <UNDEFINED> instruction: 0xff0100ff
400079d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079d4:	0100ffff 	strdeq	pc, [r0, -pc]
400079d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079dc:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
400079e0:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
400079e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079e8:	ffff0100 			; <UNDEFINED> instruction: 0xffff0100
400079ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079f0:	ff0100ff 			; <UNDEFINED> instruction: 0xff0100ff
400079f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
400079f8:	0100ffff 	strdeq	pc, [r0, -pc]
400079fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
40007a00:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
40007a04:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
40007a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
40007a0c:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
40007a10:	65707320 	ldrbvs	r7, [r0, #-800]!	; 0x320
40007a14:	50206465 	eorpl	r6, r0, r5, ror #8
40007a18:	2d205948 	stccs	9, cr5, [r0, #-288]!	; 0xfffffee0
40007a1c:	72655620 	rsbvc	r5, r5, #33554432	; 0x2000000
40007a20:	362e3120 	strtcc	r3, [lr], -r0, lsr #2
40007a24:	2d20302e 	wstrbcs	wr3, [r0, #-46]!
40007a28:	646e3220 	strbtvs	r3, [lr], #-544	; 0x220
40007a2c:	6f6f6220 	svcvs	0x006f6220
40007a30:	202d2074 	eorcs	r2, sp, r4, ror r0
40007a34:	70696b53 	rsbvc	r6, r9, r3, asr fp
40007a38:	00000a20 	andeq	r0, r0, r0, lsr #20
40007a3c:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
40007a40:	65707320 	ldrbvs	r7, [r0, #-800]!	; 0x320
40007a44:	50206465 	eorpl	r6, r0, r5, ror #8
40007a48:	2d205948 	stccs	9, cr5, [r0, #-288]!	; 0xfffffee0
40007a4c:	72655620 	rsbvc	r5, r5, #33554432	; 0x2000000
40007a50:	362e3120 	strtcc	r3, [lr], -r0, lsr #2
40007a54:	2820302e 	stmdacs	r0!, {r1, r2, r3, r5, ip, sp}
40007a58:	2d4d4f43 	stclcs	15, cr4, [sp, #-268]	; 0xfffffef4
40007a5c:	2d594850 	ldclcs	8, cr4, [r9, #-320]	; 0xfffffec0
40007a60:	29303256 	ldmdbcs	r0!, {r1, r2, r4, r6, r9, ip, sp}
40007a64:	00000a20 	andeq	r0, r0, r0, lsr #20
40007a68:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
40007a6c:	70732074 	rsbsvc	r2, r3, r4, ror r0
40007a70:	20646565 	rsbcs	r6, r4, r5, ror #10
40007a74:	20594850 	subscs	r4, r9, r0, asr r8
40007a78:	6f727245 	svcvs	0x00727245
40007a7c:	31232072 	teqcc	r3, r2, ror r0
40007a80:	0000000a 	andeq	r0, r0, sl
40007a84:	41544153 	cmpmi	r4, r3, asr r1
40007a88:	726f7020 	rsbvc	r7, pc, #32
40007a8c:	72652074 	rsbvc	r2, r5, #116	; 0x74
40007a90:	20726f72 	rsbscs	r6, r2, r2, ror pc
40007a94:	20726f66 	rsbscs	r6, r2, r6, ror #30
40007a98:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
40007a9c:	6c207365 	stcvs	3, cr7, [r0], #-404	; 0xfffffe6c
40007aa0:	3a656e69 	bcc	4196344c <SerdesInfoTbl+0x195b48c>
40007aa4:	00000020 	andeq	r0, r0, r0, lsr #32
40007aa8:	0000000a 	andeq	r0, r0, sl
40007aac:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007ab0:	766d203a 			; <UNDEFINED> instruction: 0x766d203a
40007ab4:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
40007ab8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
40007abc:	74694274 	strbtvc	r4, [r9], #-628	; 0x274
40007ac0:	20746553 	rsbscs	r6, r4, r3, asr r5
40007ac4:	4f525245 	svcmi	0x00525245
40007ac8:	202d2052 	eorcs	r2, sp, r2, asr r0
40007acc:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
40007ad0:	6c432074 	wstrhvs	wr2, [r3], #-116
40007ad4:	20726165 	rsbscs	r6, r2, r5, ror #2
40007ad8:	20746962 	rsbscs	r6, r4, r2, ror #18
40007adc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
40007ae0:	2074754f 	rsbscs	r7, r4, pc, asr #10
40007ae4:	00000a2e 	andeq	r0, r0, lr, lsr #20
40007ae8:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007aec:	766d203a 			; <UNDEFINED> instruction: 0x766d203a
40007af0:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
40007af4:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
40007af8:	53746942 	cmnpl	r4, #1081344	; 0x108000
40007afc:	45207465 	strmi	r7, [r0, #-1125]!	; 0x465
40007b00:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
40007b04:	53202d20 	teqpl	r0, #2048	; 0x800
40007b08:	20706f74 	rsbscs	r6, r0, r4, ror pc
40007b0c:	20746962 	rsbscs	r6, r4, r2, ror #18
40007b10:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
40007b14:	2074754f 	rsbscs	r7, r4, pc, asr #10
40007b18:	00000a2e 	andeq	r0, r0, lr, lsr #20
40007b1c:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007b20:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007b24:	64416973 	strbvs	r6, [r1], #-2419	; 0x973
40007b28:	30317264 	eorscc	r7, r1, r4, ror #4
40007b2c:	53746942 	cmnpl	r4, #1081344	; 0x108000
40007b30:	45207465 	strmi	r7, [r0, #-1125]!	; 0x465
40007b34:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
40007b38:	31202d20 	teqcc	r0, r0, lsr #26
40007b3c:	61207473 	teqvs	r0, r3, ror r4
40007b40:	20726464 	rsbscs	r6, r2, r4, ror #8
40007b44:	42303128 	eorsmi	r3, r0, #10
40007b48:	20297469 	eorcs	r7, r9, r9, ror #8
40007b4c:	20746e49 	rsbscs	r6, r4, r9, asr #28
40007b50:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
40007b54:	2e74754f 	cdpcs	5, 7, cr7, cr4, cr15, {2}
40007b58:	0000000a 	andeq	r0, r0, sl
40007b5c:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007b60:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007b64:	64416973 	strbvs	r6, [r1], #-2419	; 0x973
40007b68:	30317264 	eorscc	r7, r1, r4, ror #4
40007b6c:	53746942 	cmnpl	r4, #1081344	; 0x108000
40007b70:	45207465 	strmi	r7, [r0, #-1125]!	; 0x465
40007b74:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
40007b78:	32202d20 	eorcc	r2, r0, #2048	; 0x800
40007b7c:	2820646e 	stmdacs	r0!, {r1, r2, r3, r5, r6, sl, sp, lr}
40007b80:	42203031 	eormi	r3, r0, #49	; 0x31
40007b84:	20297469 	eorcs	r7, r9, r9, ror #8
40007b88:	20746e49 	rsbscs	r6, r4, r9, asr #28
40007b8c:	4f6d6954 	svcmi	0x006d6954
40007b90:	0a2e7475 	beq	40ba4d6c <SerdesInfoTbl+0xb9cdac>
40007b94:	00000000 	andeq	r0, r0, r0
40007b98:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007b9c:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007ba0:	64416973 	strbvs	r6, [r1], #-2419	; 0x973
40007ba4:	42377264 	eorsmi	r7, r7, #1073741830	; 0x40000006
40007ba8:	65537469 	ldrbvs	r7, [r3, #-1129]	; 0x469
40007bac:	52452074 	subpl	r2, r5, #116	; 0x74
40007bb0:	20524f52 	subscs	r4, r2, r2, asr pc
40007bb4:	6441202d 	strbvs	r2, [r1], #-45	; 0x2d
40007bb8:	28207264 	stmdacs	r0!, {r2, r5, r6, r9, ip, sp, lr}
40007bbc:	69422037 	stmdbvs	r2, {r0, r1, r2, r4, r5, sp}^
40007bc0:	69202974 	stmdbvs	r0!, {r2, r4, r5, r6, r8, fp, sp}
40007bc4:	5420746e 	strtpl	r7, [r0], #-1134	; 0x46e
40007bc8:	4f656d69 	svcmi	0x00656d69
40007bcc:	0a2e7475 	beq	40ba4da8 <SerdesInfoTbl+0xb9cde8>
40007bd0:	00000000 	andeq	r0, r0, r0
40007bd4:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007bd8:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007bdc:	61446973 	hvcvs	18067	; 0x4693
40007be0:	72546174 	subsvc	r6, r4, #29
40007be4:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
40007be8:	45207469 	strmi	r7, [r0, #-1129]!	; 0x469
40007bec:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
40007bf0:	52202d20 	eorpl	r2, r0, #2048	; 0x800
40007bf4:	20646165 	rsbcs	r6, r4, r5, ror #2
40007bf8:	61746144 	cmnvs	r4, r4, asr #2
40007bfc:	746e4920 	strbtvc	r4, [lr], #-2336	; 0x920
40007c00:	6d695420 	stclvs	4, cr5, [r9, #-128]!	; 0xffffff80
40007c04:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xf65
40007c08:	00000a2e 	andeq	r0, r0, lr, lsr #20
40007c0c:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007c10:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007c14:	61446973 	hvcvs	18067	; 0x4693
40007c18:	65526174 	ldrbvs	r6, [r2, #-372]	; 0x174
40007c1c:	76696563 	strbtvc	r6, [r9], -r3, ror #10
40007c20:	52452065 	subpl	r2, r5, #101	; 0x65
40007c24:	20524f52 	subscs	r4, r2, r2, asr pc
40007c28:	6552202d 	ldrbvs	r2, [r2, #-45]	; 0x2d
40007c2c:	44206461 	strtmi	r6, [r0], #-1121	; 0x461
40007c30:	20617461 	rsbcs	r7, r1, r1, ror #8
40007c34:	20746e69 	rsbscs	r6, r4, r9, ror #28
40007c38:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
40007c3c:	74756f20 	ldrbtvc	r6, [r5], #-3872	; 0xf20
40007c40:	000a2e20 	andeq	r2, sl, r0, lsr #28
40007c44:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
40007c48:	7774203a 			; <UNDEFINED> instruction: 0x7774203a
40007c4c:	61446973 	hvcvs	18067	; 0x4693
40007c50:	65526174 	ldrbvs	r6, [r2, #-372]	; 0x174
40007c54:	76696563 	strbtvc	r6, [r9], -r3, ror #10
40007c58:	52452065 	subpl	r2, r5, #101	; 0x65
40007c5c:	20524f52 	subscs	r4, r2, r2, asr pc
40007c60:	6552202d 	ldrbvs	r2, [r2, #-45]	; 0x2d
40007c64:	44206461 	strtmi	r6, [r0], #-1121	; 0x461
40007c68:	20617461 	rsbcs	r7, r1, r1, ror #8
40007c6c:	20746e49 	rsbscs	r6, r4, r9, asr #28
40007c70:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
40007c74:	74756f20 	ldrbtvc	r6, [r5], #-3872	; 0xf20
40007c78:	000a2e20 	andeq	r2, sl, r0, lsr #28

Disassembly of section .data:

40007c7c <PexModule>:
40007c7c:	00000000 	andeq	r0, r0, r0

40007c80 <SwitchModule>:
40007c80:	00000000 	andeq	r0, r0, r0

40007c84 <db88f78XX0BoardSerdesChangeMphy>:
40007c84:	00000001 	andeq	r0, r0, r1
40007c88:	00000000 	andeq	r0, r0, r0
40007c8c:	000f2a21 	andeq	r2, pc, r1, lsr #20
40007c90:	00000000 	andeq	r0, r0, r0
40007c94:	000f2a21 	andeq	r2, pc, r1, lsr #20
40007c98:	00000001 	andeq	r0, r0, r1
40007c9c:	00000000 	andeq	r0, r0, r0
40007ca0:	004f6219 	subeq	r6, pc, r9, lsl r2	; <UNPREDICTABLE>
40007ca4:	00000000 	andeq	r0, r0, r0
40007ca8:	004f6219 	subeq	r6, pc, r9, lsl r2	; <UNPREDICTABLE>
40007cac:	00000002 	andeq	r0, r0, r2
40007cb0:	0000083c 	andeq	r0, r0, ip, lsr r8
40007cb4:	00008a31 	andeq	r8, r0, r1, lsr sl
40007cb8:	0000083c 	andeq	r0, r0, ip, lsr r8
40007cbc:	00008a31 	andeq	r8, r0, r1, lsr sl
40007cc0:	00000002 	andeq	r0, r0, r2
40007cc4:	00000834 	andeq	r0, r0, r4, lsr r8
40007cc8:	0000c928 	andeq	ip, r0, r8, lsr #18
40007ccc:	00000834 	andeq	r0, r0, r4, lsr r8
40007cd0:	0000c928 	andeq	ip, r0, r8, lsr #18
40007cd4:	00000002 	andeq	r0, r0, r2
40007cd8:	00000838 	andeq	r0, r0, r8, lsr r8
40007cdc:	000030f0 	strdeq	r3, [r0], -r0
40007ce0:	00000838 	andeq	r0, r0, r8, lsr r8
40007ce4:	000030f0 	strdeq	r3, [r0], -r0
40007ce8:	00000002 	andeq	r0, r0, r2
40007cec:	00000840 	andeq	r0, r0, r0, asr #16
40007cf0:	000030f5 	strdeq	r3, [r0], -r5
40007cf4:	00000840 	andeq	r0, r0, r0, asr #16
40007cf8:	000030f5 	strdeq	r3, [r0], -r5
40007cfc:	00000003 	andeq	r0, r0, r3
40007d00:	00000e18 	andeq	r0, r0, r8, lsl lr
40007d04:	0000989f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
40007d08:	00000e18 	andeq	r0, r0, r8, lsl lr
40007d0c:	0000989f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
40007d10:	00000003 	andeq	r0, r0, r3
40007d14:	00000e38 	andeq	r0, r0, r8, lsr lr
40007d18:	000010fa 	strdeq	r1, [r0], -sl
40007d1c:	00000e38 	andeq	r0, r0, r8, lsr lr
40007d20:	000010fa 	strdeq	r1, [r0], -sl
40007d24:	00000003 	andeq	r0, r0, r3
40007d28:	00000e34 	andeq	r0, r0, r4, lsr lr
40007d2c:	0000c968 	andeq	ip, r0, r8, ror #18
40007d30:	00000e34 	andeq	r0, r0, r4, lsr lr
40007d34:	0000c66c 	andeq	ip, r0, ip, ror #12
40007d38:	00000007 	andeq	r0, r0, r7
40007d3c:	00072e34 	andeq	r2, r7, r4, lsr lr
40007d40:	0000aa58 	andeq	sl, r0, r8, asr sl
40007d44:	00072e34 	andeq	r2, r7, r4, lsr lr
40007d48:	0000aa58 	andeq	sl, r0, r8, asr sl
40007d4c:	00000007 	andeq	r0, r0, r7
40007d50:	00072e38 	andeq	r2, r7, r8, lsr lr
40007d54:	000010af 	andeq	r1, r0, pc, lsr #1
40007d58:	00072e38 	andeq	r2, r7, r8, lsr lr
40007d5c:	000010af 	andeq	r1, r0, pc, lsr #1
40007d60:	00000007 	andeq	r0, r0, r7
40007d64:	00072e18 	andeq	r2, r7, r8, lsl lr
40007d68:	000098ac 	andeq	r9, r0, ip, lsr #17
40007d6c:	00072e18 	andeq	r2, r7, r8, lsl lr
40007d70:	000098ac 	andeq	r9, r0, ip, lsr #17
	...

Disassembly of section .got:

40007d88 <.got>:
40007d88:	40007fc0 	andmi	r7, r0, r0, asr #31

Disassembly of section .got.plt:

40007d8c <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .data.rel:

40007d98 <db88f78XX0InfoBoardSerdesConfigValue>:
40007d98:	00000000 	andeq	r0, r0, r0
40007d9c:	32221111 	eorcc	r1, r2, #1073741828	; 0x40000004
40007da0:	11111111 	tstne	r1, r1, lsl r1
40007da4:	02020001 	andeq	r0, r2, #1
40007da8:	00000030 	andeq	r0, r0, r0, lsr r0
40007dac:	40007c84 	andmi	r7, r0, r4, lsl #25
40007db0:	00000000 	andeq	r0, r0, r0
40007db4:	31211111 	teqcc	r1, r1, lsl r1
40007db8:	11111111 	tstne	r1, r1, lsl r1
40007dbc:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
40007dc0:	00000030 	andeq	r0, r0, r0, lsr r0
40007dc4:	40007c84 	andmi	r7, r0, r4, lsl #25
40007dc8:	00000000 	andeq	r0, r0, r0
40007dcc:	32220000 	eorcc	r0, r2, #0
	...
40007dd8:	00000030 	andeq	r0, r0, r0, lsr r0
40007ddc:	40007c84 	andmi	r7, r0, r4, lsl #25
40007de0:	00000000 	andeq	r0, r0, r0
40007de4:	31210000 	teqcc	r1, r0
40007de8:	00000000 	andeq	r0, r0, r0
40007dec:	00000100 	andeq	r0, r0, r0, lsl #2
40007df0:	00000030 	andeq	r0, r0, r0, lsr r0
40007df4:	40007c84 	andmi	r7, r0, r4, lsl #25

40007df8 <db88f78XX0rev2InfoBoardSerdesConfigValue>:
40007df8:	00000000 	andeq	r0, r0, r0
40007dfc:	33221111 	teqcc	r2, #1073741828	; 0x40000004
40007e00:	11111111 	tstne	r1, r1, lsl r1
40007e04:	02020001 	andeq	r0, r2, #1
40007e08:	00000030 	andeq	r0, r0, r0, lsr r0
40007e0c:	40007c84 	andmi	r7, r0, r4, lsl #25
40007e10:	00000000 	andeq	r0, r0, r0
40007e14:	33211111 	teqcc	r1, #1073741828	; 0x40000004
40007e18:	11111111 	tstne	r1, r1, lsl r1
40007e1c:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
40007e20:	00000030 	andeq	r0, r0, r0, lsr r0
40007e24:	40007c84 	andmi	r7, r0, r4, lsl #25
40007e28:	00000000 	andeq	r0, r0, r0
40007e2c:	33221111 	teqcc	r2, #1073741828	; 0x40000004
40007e30:	11111111 	tstne	r1, r1, lsl r1
40007e34:	02020002 	andeq	r0, r2, #2
40007e38:	00000030 	andeq	r0, r0, r0, lsr r0
40007e3c:	40007c84 	andmi	r7, r0, r4, lsl #25
40007e40:	00000000 	andeq	r0, r0, r0
40007e44:	33211111 	teqcc	r1, #1073741828	; 0x40000004
40007e48:	11111111 	tstne	r1, r1, lsl r1
40007e4c:	02020102 	andeq	r0, r2, #-2147483648	; 0x80000000
40007e50:	00000030 	andeq	r0, r0, r0, lsr r0
40007e54:	40007c84 	andmi	r7, r0, r4, lsl #25
40007e58:	00000000 	andeq	r0, r0, r0
40007e5c:	11111111 	tstne	r1, r1, lsl r1
40007e60:	11111111 	tstne	r1, r1, lsl r1
40007e64:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
40007e68:	00000030 	andeq	r0, r0, r0, lsr r0
40007e6c:	40007c84 	andmi	r7, r0, r4, lsl #25
40007e70:	00000000 	andeq	r0, r0, r0
40007e74:	11111111 	tstne	r1, r1, lsl r1
40007e78:	11111111 	tstne	r1, r1, lsl r1
40007e7c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
40007e80:	00000030 	andeq	r0, r0, r0, lsr r0
40007e84:	40007c84 	andmi	r7, r0, r4, lsl #25

40007e88 <rd78460nasInfoBoardSerdesConfigValue>:
40007e88:	00000000 	andeq	r0, r0, r0
40007e8c:	00223001 	eoreq	r3, r2, r1
40007e90:	11111111 	tstne	r1, r1, lsl r1
40007e94:	02020001 	andeq	r0, r2, #1
40007e98:	00000030 	andeq	r0, r0, r0, lsr r0
40007e9c:	40007c84 	andmi	r7, r0, r4, lsl #25
40007ea0:	00000000 	andeq	r0, r0, r0
40007ea4:	33320201 	teqcc	r2, #268435456	; 0x10000000
40007ea8:	11111111 	tstne	r1, r1, lsl r1
40007eac:	02020001 	andeq	r0, r2, #1
40007eb0:	000000f4 	strdeq	r0, [r0], -r4
40007eb4:	40007c84 	andmi	r7, r0, r4, lsl #25

40007eb8 <rd78460InfoBoardSerdesConfigValue>:
40007eb8:	00000000 	andeq	r0, r0, r0
40007ebc:	22321111 	eorscs	r1, r2, #1073741828	; 0x40000004
40007ec0:	00000000 	andeq	r0, r0, r0
40007ec4:	00000002 	andeq	r0, r0, r2
40007ec8:	00000010 	andeq	r0, r0, r0, lsl r0
40007ecc:	40007c84 	andmi	r7, r0, r4, lsl #25
40007ed0:	00000000 	andeq	r0, r0, r0
40007ed4:	00321111 	eorseq	r1, r2, r1, lsl r1
40007ed8:	00000000 	andeq	r0, r0, r0
40007edc:	00000002 	andeq	r0, r0, r2
40007ee0:	00000010 	andeq	r0, r0, r0, lsl r0
40007ee4:	40007c84 	andmi	r7, r0, r4, lsl #25

40007ee8 <rd78460ServerRev2InfoBoardSerdesConfigValue>:
40007ee8:	00000000 	andeq	r0, r0, r0
40007eec:	00321111 	eorseq	r1, r2, r1, lsl r1
40007ef0:	00000000 	andeq	r0, r0, r0
40007ef4:	00000002 	andeq	r0, r0, r2
40007ef8:	00000010 	andeq	r0, r0, r0, lsl r0
40007efc:	40007c84 	andmi	r7, r0, r4, lsl #25
40007f00:	00000000 	andeq	r0, r0, r0
40007f04:	00321111 	eorseq	r1, r2, r1, lsl r1
40007f08:	00000000 	andeq	r0, r0, r0
40007f0c:	00000002 	andeq	r0, r0, r2
40007f10:	00000010 	andeq	r0, r0, r0, lsl r0
40007f14:	40007c84 	andmi	r7, r0, r4, lsl #25

40007f18 <db78X60pcacInfoBoardSerdesConfigValue>:
40007f18:	00000001 	andeq	r0, r0, r1
40007f1c:	22321111 	eorscs	r1, r2, #1073741828	; 0x40000004
40007f20:	00000000 	andeq	r0, r0, r0
40007f24:	00000002 	andeq	r0, r0, r2
40007f28:	00000010 	andeq	r0, r0, r0, lsl r0
40007f2c:	40007c84 	andmi	r7, r0, r4, lsl #25

40007f30 <db78X60pcacrev2InfoBoardSerdesConfigValue>:
40007f30:	00000001 	andeq	r0, r0, r1
40007f34:	23321111 	teqcs	r2, #1073741828	; 0x40000004
40007f38:	00000000 	andeq	r0, r0, r0
40007f3c:	00000002 	andeq	r0, r0, r2
40007f40:	00000010 	andeq	r0, r0, r0, lsl r0
40007f44:	40007c84 	andmi	r7, r0, r4, lsl #25

40007f48 <fpga88f78XX0InfoBoardSerdesConfigValue>:
	...
40007f5c:	40007c84 	andmi	r7, r0, r4, lsl #25

40007f60 <db78X60amcInfoBoardSerdesConfigValue>:
40007f60:	00000000 	andeq	r0, r0, r0
40007f64:	23111111 	tstcs	r1, #1073741828	; 0x40000004
40007f68:	11111111 	tstne	r1, r1, lsl r1
40007f6c:	02020102 	andeq	r0, r2, #-2147483648	; 0x80000000
40007f70:	00000030 	andeq	r0, r0, r0, lsr r0
40007f74:	40007c84 	andmi	r7, r0, r4, lsl #25

40007f78 <rd78460customerInfoBoardSerdesConfigValue>:
40007f78:	00000000 	andeq	r0, r0, r0
40007f7c:	00223001 	eoreq	r3, r2, r1
40007f80:	11111111 	tstne	r1, r1, lsl r1
40007f84:	02020001 	andeq	r0, r2, #1
40007f88:	00000030 	andeq	r0, r0, r0, lsr r0
40007f8c:	40007c84 	andmi	r7, r0, r4, lsl #25
40007f90:	00000000 	andeq	r0, r0, r0
40007f94:	33320201 	teqcc	r2, #268435456	; 0x10000000
40007f98:	11111111 	tstne	r1, r1, lsl r1
40007f9c:	02020001 	andeq	r0, r2, #1
40007fa0:	00000030 	andeq	r0, r0, r0, lsr r0
40007fa4:	40007c84 	andmi	r7, r0, r4, lsl #25

40007fa8 <rd78460AXP_GP_InfoBoardSerdesConfigValue>:
40007fa8:	00000000 	andeq	r0, r0, r0
40007fac:	00223001 	eoreq	r3, r2, r1
40007fb0:	11111111 	tstne	r1, r1, lsl r1
40007fb4:	02020001 	andeq	r0, r2, #1
40007fb8:	00000030 	andeq	r0, r0, r0, lsr r0
40007fbc:	40007c84 	andmi	r7, r0, r4, lsl #25

40007fc0 <SerdesInfoTbl>:
40007fc0:	40007d98 	mulmi	r0, r8, sp
40007fc4:	40007eb8 			; <UNDEFINED> instruction: 0x40007eb8
40007fc8:	40007f18 	andmi	r7, r0, r8, lsl pc
40007fcc:	40007f48 	andmi	r7, r0, r8, asr #30
40007fd0:	40007df8 	strdmi	r7, [r0], -r8
40007fd4:	40007e88 	andmi	r7, r0, r8, lsl #29
40007fd8:	40007f60 	andmi	r7, r0, r0, ror #30
40007fdc:	40007f30 	andmi	r7, r0, r0, lsr pc
40007fe0:	40007ee8 	andmi	r7, r0, r8, ror #29
40007fe4:	40007fa8 	andmi	r7, r0, r8, lsr #31
40007fe8:	40007f78 	andmi	r7, r0, r8, ror pc

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	06003705 	streq	r3, [r0], -r5, lsl #14
  14:	0901080a 	stmdbeq	r1, {r1, r3, fp}
  18:	12020a02 	andne	r0, r2, #8192	; 0x2000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0x404
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	22011a01 	andcs	r1, r1, #4096	; 0x1000
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <MV_CPU_LE+0x10d0d23>
   4:	694c2820 	stmdbvs	ip, {r5, fp, sp}^
   8:	6f72616e 	svcvs	0x0072616e
   c:	43434720 	movtmi	r4, #14112	; 0x3720
  10:	61726220 	cmnvs	r2, r0, lsr #4
  14:	2d68636e 	stclcs	3, cr6, [r8, #-440]!	; 0xfffffe48
  18:	2e362e34 	mrccs	14, 1, r2, cr6, cr4, {1}
  1c:	4d202e32 	stcmi	14, cr2, [r0, #-200]!	; 0xffffff38
  20:	65767261 	ldrbvs	r7, [r6, #-609]!	; 0x261
  24:	47206c6c 	strmi	r6, [r0, -ip, ror #24]!
  28:	32204343 	eorcc	r4, r0, #201326593	; 0xc000001
  2c:	30323130 	eorscc	r3, r2, r0, lsr r1
  30:	38382d31 	ldmdacc	r8!, {r0, r4, r5, r8, sl, fp, sp}
  34:	31302e33 	teqcc	r0, r3, lsr lr
  38:	39343963 	ldmdbcc	r4!, {r0, r1, r5, r6, r8, fp, ip, sp}
  3c:	20296564 	eorcs	r6, r9, r4, ror #10
  40:	2e362e34 	mrccs	14, 1, r2, cr6, cr4, {1}
  44:	Address 0x00000044 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000083e 	andeq	r0, r0, lr, lsr r8
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000471 	andeq	r0, r0, r1, ror r4
      10:	00028301 	andeq	r8, r2, r1, lsl #6
      14:	0003fd00 	andeq	pc, r3, r0, lsl #26
      18:	0040ac00 	subeq	sl, r0, r0, lsl #24
      1c:	0065dc40 	rsbeq	sp, r5, r0, asr #24
      20:	00000040 	andeq	r0, r0, r0, asr #32
      24:	01650200 	cmneq	r5, r0, lsl #4
      28:	a7010000 	strge	r0, [r1, -r0]
      2c:	00000030 	andeq	r0, r0, r0, lsr r0
      30:	33080103 	movwcc	r0, #33027	; 0x8103
      34:	02000003 	andeq	r0, r0, #3
      38:	0000047d 	andeq	r0, r0, sp, ror r4
      3c:	0042a801 	subeq	sl, r2, r1, lsl #16
      40:	01030000 	mrseq	r0, (UNDEF: 3)
      44:	00032a08 	andeq	r2, r3, r8, lsl #20
      48:	05040400 	streq	r0, [r4, #-1024]	; 0x400
      4c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      50:	00038f02 	andeq	r8, r3, r2, lsl #30
      54:	5bab0100 	blpl	feac045c <SerdesInfoTbl+0xbeab849c>
      58:	03000000 	movweq	r0, #0
      5c:	03770704 	cmneq	r7, #1048576	; 0x100000
      60:	02030000 	andeq	r0, r3, #0
      64:	00008f05 	andeq	r8, r0, r5, lsl #30
      68:	001d0200 	andseq	r0, sp, r0, lsl #4
      6c:	ae010000 	worge	wr0, wr1, wr0
      70:	00000074 	andeq	r0, r0, r4, ror r0
      74:	e3070203 	movw	r0, #29187	; 0x7203
      78:	03000003 	movweq	r0, #3
      7c:	01f50508 	mvnseq	r0, r8, lsl #10
      80:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      84:	00036d07 	andeq	r6, r3, r7, lsl #26
      88:	05040300 	streq	r0, [r4, #-768]	; 0x300
      8c:	000001fa 	strdeq	r0, [r0], -sl
      90:	72070403 	andvc	r0, r7, #50331648	; 0x3000000
      94:	02000003 	andeq	r0, r0, #3
      98:	00000013 	andeq	r0, r0, r3, lsl r0
      9c:	0049bb01 	subeq	fp, r9, r1, lsl #22
      a0:	7b020000 	blvc	800a8 <MV_CPU_LE+0x800a7>
      a4:	01000005 	tsteq	r0, r5
      a8:	000049bc 			; <UNDEFINED> instruction: 0x000049bc
      ac:	04040300 	streq	r0, [r4], #-768	; 0x300
      b0:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
      b4:	e9040803 	stmdb	r4, {r0, r1, fp}
      b8:	05000004 	streq	r0, [r0, #-4]
      bc:	00470301 	subeq	r0, r7, r1, lsl #6
      c0:	06000001 	streq	r0, [r0], -r1
      c4:	0000054c 	andeq	r0, r0, ip, asr #10
      c8:	050b0600 	streq	r0, [fp, #-1536]	; 0x600
      cc:	06010000 	streq	r0, [r1], -r0
      d0:	000004af 	andeq	r0, r0, pc, lsr #9
      d4:	05830602 	streq	r0, [r3, #1538]	; 0x602
      d8:	06030000 	streq	r0, [r3], -r0
      dc:	00000596 	muleq	r0, r6, r5
      e0:	05a90604 	streq	r0, [r9, #1540]!	; 0x604
      e4:	06050000 	streq	r0, [r5], -r0
      e8:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
      ec:	04940606 	ldreq	r0, [r4], #1542	; 0x606
      f0:	06070000 	streq	r0, [r7], -r0
      f4:	00000215 	andeq	r0, r0, r5, lsl r2
      f8:	05ed0608 	strbeq	r0, [sp, #1544]!	; 0x608
      fc:	00090000 	andeq	r0, r9, r0
     100:	0000ad02 	andeq	sl, r0, r2, lsl #26
     104:	bb520300 	bllt	1480d0c <MV_CPU_LE+0x1480d0b>
     108:	05000000 	streq	r0, [r0]
     10c:	2c550301 	mrrccs	3, 0, r0, r5, cr1
     110:	06000001 	streq	r0, [r0], -r1
     114:	000002e7 	andeq	r0, r0, r7, ror #5
     118:	02ab0600 	adceq	r0, fp, #0
     11c:	06010000 	streq	r0, [r1], -r0
     120:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
     124:	02f80602 	rscseq	r0, r8, #2097152	; 0x200000
     128:	00030000 	andeq	r0, r3, r0
     12c:	00027302 	andeq	r7, r2, r2, lsl #6
     130:	0b5a0300 	bleq	1680d38 <MV_CPU_LE+0x1680d37>
     134:	07000001 	streq	r0, [r0, -r1]
     138:	00000148 	andeq	r0, r0, r8, asr #2
     13c:	505d0301 	subspl	r0, sp, r1, lsl #6
     140:	06000001 	streq	r0, [r0], -r1
     144:	00000099 	muleq	r0, r9, r0
     148:	01850600 	orreq	r0, r5, r0, lsl #12
     14c:	00010000 	andeq	r0, r1, r0
     150:	00029f02 	andeq	r9, r2, r2, lsl #30
     154:	37600300 	strbcc	r0, [r0, -r0, lsl #6]!
     158:	08000001 	stmdaeq	r0, {r0}
     15c:	00000564 	andeq	r0, r0, r4, ror #10
     160:	ae610314 	mcrge	3, 3, r0, cr1, cr4, {0}
     164:	09000001 	stmdbeq	r0, {r0}
     168:	00000102 	andeq	r0, r0, r2, lsl #2
     16c:	01006203 	tsteq	r0, r3, lsl #4
     170:	23020000 	movwcs	r0, #8192	; 0x2000
     174:	02030900 	andeq	r0, r3, #0
     178:	63030000 	movwvs	r0, #12288	; 0x3000
     17c:	00000050 	andeq	r0, r0, r0, asr r0
     180:	09042302 	stmdbeq	r4, {r1, r8, r9, sp}
     184:	00000171 	andeq	r0, r0, r1, ror r1
     188:	00506403 	subseq	r6, r0, r3, lsl #8
     18c:	23020000 	movwcs	r0, #8192	; 0x2000
     190:	04d80908 	ldrbeq	r0, [r8], #2312	; 0x908
     194:	65030000 	strvs	r0, [r3]
     198:	00000050 	andeq	r0, r0, r0, asr r0
     19c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     1a0:	000004c0 	andeq	r0, r0, r0, asr #9
     1a4:	00506603 	subseq	r6, r0, r3, lsl #12
     1a8:	23020000 	movwcs	r0, #8192	; 0x2000
     1ac:	eb020010 	bl	801f4 <MV_CPU_LE+0x801f3>
     1b0:	03000000 	movweq	r0, #0
     1b4:	00015b67 	andeq	r5, r1, r7, ror #22
     1b8:	05cf0800 	strbeq	r0, [pc, #2048]	; 9c0 <MV_CPU_LE+0x9bf>
     1bc:	03180000 	tsteq	r8, #0
     1c0:	00021a6b 	andeq	r1, r2, fp, ror #20
     1c4:	015d0900 	cmpeq	sp, r0, lsl #18
     1c8:	6c030000 	wstrbvs	wr0, [r3]
     1cc:	00000150 	andeq	r0, r0, r0, asr r1
     1d0:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
     1d4:	000005fe 	strdeq	r0, [r0], -lr
     1d8:	00506d03 	subseq	r6, r0, r3, lsl #26
     1dc:	23020000 	movwcs	r0, #8192	; 0x2000
     1e0:	01a80904 			; <UNDEFINED> instruction: 0x01a80904
     1e4:	6e030000 	worvs	wr0, wr3, wr0
     1e8:	00000050 	andeq	r0, r0, r0, asr r0
     1ec:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     1f0:	000000e4 	andeq	r0, r0, r4, ror #1
     1f4:	021a7003 	andseq	r7, sl, #3
     1f8:	23020000 	movwcs	r0, #8192	; 0x2000
     1fc:	0226090c 	eoreq	r0, r6, #196608	; 0x30000
     200:	71030000 	mrsvc	r0, (UNDEF: 3)
     204:	00000050 	andeq	r0, r0, r0, asr r0
     208:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     20c:	0000030a 	andeq	r0, r0, sl, lsl #6
     210:	022a7603 	eoreq	r7, sl, #3145728	; 0x300000
     214:	23020000 	movwcs	r0, #8192	; 0x2000
     218:	2c0a0014 	wstrbcs	wr0, [sl], #-20
     21c:	2a000001 	bcs	228 <MV_CPU_LE+0x227>
     220:	0b000002 	bleq	230 <MV_CPU_LE+0x22f>
     224:	0000005b 	andeq	r0, r0, fp, asr r0
     228:	040c0003 	streq	r0, [ip], #-3
     22c:	000001ae 	andeq	r0, r0, lr, lsr #3
     230:	00011e02 	andeq	r1, r1, r2, lsl #28
     234:	b9770300 	ldmdblt	r7!, {r8, r9}^
     238:	05000001 	streq	r0, [r0, #-1]
     23c:	50d10401 	sbcspl	r0, r1, r1, lsl #8
     240:	06000002 	streq	r0, [r0], -r2
     244:	00000153 	andeq	r0, r0, r3, asr r1
     248:	03510600 	cmpeq	r1, #0
     24c:	00010000 	andeq	r0, r1, r0
     250:	00023b02 	andeq	r3, r2, r2, lsl #22
     254:	3bd40400 	blcc	ff50125c <SerdesInfoTbl+0xbf4f929c>
     258:	08000002 	stmdaeq	r0, {r1}
     25c:	00000260 	andeq	r0, r0, r0, ror #4
     260:	84d70408 	ldrbhi	r0, [r7], #1032	; 0x408
     264:	09000002 	stmdbeq	r0, {r1}
     268:	00000140 	andeq	r0, r0, r0, asr #2
     26c:	0050d804 	subseq	sp, r0, r4, lsl #16
     270:	23020000 	movwcs	r0, #8192	; 0x2000
     274:	03840900 	orreq	r0, r4, #0
     278:	d9040000 	stmdble	r4, {}	; <UNPREDICTABLE>
     27c:	00000250 	andeq	r0, r0, r0, asr r2
     280:	00042302 	andeq	r2, r4, r2, lsl #6
     284:	00033802 	andeq	r3, r3, r2, lsl #16
     288:	5bda0400 	blpl	ff681290 <SerdesInfoTbl+0xbf6792d0>
     28c:	08000002 	stmdaeq	r0, {r1}
     290:	000005e0 	andeq	r0, r0, r0, ror #11
     294:	d4dd0414 	ldrble	r0, [sp], #1044	; 0x414
     298:	09000002 	stmdbeq	r0, {r1}
     29c:	0000048a 	andeq	r0, r0, sl, lsl #9
     2a0:	0284de04 	addeq	sp, r4, #64	; 0x40
     2a4:	23020000 	movwcs	r0, #8192	; 0x2000
     2a8:	01120900 	tsteq	r2, r0, lsl #18
     2ac:	df040000 	svcle	0x00040000
     2b0:	000000a2 	andeq	r0, r0, r2, lsr #1
     2b4:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
     2b8:	0000026c 	andeq	r0, r0, ip, ror #4
     2bc:	0050e004 	subseq	lr, r0, r4
     2c0:	23020000 	movwcs	r0, #8192	; 0x2000
     2c4:	022f090c 	eoreq	r0, pc, #196608	; 0x30000
     2c8:	e1040000 	mrs	r0, (UNDEF: 4)
     2cc:	000000a2 	andeq	r0, r0, r2, lsr #1
     2d0:	00102302 	andseq	r2, r0, r2, lsl #6
     2d4:	0001dc02 	andeq	sp, r1, r2, lsl #24
     2d8:	8fe20400 	svchi	0x00e20400
     2dc:	0d000002 	wstrbeq	wr0, [r0, #-2]
     2e0:	00000000 	andeq	r0, r0, r0
     2e4:	01018201 	tsteq	r1, r1, lsl #4
     2e8:	00000050 	andeq	r0, r0, r0, asr r0
     2ec:	400040ac 	andmi	r4, r0, ip, lsr #1
     2f0:	400040c8 	andmi	r4, r0, r8, asr #1
     2f4:	00000000 	andeq	r0, r0, r0
     2f8:	0000031b 	andeq	r0, r0, fp, lsl r3
     2fc:	0004620e 	andeq	r6, r4, lr, lsl #4
     300:	01820100 	orreq	r0, r2, r0, lsl #2
     304:	00000050 	andeq	r0, r0, r0, asr r0
     308:	0f6c9102 	svceq	0x006c9102
     30c:	0000084b 	andeq	r0, r0, fp, asr #16
     310:	50018401 	andpl	r8, r1, r1, lsl #8
     314:	02000000 	andeq	r0, r0, #0
     318:	10007491 	mulne	r0, r1, r4
     31c:	00003701 	andeq	r3, r0, r1, lsl #14
     320:	01650200 	cmneq	r5, r0, lsl #4
     324:	00000050 	andeq	r0, r0, r0, asr r0
     328:	400040c8 	andmi	r4, r0, r8, asr #1
     32c:	400040d8 	ldrdmi	r4, [r0], -r8
     330:	00000038 	andeq	r0, r0, r8, lsr r0
     334:	053d0110 	ldreq	r0, [sp, #-272]!	; 0x110
     338:	82020000 	andhi	r0, r2, #0
     33c:	00005001 	andeq	r5, r0, r1
     340:	0040d800 	subeq	sp, r0, r0, lsl #16
     344:	00410e40 	subeq	r0, r1, r0, asr #28
     348:	00006440 	andeq	r6, r0, r0, asr #8
     34c:	cc011100 	wstrwgt	wr1, [r1]
     350:	02000003 	andeq	r0, r0, #3
     354:	0037019a 	mlaseq	r7, sl, r1, r0
     358:	41100000 	tstmi	r0, r0
     35c:	41364000 	teqmi	r6, r0
     360:	00904000 	addseq	r4, r0, r0
     364:	03790000 	cmneq	r9, #0
     368:	22120000 	andscs	r0, r2, #0
     36c:	02000006 	andeq	r0, r0, #6
     370:	0000379c 	muleq	r0, ip, r7
     374:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     378:	4d011100 	wstrwmi	wr1, [r1]
     37c:	02000002 	andeq	r0, r0, #2
     380:	003701a1 	eorseq	r0, r7, r1, lsr #3
     384:	41380000 	teqmi	r8, r0
     388:	41c44000 	bicmi	r4, r4, r0
     38c:	00c84000 	sbceq	r4, r8, r0
     390:	03dd0000 	bicseq	r0, sp, #0
     394:	6a130000 	bvs	4c039c <MV_CPU_LE+0x4c039b>
     398:	02000001 	andeq	r0, r0, #1
     39c:	000037a1 	andeq	r3, r0, r1, lsr #15
     3a0:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
     3a4:	0004fe13 	andeq	pc, r4, r3, lsl lr	; <UNPREDICTABLE>
     3a8:	37a10200 	strcc	r0, [r1, r0, lsl #4]!
     3ac:	02000000 	andeq	r0, r0, #0
     3b0:	3f125691 	svccc	0x00125691
     3b4:	02000004 	andeq	r0, r0, #4
     3b8:	0002d4a3 	andeq	sp, r2, r3, lsr #9
     3bc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     3c0:	00038912 	andeq	r8, r3, r2, lsl r9
     3c4:	84a40200 	strthi	r0, [r4], #512	; 0x200
     3c8:	02000002 	andeq	r0, r0, #2
     3cc:	4b125c91 	blmi	497618 <MV_CPU_LE+0x497617>
     3d0:	02000008 	andeq	r0, r0, #8
     3d4:	000037a5 	andeq	r3, r0, r5, lsr #15
     3d8:	5b910200 	blpl	fe440be0 <SerdesInfoTbl+0xbe438c20>
     3dc:	24011100 	strcs	r1, [r1], #-256	; 0x100
     3e0:	02000000 	andeq	r0, r0, #0
     3e4:	009701b8 			; <UNDEFINED> instruction: 0x009701b8
     3e8:	41c40000 	bicmi	r0, r4, r0
     3ec:	42bc4000 	adcsmi	r4, ip, #0
     3f0:	01004000 	mrseq	r4, (UNDEF: 0)
     3f4:	04330000 	ldrteq	r0, [r3]
     3f8:	5c120000 	wldrbpl	wr0, [r2]
     3fc:	02000003 	andeq	r0, r0, #3
     400:	000037ba 			; <UNDEFINED> instruction: 0x000037ba
     404:	73910200 	orrsvc	r0, r1, #0
     408:	00043f12 	andeq	r3, r4, r2, lsl pc
     40c:	d4bb0200 	ldrtle	r0, [fp], #512	; 0x200
     410:	02000002 	andeq	r0, r0, #2
     414:	89125c91 	ldmdbhi	r2, {r0, r4, r7, sl, fp, ip, lr}
     418:	02000003 	andeq	r0, r0, #3
     41c:	000284bc 			; <UNDEFINED> instruction: 0x000284bc
     420:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     424:	0001a012 	andeq	sl, r1, r2, lsl r0
     428:	50bd0200 	adcspl	r0, sp, r0, lsl #4
     42c:	02000000 	andeq	r0, r0, #0
     430:	10007491 	mulne	r0, r1, r4
     434:	0002cb01 	andeq	ip, r2, r1, lsl #22
     438:	01db0200 	bicseq	r0, fp, r0, lsl #4
     43c:	000000a2 	andeq	r0, r0, r2, lsr #1
     440:	400042bc 			; <UNDEFINED> instruction: 0x400042bc
     444:	400042d4 	ldrdmi	r4, [r0], -r4	; <UNPREDICTABLE>
     448:	00000138 	andeq	r0, r0, r8, lsr r1
     44c:	03ab0111 			; <UNDEFINED> instruction: 0x03ab0111
     450:	e0020000 	and	r0, r2, r0
     454:	00006901 	andeq	r6, r0, r1, lsl #18
     458:	0042d400 	subeq	sp, r2, r0, lsl #8
     45c:	00434840 	subeq	r4, r3, r0, asr #16
     460:	00016440 	andeq	r6, r1, r0, asr #8
     464:	0004a200 	andeq	sl, r4, r0, lsl #4
     468:	01ea1200 	mvneq	r1, r0, lsl #4
     46c:	e2020000 	and	r0, r2, #0
     470:	00000050 	andeq	r0, r0, r0, asr r0
     474:	12689102 	rsbne	r9, r8, #-2147483648	; 0x80000000
     478:	00000505 	andeq	r0, r0, r5, lsl #10
     47c:	0069e302 	rsbeq	lr, r9, r2, lsl #6
     480:	91020000 	mrsls	r0, (UNDEF: 2)
     484:	65721476 	ldrbvs	r1, [r2, #-1142]!	; 0x476
     488:	e4020067 	str	r0, [r2], #-103	; 0x67
     48c:	00000050 	andeq	r0, r0, r0, asr r0
     490:	12709102 	rsbsne	r9, r0, #-2147483648	; 0x80000000
     494:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     498:	0050e402 	subseq	lr, r0, r2, lsl #8
     49c:	91020000 	mrsls	r0, (UNDEF: 2)
     4a0:	0111006c 	tsteq	r1, ip, rrx
     4a4:	00000396 	muleq	r0, r6, r3
     4a8:	5001f602 	andpl	pc, r1, r2, lsl #12
     4ac:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     4b0:	74400043 	strbvc	r0, [r0], #-67	; 0x43
     4b4:	9c400043 	wstrhls	wr0, [r0], #-67
     4b8:	ce000001 	worgt	wr0, wr0, wr1
     4bc:	14000004 	strne	r0, [r0], #-4
     4c0:	00676572 	rsbeq	r6, r7, r2, ror r5
     4c4:	0050f802 	subseq	pc, r0, r2, lsl #16
     4c8:	91020000 	mrsls	r0, (UNDEF: 2)
     4cc:	01110074 	tsteq	r1, r4, ror r0
     4d0:	00000044 	andeq	r0, r0, r4, asr #32
     4d4:	4401fd02 	strmi	pc, [r1], #-3330	; 0xd02
     4d8:	74000005 	strvc	r0, [r0], #-5
     4dc:	38400043 	stmdacc	r0, {r0, r1, r6}^
     4e0:	d4400045 	strble	r0, [r0], #-69	; 0x45
     4e4:	44000001 	strmi	r0, [r0], #-1
     4e8:	13000005 	movwne	r0, #5
     4ec:	0000051b 	andeq	r0, r0, fp, lsl r5
     4f0:	0037fd02 	eorseq	pc, r7, r2, lsl #26
     4f4:	91020000 	mrsls	r0, (UNDEF: 2)
     4f8:	01a01257 	asreq	r1, r7, r2
     4fc:	ff020000 			; <UNDEFINED> instruction: 0xff020000
     500:	00000050 	andeq	r0, r0, r0, asr r0
     504:	0f5c9102 	svceq	0x005c9102
     508:	00000454 	andeq	r0, r0, r4, asr r4
     50c:	50010002 	andpl	r0, r1, r2
     510:	02000000 	andeq	r0, r0, #0
     514:	960f6c91 			; <UNDEFINED> instruction: 0x960f6c91
     518:	02000001 	andeq	r0, r0, #1
     51c:	00490101 	subeq	r0, r9, r1, lsl #2
     520:	91020000 	mrsls	r0, (UNDEF: 2)
     524:	019b0f68 	orrseq	r0, fp, r8, ror #30
     528:	02020000 	andeq	r0, r2, #0
     52c:	00004901 	andeq	r4, r0, r1, lsl #18
     530:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     534:	0001300f 	andeq	r3, r1, pc
     538:	01030200 	mrseq	r0, R11_usr
     53c:	000000a2 	andeq	r0, r0, r2, lsr #1
     540:	00609102 	rsbeq	r9, r0, r2, lsl #2
     544:	0230040c 	eorseq	r0, r0, #201326592	; 0xc000000
     548:	01150000 	tsteq	r5, r0
     54c:	00000058 	andeq	r0, r0, r8, asr r0
     550:	01014c02 	tsteq	r1, r2, lsl #24
     554:	00000050 	andeq	r0, r0, r0, asr r0
     558:	40004538 	andmi	r4, r0, r8, lsr r5
     55c:	400045a6 	andmi	r4, r0, r6, lsr #11
     560:	0000020c 	andeq	r0, r0, ip, lsl #4
     564:	06290115 			; <UNDEFINED> instruction: 0x06290115
     568:	5f020000 	svcpl	0x00020000
     56c:	00500101 	subseq	r0, r0, r1, lsl #2
     570:	45a80000 	strmi	r0, [r8]!
     574:	46164000 	ldrmi	r4, [r6], -r0
     578:	02384000 	eorseq	r4, r8, #0
     57c:	01160000 	tsteq	r6, r0
     580:	0000007d 	andeq	r0, r0, sp, ror r0
     584:	01017302 	tsteq	r1, r2, lsl #6
     588:	00000037 	andeq	r0, r0, r7, lsr r0
     58c:	40004618 	andmi	r4, r0, r8, lsl r6
     590:	40004664 	andmi	r4, r0, r4, ror #12
     594:	00000264 	andeq	r0, r0, r4, ror #4
     598:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
     59c:	72617317 	rsbvc	r7, r1, #1543503872	; 0x5c000000
     5a0:	01750200 	cmneq	r5, r0, lsl #4
     5a4:	00000050 	andeq	r0, r0, r0, asr r0
     5a8:	0f749102 	svceq	0x00749102
     5ac:	0000052d 	andeq	r0, r0, sp, lsr #10
     5b0:	50017602 	andpl	r7, r1, r2, lsl #12
     5b4:	02000000 	andeq	r0, r0, #0
     5b8:	16007091 			; <UNDEFINED> instruction: 0x16007091
     5bc:	0003ba01 	andeq	fp, r3, r1, lsl #20
     5c0:	017e0200 	cmneq	lr, r0, lsl #4
     5c4:	00005001 	andeq	r5, r0, r1
     5c8:	00466400 	subeq	r6, r6, r0, lsl #8
     5cc:	0046aa40 	subeq	sl, r6, r0, asr #20
     5d0:	00029c40 	andeq	r9, r2, r0, asr #24
     5d4:	0005f800 	andeq	pc, r5, r0, lsl #16
     5d8:	06140e00 	ldreq	r0, [r4], -r0, lsl #28
     5dc:	7e020000 	worvc	wr0, wr2, wr0
     5e0:	00005001 	andeq	r5, r0, r1
     5e4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     5e8:	0003450e 	andeq	r4, r3, lr, lsl #10
     5ec:	017e0200 	cmneq	lr, r0, lsl #4
     5f0:	00000544 	andeq	r0, r0, r4, asr #10
     5f4:	00709102 	rsbseq	r9, r0, r2, lsl #2
     5f8:	01bd0116 			; <UNDEFINED> instruction: 0x01bd0116
     5fc:	86020000 	strhi	r0, [r2], -r0
     600:	00970101 	addseq	r0, r7, r1, lsl #2
     604:	46ac0000 	strtmi	r0, [ip], r0
     608:	65dc4000 	ldrbvs	r4, [ip]
     60c:	02d44000 	sbcseq	r4, r4, #0
     610:	079c0000 	ldreq	r0, [ip, r0]
     614:	f60f0000 			; <UNDEFINED> instruction: 0xf60f0000
     618:	02000003 	andeq	r0, r0, #3
     61c:	00970188 	addseq	r0, r7, r8, lsl #3
     620:	91020000 	mrsls	r0, (UNDEF: 2)
     624:	03be0f6c 			; <UNDEFINED> instruction: 0x03be0f6c
     628:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
     62c:	00005001 	andeq	r5, r0, r1
     630:	40910200 	addsmi	r0, r1, r0, lsl #4
     634:	0006140f 	andeq	r1, r6, pc, lsl #8
     638:	018a0200 	orreq	r0, sl, r0, lsl #4
     63c:	00000037 	andeq	r0, r0, r7, lsr r0
     640:	0f6b9102 	svceq	0x006b9102
     644:	000004a7 	andeq	r0, r0, r7, lsr #9
     648:	9c018b02 	stcls	11, cr8, [r1], {2}
     64c:	03000007 	movweq	r0, #7
     650:	0f79f491 	svceq	0x0079f491
     654:	0000035c 	andeq	r0, r0, ip, asr r3
     658:	9c018b02 	stcls	11, cr8, [r1], {2}
     65c:	03000007 	movweq	r0, #7
     660:	0f74b491 	svceq	0x0074b491
     664:	0000060c 	andeq	r0, r0, ip, lsl #12
     668:	37018c02 	strcc	r8, [r1, -r2, lsl #24]
     66c:	02000000 	andeq	r0, r0, #0
     670:	d90f6a91 	stmdble	pc, {r0, r4, r7, r9, fp, sp, lr}	; <UNPREDICTABLE>
     674:	02000000 	andeq	r0, r0, #0
     678:	0037018c 	eorseq	r0, r7, ip, lsl #3
     67c:	91030000 	mrsls	r0, (UNDEF: 3)
     680:	670f7fbf 			; <UNDEFINED> instruction: 0x670f7fbf
     684:	02000004 	andeq	r0, r0, #4
     688:	0037018d 	eorseq	r0, r7, sp, lsl #3
     68c:	91020000 	mrsls	r0, (UNDEF: 2)
     690:	6d741769 	ldclvs	7, cr1, [r4, #-420]!	; 0xfffffe5c
     694:	8e020070 	mcrhi	0, 0, r0, cr2, cr0, {3}
     698:	00005001 	andeq	r5, r0, r1
     69c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     6a0:	0005230f 	andeq	r2, r5, pc, lsl #6
     6a4:	018f0200 	orreq	r0, pc, r0, lsl #4
     6a8:	00000050 	andeq	r0, r0, r0, asr r0
     6ac:	0f609102 	svceq	0x00609102
     6b0:	0000031b 	andeq	r0, r0, fp, lsl r3
     6b4:	37019002 	strcc	r9, [r1, -r2]
     6b8:	02000000 	andeq	r0, r0, #0
     6bc:	450f4f91 	strmi	r4, [pc, #-3985]	; fffff733 <SerdesInfoTbl+0xbfff7773>
     6c0:	02000003 	andeq	r0, r0, #3
     6c4:	05440191 	strbeq	r0, [r4, #-401]	; 0x191
     6c8:	91020000 	mrsls	r0, (UNDEF: 2)
     6cc:	04830f44 	streq	r0, [r3], #3908	; 0xf44
     6d0:	92020000 	andls	r0, r2, #0
     6d4:	00003701 	andeq	r3, r0, r1, lsl #14
     6d8:	5f910200 	svcpl	0x00910200
     6dc:	0005340f 	andeq	r3, r5, pc, lsl #8
     6e0:	01930200 	orrseq	r0, r3, r0, lsl #4
     6e4:	00000037 	andeq	r0, r0, r7, lsr r0
     6e8:	0f5e9102 	svceq	0x005e9102
     6ec:	0000010d 	andeq	r0, r0, sp, lsl #2
     6f0:	37019402 	strcc	r9, [r1, -r2, lsl #8]
     6f4:	02000000 	andeq	r0, r0, #0
     6f8:	490f4e91 	stmdbmi	pc, {r0, r4, r7, r9, sl, fp, lr}	; <UNPREDICTABLE>
     6fc:	02000004 	andeq	r0, r0, #4
     700:	00370195 	mlaseq	r7, r5, r1, r0
     704:	91020000 	mrsls	r0, (UNDEF: 2)
     708:	00c50f4d 	sbceq	r0, r5, sp, asr #30
     70c:	96020000 	strls	r0, [r2], -r0
     710:	00005001 	andeq	r5, r0, r1
     714:	58910200 	ldmpl	r1, {r9}
     718:	0001a00f 	andeq	sl, r1, pc
     71c:	01970200 	orrseq	r0, r7, r0, lsl #4
     720:	00000050 	andeq	r0, r0, r0, asr r0
     724:	0f509102 	svceq	0x00509102
     728:	00000389 	andeq	r0, r0, r9, lsl #7
     72c:	84019a02 	strhi	r9, [r1], #-2562	; 0xa02
     730:	03000002 	movweq	r0, #2
     734:	1874ac91 	ldmdane	r4!, {r0, r4, r7, sl, fp, sp, pc}^
     738:	4000486e 	andmi	r4, r0, lr, ror #16
     73c:	400048a4 	andmi	r4, r0, r4, lsr #17
     740:	00000754 	andeq	r0, r0, r4, asr r7
     744:	0004d30f 	andeq	sp, r4, pc, lsl #6
     748:	01dc0200 	bicseq	r0, ip, r0, lsl #4
     74c:	00000050 	andeq	r0, r0, r0, asr r0
     750:	00489102 	subeq	r9, r8, r2, lsl #2
     754:	005b8e18 	subseq	r8, fp, r8, lsl lr
     758:	005dc640 	subseq	ip, sp, r0, asr #12
     75c:	00077240 	andeq	r7, r7, r0, asr #4
     760:	6d741700 	ldclvs	7, cr1, [r4]
     764:	74020070 	strvc	r0, [r2], #-112	; 0x70
     768:	00005003 	andeq	r5, r0, r3
     76c:	b8910300 	ldmlt	r1, {r8, r9}
     770:	5619007f 			; <UNDEFINED> instruction: 0x5619007f
     774:	4a400061 	bmi	1000900 <MV_CPU_LE+0x10008ff>
     778:	0f400065 	svceq	0x00400065
     77c:	00000308 	andeq	r0, r0, r8, lsl #6
     780:	2a03c402 	bcs	f1790 <MV_CPU_LE+0xf178f>
     784:	02000002 	andeq	r0, r0, #2
     788:	260f5491 			; <UNDEFINED> instruction: 0x260f5491
     78c:	02000002 	andeq	r0, r0, #2
     790:	005003c5 	subseq	r0, r0, r5, asr #7
     794:	91030000 	mrsls	r0, (UNDEF: 3)
     798:	00007fb4 			; <UNDEFINED> instruction: 0x00007fb4
     79c:	0000500a 	andeq	r5, r0, sl
     7a0:	0007b200 	andeq	fp, r7, r0, lsl #4
     7a4:	005b0b00 	subseq	r0, fp, r0, lsl #22
     7a8:	0b0f0000 	bleq	3c07b0 <MV_CPU_LE+0x3c07af>
     7ac:	0000005b 	andeq	r0, r0, fp, asr r0
     7b0:	370a000a 	strcc	r0, [sl, -sl]
     7b4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     7b8:	0b000007 	bleq	7dc <MV_CPU_LE+0x7db>
     7bc:	0000005b 	andeq	r0, r0, fp, asr r0
     7c0:	005b0b0f 	subseq	r0, fp, pc, lsl #22
     7c4:	00080000 	andeq	r0, r8, r0
     7c8:	00036312 	andeq	r6, r3, r2, lsl r3
     7cc:	d9500200 	ldmdble	r0, {r9}^
     7d0:	05000007 	streq	r0, [r0, #-7]
     7d4:	00797c03 	rsbseq	r7, r9, r3, lsl #24
     7d8:	07b21a40 	ldreq	r1, [r2, r0, asr #20]!
     7dc:	440a0000 	strmi	r0, [sl]
     7e0:	e9000005 	stmdb	r0, {r0, r2}
     7e4:	1b000007 	blne	808 <MV_CPU_LE+0x807>
     7e8:	04f01c00 	ldrbteq	r1, [r0], #3072	; 0xc00
     7ec:	52020000 	andpl	r0, r2, #0
     7f0:	000007de 	ldrdeq	r0, [r0], -lr
     7f4:	d91c0101 	ldmdble	ip, {r0, r8}
     7f8:	02000003 	andeq	r0, r0, #3
     7fc:	0000a261 	andeq	sl, r0, r1, ror #4
     800:	1c010100 	wstrwne	wr0, [r1]
     804:	00000070 	andeq	r0, r0, r0, ror r0
     808:	00a26202 	adceq	r6, r2, r2, lsl #4
     80c:	01010000 	mrseq	r0, (UNDEF: 1)
     810:	0004f01c 	andeq	pc, r4, ip, lsl r0	; <UNPREDICTABLE>
     814:	de520200 	cdple	2, 5, cr0, cr2, cr0, {0}
     818:	01000007 	tsteq	r0, r7
     81c:	03d91d01 	bicseq	r1, r9, #64	; 0x40
     820:	61020000 	mrsvs	r0, (UNDEF: 2)
     824:	000000a2 	andeq	r0, r0, r2, lsr #1
     828:	7c030501 	stcvc	5, cr0, [r3], {1}
     82c:	1d40007c 	wstrhne	wr0, [r0, #-124]
     830:	00000070 	andeq	r0, r0, r0, ror r0
     834:	00a26202 	adceq	r6, r2, r2, lsl #4
     838:	05010000 	streq	r0, [r1]
     83c:	007c8003 	rsbseq	r8, ip, r3
     840:	03ed0040 	mvneq	r0, #64	; 0x40
     844:	00020000 	andeq	r0, r2, r0
     848:	000001a8 	andeq	r0, r0, r8, lsr #3
     84c:	04710104 	ldrbteq	r0, [r1], #-260	; 0x104
     850:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
     854:	fd000007 	stc2	0, cr0, [r0, #-28]	; 0xffffffe4
     858:	dc000003 	wstrble	wr0, [r0], #-3
     85c:	dc400065 	wstrhle	wr0, [r0], #-101
     860:	fc400065 	mcrr2	0, 6, r0, r0, cr5
     864:	02000005 	andeq	r0, r0, #5
     868:	03330801 	teqeq	r3, #65536	; 0x10000
     86c:	01020000 	mrseq	r0, (UNDEF: 2)
     870:	00032a08 	andeq	r2, r3, r8, lsl #20
     874:	05040300 	streq	r0, [r4, #-768]	; 0x300
     878:	00746e69 	rsbseq	r6, r4, r9, ror #28
     87c:	00038f04 	andeq	r8, r3, r4, lsl #30
     880:	45ab0100 	strmi	r0, [fp, #256]!	; 0x100
     884:	02000000 	andeq	r0, r0, #0
     888:	03770704 	cmneq	r7, #1048576	; 0x100000
     88c:	02020000 	andeq	r0, r2, #0
     890:	00008f05 	andeq	r8, r0, r5, lsl #30
     894:	07020200 	streq	r0, [r2, -r0, lsl #4]
     898:	000003e3 	andeq	r0, r0, r3, ror #7
     89c:	f5050802 			; <UNDEFINED> instruction: 0xf5050802
     8a0:	02000001 	andeq	r0, r0, #1
     8a4:	036d0708 	cmneq	sp, #2097152	; 0x200000
     8a8:	04020000 	streq	r0, [r2]
     8ac:	0001fa05 	andeq	pc, r1, r5, lsl #20
     8b0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     8b4:	00000372 	andeq	r0, r0, r2, ror r3
     8b8:	b7040402 	strlt	r0, [r4, -r2, lsl #8]
     8bc:	02000001 	andeq	r0, r0, #1
     8c0:	04e90408 	strbteq	r0, [r9], #1032	; 0x408
     8c4:	01050000 	mrseq	r0, (UNDEF: 5)
     8c8:	00c94702 	sbceq	r4, r9, r2, lsl #14
     8cc:	4c060000 	wstrbmi	wr0, [r6]
     8d0:	00000005 	andeq	r0, r0, r5
     8d4:	00050b06 	andeq	r0, r5, r6, lsl #22
     8d8:	af060100 	svcge	0x00060100
     8dc:	02000004 	andeq	r0, r0, #4
     8e0:	00058306 	andeq	r8, r5, r6, lsl #6
     8e4:	96060300 	strls	r0, [r6], -r0, lsl #6
     8e8:	04000005 	streq	r0, [r0], #-5
     8ec:	0005a906 	andeq	sl, r5, r6, lsl #18
     8f0:	bc060500 	stclt	5, cr0, [r6], {0}
     8f4:	06000005 	streq	r0, [r0], -r5
     8f8:	00049406 	andeq	r9, r4, r6, lsl #8
     8fc:	15060700 	strne	r0, [r6, #-1792]	; 0x700
     900:	08000002 	stmdaeq	r0, {r1}
     904:	0005ed06 	andeq	lr, r5, r6, lsl #26
     908:	04000900 	streq	r0, [r0], #-2304	; 0x900
     90c:	000000ad 	andeq	r0, r0, sp, lsr #1
     910:	00845202 	addeq	r5, r4, r2, lsl #4
     914:	01050000 	mrseq	r0, (UNDEF: 5)
     918:	00f55502 	rscseq	r5, r5, r2, lsl #10
     91c:	e7060000 	str	r0, [r6, -r0]
     920:	00000002 	andeq	r0, r0, r2
     924:	0002ab06 	andeq	sl, r2, r6, lsl #22
     928:	bb060100 	bllt	180d30 <MV_CPU_LE+0x180d2f>
     92c:	02000002 	andeq	r0, r0, #2
     930:	0002f806 	andeq	pc, r2, r6, lsl #16
     934:	04000300 	streq	r0, [r0], #-768	; 0x300
     938:	00000273 	andeq	r0, r0, r3, ror r2
     93c:	00d45a02 	sbcseq	r5, r4, r2, lsl #20
     940:	48070000 	stmdami	r7, {}	; <UNPREDICTABLE>
     944:	01000001 	tsteq	r0, r1
     948:	01195d02 	tsteq	r9, r2, lsl #26
     94c:	99060000 	stmdbls	r6, {}	; <UNPREDICTABLE>
     950:	00000000 	andeq	r0, r0, r0
     954:	00018506 	andeq	r8, r1, r6, lsl #10
     958:	04000100 	streq	r0, [r0], #-256	; 0x100
     95c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
     960:	01006002 	tsteq	r0, r2
     964:	64080000 	strvs	r0, [r8]
     968:	14000005 	strne	r0, [r0], #-5
     96c:	01776102 	cmneq	r7, r2, lsl #2
     970:	02090000 	andeq	r0, r9, #0
     974:	02000001 	andeq	r0, r0, #1
     978:	0000c962 	andeq	ip, r0, r2, ror #18
     97c:	00230200 	eoreq	r0, r3, r0, lsl #4
     980:	00020309 	andeq	r0, r2, r9, lsl #6
     984:	3a630200 	bcc	18c118c <MV_CPU_LE+0x18c118b>
     988:	02000000 	andeq	r0, r0, #0
     98c:	71090423 	tstvc	r9, r3, lsr #8
     990:	02000001 	andeq	r0, r0, #1
     994:	00003a64 	andeq	r3, r0, r4, ror #20
     998:	08230200 	stmdaeq	r3!, {r9}
     99c:	0004d809 	andeq	sp, r4, r9, lsl #16
     9a0:	3a650200 	bcc	19411a8 <MV_CPU_LE+0x19411a7>
     9a4:	02000000 	andeq	r0, r0, #0
     9a8:	c0090c23 	andgt	r0, r9, r3, lsr #24
     9ac:	02000004 	andeq	r0, r0, #4
     9b0:	00003a66 	andeq	r3, r0, r6, ror #20
     9b4:	10230200 	eorne	r0, r3, r0, lsl #4
     9b8:	00eb0400 	rsceq	r0, fp, r0, lsl #8
     9bc:	67020000 	strvs	r0, [r2, -r0]
     9c0:	00000124 	andeq	r0, r0, r4, lsr #2
     9c4:	0005cf08 	andeq	ip, r5, r8, lsl #30
     9c8:	6b021800 	blvs	869d0 <MV_CPU_LE+0x869cf>
     9cc:	000001e3 	andeq	r0, r0, r3, ror #3
     9d0:	00015d09 	andeq	r5, r1, r9, lsl #26
     9d4:	196c0200 	stmdbne	ip!, {r9}^
     9d8:	02000001 	andeq	r0, r0, #1
     9dc:	fe090023 	cdp2	0, 0, cr0, cr9, cr3, {1}
     9e0:	02000005 	andeq	r0, r0, #5
     9e4:	00003a6d 	andeq	r3, r0, sp, ror #20
     9e8:	04230200 	strteq	r0, [r3], #-512	; 0x200
     9ec:	0001a809 	andeq	sl, r1, r9, lsl #16
     9f0:	3a6e0200 	bcc	1b811f8 <MV_CPU_LE+0x1b811f7>
     9f4:	02000000 	andeq	r0, r0, #0
     9f8:	e4090823 	str	r0, [r9], #-2083	; 0x823
     9fc:	02000000 	andeq	r0, r0, #0
     a00:	0001e370 	andeq	lr, r1, r0, ror r3
     a04:	0c230200 	stceq	2, cr0, [r3]
     a08:	00022609 	andeq	r2, r2, r9, lsl #12
     a0c:	3a710200 	bcc	1c41214 <MV_CPU_LE+0x1c41213>
     a10:	02000000 	andeq	r0, r0, #0
     a14:	0a091023 	beq	244aa8 <MV_CPU_LE+0x244aa7>
     a18:	02000003 	andeq	r0, r0, #3
     a1c:	0001f376 	andeq	pc, r1, r6, ror r3	; <UNPREDICTABLE>
     a20:	14230200 	strtne	r0, [r3], #-512	; 0x200
     a24:	00f50a00 	rscseq	r0, r5, r0, lsl #20
     a28:	01f30000 	mvnseq	r0, r0
     a2c:	450b0000 	strmi	r0, [fp]
     a30:	03000000 	movweq	r0, #0
     a34:	77040c00 	strvc	r0, [r4, -r0, lsl #24]
     a38:	04000001 	streq	r0, [r0], #-1
     a3c:	0000011e 	andeq	r0, r0, lr, lsl r1
     a40:	01827702 	orreq	r7, r2, r2, lsl #14
     a44:	770a0000 	strvc	r0, [sl, -r0]
     a48:	14000001 	strne	r0, [r0], #-1
     a4c:	0b000002 	bleq	a5c <MV_CPU_LE+0xa5b>
     a50:	00000045 	andeq	r0, r0, r5, asr #32
     a54:	bb0d000c 	bllt	340a8c <MV_CPU_LE+0x340a8b>
     a58:	03000007 	movweq	r0, #7
     a5c:	00020442 	andeq	r0, r2, r2, asr #8
     a60:	0a010100 	beq	40e68 <MV_CPU_LE+0x40e67>
     a64:	000001f9 	strdeq	r0, [r0], -r9
     a68:	00000231 	andeq	r0, r0, r1, lsr r2
     a6c:	0000450b 	andeq	r4, r0, fp, lsl #10
     a70:	0d000300 	stceq	3, cr0, [r0]
     a74:	00000805 	andeq	r0, r0, r5, lsl #16
     a78:	02215303 	eoreq	r5, r1, #201326592	; 0xc000000
     a7c:	01010000 	mrseq	r0, (UNDEF: 1)
     a80:	0001f90a 	andeq	pc, r1, sl, lsl #18
     a84:	00024e00 	andeq	r4, r2, r0, lsl #28
     a88:	00450b00 	subeq	r0, r5, r0, lsl #22
     a8c:	00050000 	andeq	r0, r5, r0
     a90:	0006da0d 	andeq	sp, r6, sp, lsl #20
     a94:	3e5f0300 	cdpcc	3, 5, cr0, cr15, cr0, {0}
     a98:	01000002 	tsteq	r0, r2
     a9c:	01f90a01 	mvnseq	r0, r1, lsl #20
     aa0:	026b0000 	rsbeq	r0, fp, #0
     aa4:	450b0000 	strmi	r0, [fp]
     aa8:	01000000 	mrseq	r0, (UNDEF: 0)
     aac:	07450d00 	strbeq	r0, [r5, -r0, lsl #26]
     ab0:	6b030000 	blvs	c0ab8 <MV_CPU_LE+0xc0ab7>
     ab4:	0000025b 	andeq	r0, r0, fp, asr r2
     ab8:	3d0d0101 	wstrwcc	wr0, [sp, #-4]
     abc:	03000006 	movweq	r0, #6
     ac0:	00025b72 	andeq	r5, r2, r2, ror fp
     ac4:	0d010100 	wstrweq	wr0, [r1]
     ac8:	00000685 	andeq	r0, r0, r5, lsl #13
     acc:	025b7903 	subseq	r7, fp, #49152	; 0xc000
     ad0:	01010000 	mrseq	r0, (UNDEF: 1)
     ad4:	0001f90a 	andeq	pc, r1, sl, lsl #18
     ad8:	0002a200 	andeq	sl, r2, r0, lsl #4
     adc:	00450b00 	subeq	r0, r5, r0, lsl #22
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00065f0d 	andeq	r5, r6, sp, lsl #30
     ae8:	92800300 	addls	r0, r0, #0
     aec:	01000002 	tsteq	r0, r2
     af0:	07db0d01 	ldrbeq	r0, [fp, r1, lsl #26]
     af4:	86030000 	strhi	r0, [r3], -r0
     af8:	00000292 	muleq	r0, r2, r2
     afc:	6a0d0101 	bvs	340f08 <MV_CPU_LE+0x340f07>
     b00:	03000007 	movweq	r0, #7
     b04:	0002928c 	andeq	r9, r2, ip, lsl #5
     b08:	0d010100 	wstrweq	wr0, [r1]
     b0c:	00000703 	andeq	r0, r0, r3, lsl #14
     b10:	02929203 	addseq	r9, r2, #805306368	; 0x30000000
     b14:	01010000 	mrseq	r0, (UNDEF: 1)
     b18:	0007910d 	andeq	r9, r7, sp, lsl #2
     b1c:	5b9b0300 	blpl	fe6c1724 <SerdesInfoTbl+0xbe6b9764>
     b20:	01000002 	tsteq	r0, r2
     b24:	06b10d01 	ldrteq	r0, [r1], r1, lsl #26
     b28:	a1030000 	mrsge	r0, (UNDEF: 3)
     b2c:	00000292 	muleq	r0, r2, r2
     b30:	bb0e0101 	bllt	380f3c <MV_CPU_LE+0x380f3b>
     b34:	03000007 	movweq	r0, #7
     b38:	00020442 	andeq	r0, r2, r2, asr #8
     b3c:	03050100 	movweq	r0, #20736	; 0x5100
     b40:	40007c84 	andmi	r7, r0, r4, lsl #25
     b44:	0008050e 	andeq	r0, r8, lr, lsl #10
     b48:	21530300 	cmpcs	r3, r0, lsl #6
     b4c:	01000002 	tsteq	r0, r2
     b50:	7d980305 	ldcvc	3, cr0, [r8, #20]
     b54:	da0e4000 	ble	390b5c <MV_CPU_LE+0x390b5b>
     b58:	03000006 	movweq	r0, #6
     b5c:	00023e5f 	andeq	r3, r2, pc, asr lr
     b60:	03050100 	movweq	r0, #20736	; 0x5100
     b64:	40007df8 	strdmi	r7, [r0], -r8
     b68:	0007450e 	andeq	r4, r7, lr, lsl #10
     b6c:	5b6b0300 	blpl	1ac1774 <MV_CPU_LE+0x1ac1773>
     b70:	01000002 	tsteq	r0, r2
     b74:	7e880305 	cdpvc	3, 8, cr0, cr8, cr5, {0}
     b78:	3d0e4000 	wstrbcc	wr4, [lr]
     b7c:	03000006 	movweq	r0, #6
     b80:	00025b72 	andeq	r5, r2, r2, ror fp
     b84:	03050100 	movweq	r0, #20736	; 0x5100
     b88:	40007eb8 			; <UNDEFINED> instruction: 0x40007eb8
     b8c:	0006850e 	andeq	r8, r6, lr, lsl #10
     b90:	5b790300 	blpl	1e41798 <MV_CPU_LE+0x1e41797>
     b94:	01000002 	tsteq	r0, r2
     b98:	7ee80305 	cdpvc	3, 14, cr0, cr8, cr5, {0}
     b9c:	5f0e4000 	svcpl	0x000e4000
     ba0:	03000006 	movweq	r0, #6
     ba4:	00029280 	andeq	r9, r2, r0, lsl #5
     ba8:	03050100 	movweq	r0, #20736	; 0x5100
     bac:	40007f18 	andmi	r7, r0, r8, lsl pc
     bb0:	0007db0e 	andeq	sp, r7, lr, lsl #22
     bb4:	92860300 	addls	r0, r6, #0
     bb8:	01000002 	tsteq	r0, r2
     bbc:	7f300305 	svcvc	0x00300305
     bc0:	6a0e4000 	bvs	390bc8 <MV_CPU_LE+0x390bc7>
     bc4:	03000007 	movweq	r0, #7
     bc8:	0002928c 	andeq	r9, r2, ip, lsl #5
     bcc:	03050100 	movweq	r0, #20736	; 0x5100
     bd0:	40007f48 	andmi	r7, r0, r8, asr #30
     bd4:	0007030e 	andeq	r0, r7, lr, lsl #6
     bd8:	92920300 	addsls	r0, r2, #0
     bdc:	01000002 	tsteq	r0, r2
     be0:	7f600305 	svcvc	0x00600305
     be4:	910e4000 	mrsls	r4, (UNDEF: 14)
     be8:	03000007 	movweq	r0, #7
     bec:	00025b9b 	muleq	r2, fp, fp
     bf0:	03050100 	movweq	r0, #20736	; 0x5100
     bf4:	40007f78 	andmi	r7, r0, r8, ror pc
     bf8:	0006b10e 	andeq	fp, r6, lr, lsl #2
     bfc:	92a10300 	adcls	r0, r1, #0
     c00:	01000002 	tsteq	r0, r2
     c04:	7fa80305 	svcvc	0x00a80305
     c08:	d80a4000 	stmdale	sl, {lr}
     c0c:	d8000003 	stmdale	r0, {r0, r1}
     c10:	0b000003 	bleq	c24 <MV_CPU_LE+0xc23>
     c14:	00000045 	andeq	r0, r0, r5, asr #32
     c18:	040c000a 	streq	r0, [ip], #-10
     c1c:	000001f9 	strdeq	r0, [r0], -r9
     c20:	0004f00e 	andeq	pc, r4, lr
     c24:	c8a60300 	stmiagt	r6!, {r8, r9}
     c28:	01000003 	tsteq	r0, r3
     c2c:	7fc00305 	svcvc	0x00c00305
     c30:	6e004000 	worvs	wr4, wr0, wr0
     c34:	02000003 	andeq	r0, r0, #3
     c38:	00025f00 	andeq	r5, r2, r0, lsl #30
     c3c:	71010400 	tstvc	r1, r0, lsl #8
     c40:	01000004 	tsteq	r0, r4
     c44:	000008dd 	ldrdeq	r0, [r0], -sp
     c48:	000003fd 	strdeq	r0, [r0], -sp
     c4c:	400065dc 	ldrdmi	r6, [r0], -ip
     c50:	4000684a 	andmi	r6, r0, sl, asr #16
     c54:	00000669 	andeq	r0, r0, r9, ror #12
     c58:	33080102 	movwcc	r0, #33026	; 0x8102
     c5c:	03000003 	movweq	r0, #3
     c60:	0000047d 	andeq	r0, r0, sp, ror r4
     c64:	0037a801 	eorseq	sl, r7, r1, lsl #16
     c68:	01020000 	mrseq	r0, (UNDEF: 2)
     c6c:	00032a08 	andeq	r2, r3, r8, lsl #20
     c70:	05040400 	streq	r0, [r4, #-1024]	; 0x400
     c74:	00746e69 	rsbseq	r6, r4, r9, ror #28
     c78:	00038f03 	andeq	r8, r3, r3, lsl #30
     c7c:	50ab0100 	adcpl	r0, fp, r0, lsl #2
     c80:	02000000 	andeq	r0, r0, #0
     c84:	03770704 	cmneq	r7, #1048576	; 0x100000
     c88:	02020000 	andeq	r0, r2, #0
     c8c:	00008f05 	andeq	r8, r0, r5, lsl #30
     c90:	07020200 	streq	r0, [r2, -r0, lsl #4]
     c94:	000003e3 	andeq	r0, r0, r3, ror #7
     c98:	f5050802 			; <UNDEFINED> instruction: 0xf5050802
     c9c:	02000001 	andeq	r0, r0, #1
     ca0:	036d0708 	cmneq	sp, #2097152	; 0x200000
     ca4:	04020000 	streq	r0, [r2]
     ca8:	0001fa05 	andeq	pc, r1, r5, lsl #20
     cac:	07040200 	streq	r0, [r4, -r0, lsl #4]
     cb0:	00000372 	andeq	r0, r0, r2, ror r3
     cb4:	00057b03 	andeq	r7, r5, r3, lsl #22
     cb8:	3ebc0100 	wmaddsxcc	wr0, wr12, wr0
     cbc:	02000000 	andeq	r0, r0, #0
     cc0:	01b70404 			; <UNDEFINED> instruction: 0x01b70404
     cc4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     cc8:	0004e904 	andeq	lr, r4, r4, lsl #18
     ccc:	087f0500 	ldmdaeq	pc!, {r8, sl}^	; <UNPREDICTABLE>
     cd0:	03200000 	teqeq	r0, #0
     cd4:	00018746 	andeq	r8, r1, r6, asr #14
     cd8:	62720600 	rsbsvs	r0, r2, #0
     cdc:	48030072 	stmdami	r3, {r1, r4, r5, r6}
     ce0:	0000002c 	andeq	r0, r0, ip, lsr #32
     ce4:	07002302 	streq	r2, [r0, -r2, lsl #6]
     ce8:	0000082a 	andeq	r0, r0, sl, lsr #16
     cec:	01874903 	orreq	r4, r7, r3, lsl #18
     cf0:	23020000 	movwcs	r0, #8192	; 0x2000
     cf4:	65690601 	strbvs	r0, [r9, #-1537]!	; 0x601
     cf8:	4b030072 	blmi	c0ec8 <MV_CPU_LE+0xc0ec7>
     cfc:	0000002c 	andeq	r0, r0, ip, lsr #32
     d00:	07042302 	streq	r2, [r4, -r2, lsl #6]
     d04:	0000082f 	andeq	r0, r0, pc, lsr #16
     d08:	01874c03 	orreq	r4, r7, r3, lsl #24
     d0c:	23020000 	movwcs	r0, #8192	; 0x2000
     d10:	63660605 	cmnvs	r6, #5242880	; 0x500000
     d14:	4e030072 	mcrmi	0, 0, r0, cr3, cr2, {3}
     d18:	0000002c 	andeq	r0, r0, ip, lsr #32
     d1c:	07082302 	streq	r2, [r8, -r2, lsl #6]
     d20:	0000086d 	andeq	r0, r0, sp, ror #16
     d24:	01874f03 	orreq	r4, r7, r3, lsl #30
     d28:	23020000 	movwcs	r0, #8192	; 0x2000
     d2c:	636c0609 	cmnvs	ip, #9437184	; 0x900000
     d30:	51030072 	tstpl	r3, r2, ror r0
     d34:	0000002c 	andeq	r0, r0, ip, lsr #32
     d38:	070c2302 	streq	r2, [ip, -r2, lsl #6]
     d3c:	00000872 	andeq	r0, r0, r2, ror r8
     d40:	01875203 	orreq	r5, r7, r3, lsl #4
     d44:	23020000 	movwcs	r0, #8192	; 0x2000
     d48:	636d060d 	cmnvs	sp, #13631488	; 0xd00000
     d4c:	54030072 	strpl	r0, [r3], #-114	; 0x72
     d50:	0000002c 	andeq	r0, r0, ip, lsr #32
     d54:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
     d58:	00000834 	andeq	r0, r0, r4, lsr r8
     d5c:	01875503 	orreq	r5, r7, r3, lsl #10
     d60:	23020000 	movwcs	r0, #8192	; 0x2000
     d64:	736c0611 	cmnvc	ip, #17825792	; 0x1100000
     d68:	57030072 	smlsdxpl	r3, r2, r0, r0
     d6c:	0000002c 	andeq	r0, r0, ip, lsr #32
     d70:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
     d74:	00000839 	andeq	r0, r0, r9, lsr r8
     d78:	01875803 	orreq	r5, r7, r3, lsl #16
     d7c:	23020000 	movwcs	r0, #8192	; 0x2000
     d80:	736d0615 	cmnvc	sp, #22020096	; 0x1500000
     d84:	5a030072 	bpl	c0f54 <MV_CPU_LE+0xc0f53>
     d88:	0000002c 	andeq	r0, r0, ip, lsr #32
     d8c:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
     d90:	0000083e 	andeq	r0, r0, lr, lsr r8
     d94:	01875b03 	orreq	r5, r7, r3, lsl #22
     d98:	23020000 	movwcs	r0, #8192	; 0x2000
     d9c:	63730619 	cmnvs	r3, #26214400	; 0x1900000
     da0:	5d030072 	wstrbpl	wr0, [r3, #-114]
     da4:	0000002c 	andeq	r0, r0, ip, lsr #32
     da8:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
     dac:	00000843 	andeq	r0, r0, r3, asr #16
     db0:	01875e03 	orreq	r5, r7, r3, lsl #28
     db4:	23020000 	movwcs	r0, #8192	; 0x2000
     db8:	2c08001d 	wstrbcs	wr0, [r8], #-29
     dbc:	97000000 	strls	r0, [r0, -r0]
     dc0:	09000001 	stmdbeq	r0, {r0}
     dc4:	00000050 	andeq	r0, r0, r0, asr r0
     dc8:	ae030002 	worge	wr0, wr3, wr2
     dcc:	03000008 	movweq	r0, #8
     dd0:	00009a5f 	andeq	r9, r0, pc, asr sl
     dd4:	00000a00 	andeq	r0, r0, r0, lsl #20
     dd8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
     ddc:	00450101 	subeq	r0, r5, r1, lsl #2
     de0:	65dc0000 	ldrbvs	r0, [ip]
     de4:	65f84000 	ldrbvs	r4, [r8]!
     de8:	030e4000 	movweq	r4, #57344	; 0xe000
     dec:	01de0000 	bicseq	r0, lr, r0
     df0:	620b0000 	andvs	r0, fp, #0
     df4:	01000004 	tsteq	r0, r4
     df8:	00450188 	subeq	r0, r5, r8, lsl #3
     dfc:	91020000 	mrsls	r0, (UNDEF: 2)
     e00:	084b0c6c 	stmdaeq	fp, {r2, r3, r5, r6, sl, fp}^
     e04:	8a010000 	bhi	40e0c <MV_CPU_LE+0x40e0b>
     e08:	00004501 	andeq	r4, r0, r1, lsl #10
     e0c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     e10:	bb010d00 	bllt	44218 <MV_CPU_LE+0x44217>
     e14:	02000008 	andeq	r0, r0, #8
     e18:	65f8015a 	ldrbvs	r0, [r8, #346]!	; 0x15a
     e1c:	66c44000 	strbvs	r4, [r4], r0
     e20:	03464000 	movteq	r4, #24576	; 0x6000
     e24:	02300000 	eorseq	r0, r0, #0
     e28:	5c0e0000 	wstrbpl	wr0, [lr]
     e2c:	02000008 	andeq	r0, r0, #8
     e30:	0000455c 	andeq	r4, r0, ip, asr r5
     e34:	68910200 	ldmvs	r1, {r9}
     e38:	0008940e 	andeq	r9, r8, lr, lsl #8
     e3c:	305d0200 	subscc	r0, sp, r0, lsl #4
     e40:	02000002 	andeq	r0, r0, #2
     e44:	500e6c91 	mulpl	lr, r1, ip
     e48:	02000008 	andeq	r0, r0, #8
     e4c:	0000455e 	andeq	r4, r0, lr, asr r5
     e50:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     e54:	0008c60e 	andeq	ip, r8, lr, lsl #12
     e58:	455f0200 	ldrbmi	r0, [pc, #-512]	; c60 <MV_CPU_LE+0xc5f>
     e5c:	02000000 	andeq	r0, r0, #0
     e60:	0f007091 	svceq	0x00007091
     e64:	00023604 	andeq	r3, r2, r4, lsl #12
     e68:	01971000 	orrseq	r1, r7, r0
     e6c:	010d0000 	mrseq	r0, (UNDEF: 13)
     e70:	0000089e 	muleq	r0, lr, r8
     e74:	c4019c02 	strgt	r9, [r1], #-3074	; 0xc02
     e78:	f8400066 			; <UNDEFINED> instruction: 0xf8400066
     e7c:	7e400066 	wcmpeqhvc	wr0, wr0, wr6
     e80:	6f000003 	svcvs	0x00000003
     e84:	11000002 	tstne	r0, r2
     e88:	9c020063 	wstrbls	wr0, [r2], #-99
     e8c:	0000002c 	andeq	r0, r0, ip, lsr #32
     e90:	0e6f9102 	wmacseq	wr9, wr15, wr2
     e94:	00000894 	muleq	r0, r4, r8
     e98:	02309e02 	eorseq	r9, r0, #32
     e9c:	91020000 	mrsls	r0, (UNDEF: 2)
     ea0:	010d0074 	tsteq	sp, r4, ror r0
     ea4:	0000088a 	andeq	r0, r0, sl, lsl #17
     ea8:	f801ad02 			; <UNDEFINED> instruction: 0xf801ad02
     eac:	38400066 	stmdacc	r0, {r1, r2, r5, r6}^
     eb0:	b6400067 	strblt	r0, [r0], -r7, rrx
     eb4:	97000003 	strls	r0, [r0, -r3]
     eb8:	11000002 	tstne	r0, r2
     ebc:	00727473 	rsbseq	r7, r2, r3, ror r4
     ec0:	0297ad02 	addseq	sl, r7, #128	; 0x80
     ec4:	91020000 	mrsls	r0, (UNDEF: 2)
     ec8:	040f0074 	streq	r0, [pc], #-116	; ed0 <MV_CPU_LE+0xecf>
     ecc:	00000025 	andeq	r0, r0, r5, lsr #32
     ed0:	0848010d 	stmdaeq	r8, {r0, r2, r3, r8}^
     ed4:	c7020000 	strgt	r0, [r2, -r0]
     ed8:	00673801 	rsbeq	r3, r7, r1, lsl #16
     edc:	0067ee40 	rsbeq	lr, r7, r0, asr #28
     ee0:	0003ee40 	andeq	lr, r3, r0, asr #28
     ee4:	00030900 	andeq	r0, r3, r0, lsl #18
     ee8:	08f61200 	ldmeq	r6!, {r9, ip}^
     eec:	c7020000 	strgt	r0, [r2, -r0]
     ef0:	00000045 	andeq	r0, r0, r5, asr #32
     ef4:	125c9102 	subsne	r9, ip, #-2147483648	; 0x80000000
     ef8:	000008ef 	andeq	r0, r0, pc, ror #17
     efc:	0045c702 	subeq	ip, r5, r2, lsl #14
     f00:	91020000 	mrsls	r0, (UNDEF: 2)
     f04:	74731358 	ldrbtvc	r1, [r3], #-856	; 0x358
     f08:	ca020072 	bgt	810d8 <MV_CPU_LE+0x810d7>
     f0c:	00000309 	andeq	r0, r0, r9, lsl #6
     f10:	13609102 	cmnne	r0, #-2147483648	; 0x80000000
     f14:	cb020069 	blgt	810c0 <MV_CPU_LE+0x810bf>
     f18:	00000045 	andeq	r0, r0, r5, asr #32
     f1c:	0e749102 	wmacszeq	wr9, wr4, wr2
     f20:	000008a9 	andeq	r0, r0, r9, lsr #17
     f24:	0045cb02 	subeq	ip, r5, r2, lsl #22
     f28:	91020000 	mrsls	r0, (UNDEF: 2)
     f2c:	08770e70 	ldmdaeq	r7!, {r4, r5, r6, r9, sl, fp}^
     f30:	cb020000 	blgt	80f38 <MV_CPU_LE+0x80f37>
     f34:	00000045 	andeq	r0, r0, r5, asr #32
     f38:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     f3c:	00002508 	andeq	r2, r0, r8, lsl #10
     f40:	00031900 	andeq	r1, r3, r0, lsl #18
     f44:	00500900 	subseq	r0, r0, r0, lsl #18
     f48:	000a0000 	andeq	r0, sl, r0
     f4c:	08d20114 	ldmeq	r2, {r2, r4, r8}^
     f50:	0a020000 	beq	80f58 <MV_CPU_LE+0x80f57>
     f54:	002c0101 	eoreq	r0, ip, r1, lsl #2
     f58:	67f00000 	ldrbvs	r0, [r0, r0]!
     f5c:	68224000 	stmdavs	r2!, {lr}
     f60:	04264000 	strteq	r4, [r6]
     f64:	03470000 	movteq	r0, #28672	; 0x7000
     f68:	940c0000 	strls	r0, [ip]
     f6c:	02000008 	andeq	r0, r0, #8
     f70:	0230010d 	eorseq	r0, r0, #1073741827	; 0x40000003
     f74:	91020000 	mrsls	r0, (UNDEF: 2)
     f78:	01150074 	tsteq	r5, r4, ror r0
     f7c:	00000862 	andeq	r0, r0, r2, ror #16
     f80:	01012602 	tsteq	r1, r2, lsl #12
     f84:	00000081 	andeq	r0, r0, r1, lsl #1
     f88:	40006824 	andmi	r6, r0, r4, lsr #16
     f8c:	4000684a 	andmi	r6, r0, sl, asr #16
     f90:	0000045e 	andeq	r0, r0, lr, asr r4
     f94:	0008940c 	andeq	r9, r8, ip, lsl #8
     f98:	01290200 	teqeq	r9, r0, lsl #4
     f9c:	00000230 	andeq	r0, r0, r0, lsr r2
     fa0:	00749102 	rsbseq	r9, r4, r2, lsl #2
     fa4:	00083800 	andeq	r3, r8, r0, lsl #16
     fa8:	9d000200 	stcls	2, cr0, [r0]
     fac:	04000003 	streq	r0, [r0], #-3
     fb0:	00047101 	andeq	r7, r4, r1, lsl #2
     fb4:	0a0e0100 	beq	3813bc <MV_CPU_LE+0x3813bb>
     fb8:	03fd0000 	mvnseq	r0, #0
     fbc:	684c0000 	stmdavs	ip, {}^	; <UNPREDICTABLE>
     fc0:	761c4000 	ldrvc	r4, [ip], -r0
     fc4:	074a4000 	strbeq	r4, [sl, -r0]
     fc8:	65020000 	strvs	r0, [r2]
     fcc:	01000001 	tsteq	r0, r1
     fd0:	000030a7 	andeq	r3, r0, r7, lsr #1
     fd4:	08010300 	stmdaeq	r1, {r8, r9}
     fd8:	00000333 	andeq	r0, r0, r3, lsr r3
     fdc:	00047d02 	andeq	r7, r4, r2, lsl #26
     fe0:	42a80100 	adcmi	r0, r8, #0
     fe4:	03000000 	movweq	r0, #0
     fe8:	032a0801 	teqeq	sl, #65536	; 0x10000
     fec:	04040000 	streq	r0, [r4]
     ff0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
     ff4:	038f0200 	orreq	r0, pc, #0
     ff8:	ab010000 	blge	41000 <MV_CPU_LE+0x40fff>
     ffc:	0000005b 	andeq	r0, r0, fp, asr r0
    1000:	77070403 	strvc	r0, [r7, -r3, lsl #8]
    1004:	03000003 	movweq	r0, #3
    1008:	008f0502 	addeq	r0, pc, r2, lsl #10
    100c:	02030000 	andeq	r0, r3, #0
    1010:	0003e307 	andeq	lr, r3, r7, lsl #6
    1014:	05080300 	streq	r0, [r8, #-768]	; 0x300
    1018:	000001f5 	strdeq	r0, [r0], -r5
    101c:	6d070803 	stcvs	8, cr0, [r7, #-12]
    1020:	03000003 	movweq	r0, #3
    1024:	01fa0504 	mvnseq	r0, r4, lsl #10
    1028:	04030000 	streq	r0, [r3]
    102c:	00037207 	andeq	r7, r3, r7, lsl #4
    1030:	00130200 	andseq	r0, r3, r0, lsl #4
    1034:	bb010000 	bllt	4103c <MV_CPU_LE+0x4103b>
    1038:	00000049 	andeq	r0, r0, r9, asr #32
    103c:	00057b02 	andeq	r7, r5, r2, lsl #22
    1040:	49bc0100 	ldmibmi	ip!, {r8}
    1044:	03000000 	movweq	r0, #0
    1048:	01b70404 			; <UNDEFINED> instruction: 0x01b70404
    104c:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    1050:	0004e904 	andeq	lr, r4, r4, lsl #18
    1054:	0b0e0200 	bleq	38185c <MV_CPU_LE+0x38185b>
    1058:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    105c:	00000050 	andeq	r0, r0, r0, asr r0
    1060:	00370405 	eorseq	r0, r7, r5, lsl #8
    1064:	01060000 	mrseq	r0, (UNDEF: 6)
    1068:	00d6d103 	sbcseq	sp, r6, r3, lsl #2
    106c:	53070000 	movwpl	r0, #28672	; 0x7000
    1070:	00000001 	andeq	r0, r0, r1
    1074:	00035107 	andeq	r5, r3, r7, lsl #2
    1078:	02000100 	andeq	r0, r0, #0
    107c:	0000023b 	andeq	r0, r0, fp, lsr r2
    1080:	00c1d403 	sbceq	sp, r1, r3, lsl #8
    1084:	60080000 	andvs	r0, r8, r0
    1088:	08000002 	stmdaeq	r0, {r1}
    108c:	010ad703 	tsteq	sl, r3, lsl #14
    1090:	40090000 	andmi	r0, r9, r0
    1094:	03000001 	movweq	r0, #1
    1098:	000050d8 	ldrdeq	r5, [r0], -r8
    109c:	00230200 	eoreq	r0, r3, r0, lsl #4
    10a0:	00038409 	andeq	r8, r3, r9, lsl #8
    10a4:	d6d90300 	ldrble	r0, [r9], r0, lsl #6
    10a8:	02000000 	andeq	r0, r0, #0
    10ac:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    10b0:	00000338 	andeq	r0, r0, r8, lsr r3
    10b4:	00e1da03 	rsceq	sp, r1, r3, lsl #20
    10b8:	e0080000 	and	r0, r8, r0
    10bc:	14000005 	strne	r0, [r0], #-5
    10c0:	015add03 	cmpeq	sl, r3, lsl #26
    10c4:	8a090000 	bhi	2410cc <MV_CPU_LE+0x2410cb>
    10c8:	03000004 	movweq	r0, #4
    10cc:	00010ade 	ldrdeq	r0, [r1], -lr
    10d0:	00230200 	eoreq	r0, r3, r0, lsl #4
    10d4:	00011209 	andeq	r1, r1, r9, lsl #4
    10d8:	97df0300 	ldrbls	r0, [pc, r0, lsl #6]
    10dc:	02000000 	andeq	r0, r0, #0
    10e0:	6c090823 	stcvs	8, cr0, [r9], {35}	; 0x23
    10e4:	03000002 	movweq	r0, #2
    10e8:	000050e0 	andeq	r5, r0, r0, ror #1
    10ec:	0c230200 	stceq	2, cr0, [r3]
    10f0:	00022f09 	andeq	r2, r2, r9, lsl #30
    10f4:	97e10300 	strbls	r0, [r1, r0, lsl #6]!
    10f8:	02000000 	andeq	r0, r0, #0
    10fc:	02001023 	andeq	r1, r0, #35	; 0x23
    1100:	000001dc 	ldrdeq	r0, [r0], -ip
    1104:	0115e203 	tsteq	r5, r3, lsl #4
    1108:	fa0a0000 	blx	281110 <MV_CPU_LE+0x28110f>
    110c:	01000009 	tsteq	r0, r9
    1110:	017ee503 	cmneq	lr, r3, lsl #10
    1114:	cc070000 	wstrbgt	wr0, [r7]
    1118:	0000000a 	andeq	r0, r0, sl
    111c:	000b1407 	andeq	r1, fp, r7, lsl #8
    1120:	02000100 	andeq	r0, r0, #0
    1124:	00000b21 	andeq	r0, r0, r1, lsr #22
    1128:	0165e803 	cmneq	r5, r3, lsl #16
    112c:	000b0000 	andeq	r0, fp, r0
    1130:	01000000 	mrseq	r0, (UNDEF: 0)
    1134:	50010182 	andpl	r0, r1, r2, lsl #3
    1138:	4c000000 	wstrbmi	wr0, [r0]
    113c:	68400068 	stmdavs	r0, {r3, r5, r6}^
    1140:	96400068 	strbls	r0, [r0], -r8, rrx
    1144:	c5000004 	strgt	r0, [r0, #-4]
    1148:	0c000001 	wstrbeq	wr0, [r0], #-1
    114c:	00000462 	andeq	r0, r0, r2, ror #8
    1150:	50018201 	andpl	r8, r1, r1, lsl #4
    1154:	02000000 	andeq	r0, r0, #0
    1158:	4b0d6c91 	blmi	35c3a4 <MV_CPU_LE+0x35c3a3>
    115c:	01000008 	tsteq	r0, r8
    1160:	00500184 	subseq	r0, r0, r4, lsl #3
    1164:	91020000 	mrsls	r0, (UNDEF: 2)
    1168:	bd0e0074 	wstrblt	wr0, [lr, #-116]
    116c:	0200000a 	andeq	r0, r0, #10
    1170:	00970154 	addseq	r0, r7, r4, asr r1
    1174:	68680000 	stmdavs	r8!, {}^	; <UNPREDICTABLE>
    1178:	68924000 	ldmvs	r2, {lr}
    117c:	04ce4000 	strbeq	r4, [lr]
    1180:	01fe0000 	mvnseq	r0, r0
    1184:	350f0000 	strcc	r0, [pc, #0]	; 118c <MV_CPU_LE+0x118b>
    1188:	0200000b 	andeq	r0, r0, #11
    118c:	00005054 	andeq	r5, r0, r4, asr r0
    1190:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1194:	00092b0f 	andeq	r2, r9, pc, lsl #22
    1198:	fe540200 	cdp2	2, 5, cr0, cr4, cr0, {0}
    119c:	02000001 	andeq	r0, r0, #1
    11a0:	05007091 	streq	r7, [r0, #-145]	; 0x91
    11a4:	00020404 	andeq	r0, r2, r4, lsl #8
    11a8:	00251000 	eoreq	r1, r5, r0
    11ac:	01110000 	tsteq	r1, r0
    11b0:	000009c9 	andeq	r0, r0, r9, asr #19
    11b4:	8c017302 	stchi	3, cr7, [r1], {2}
    11b8:	94000000 	strls	r0, [r0]
    11bc:	a0400068 	subge	r0, r0, r8, rrx
    11c0:	06400069 	strbeq	r0, [r0], -r9, rrx
    11c4:	5f000005 	svcpl	0x00000005
    11c8:	0f000002 	svceq	0x00000002
    11cc:	000009c1 	andeq	r0, r0, r1, asr #19
    11d0:	00377302 	eorseq	r7, r7, r2, lsl #6
    11d4:	91020000 	mrsls	r0, (UNDEF: 2)
    11d8:	0ab31267 	beq	fecc5b7c <SerdesInfoTbl+0xbecbdbbc>
    11dc:	75020000 	strvc	r0, [r2]
    11e0:	00000097 	muleq	r0, r7, r0
    11e4:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
    11e8:	00000b35 	andeq	r0, r0, r5, lsr fp
    11ec:	00507602 	subseq	r7, r0, r2, lsl #12
    11f0:	91020000 	mrsls	r0, (UNDEF: 2)
    11f4:	094a1270 	stmdbeq	sl, {r4, r5, r6, r9, ip}^
    11f8:	76020000 	strvc	r0, [r2], -r0
    11fc:	00000050 	andeq	r0, r0, r0, asr r0
    1200:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1204:	0a280111 	beq	a01650 <MV_CPU_LE+0xa0164f>
    1208:	ad020000 	wstrbge	wr0, [r2]
    120c:	00008c01 	andeq	r8, r0, r1, lsl #24
    1210:	0069a000 	rsbeq	sl, r9, r0
    1214:	006a9840 	rsbeq	r9, sl, r0, asr #16
    1218:	00053e40 	andeq	r3, r5, r0, asr #28
    121c:	0002a700 	andeq	sl, r2, r0, lsl #14
    1220:	09c10f00 	stmibeq	r1, {r8, r9, sl, fp}^
    1224:	ad020000 	wstrbge	wr0, [r2]
    1228:	00000037 	andeq	r0, r0, r7, lsr r0
    122c:	126f9102 	rsbne	r9, pc, #-2147483648	; 0x80000000
    1230:	00000b35 	andeq	r0, r0, r5, lsr fp
    1234:	0050af02 	subseq	sl, r0, r2, lsl #30
    1238:	91020000 	mrsls	r0, (UNDEF: 2)
    123c:	094a1274 	stmdbeq	sl, {r2, r4, r5, r6, r9, ip}^
    1240:	af020000 	svcge	0x00020000
    1244:	00000050 	andeq	r0, r0, r0, asr r0
    1248:	00709102 	rsbseq	r9, r0, r2, lsl #2
    124c:	000aa40e 	andeq	sl, sl, lr, lsl #8
    1250:	01df0200 	bicseq	r0, pc, r0, lsl #4
    1254:	00000097 	muleq	r0, r7, r0
    1258:	40006a98 	mulmi	r0, r8, sl
    125c:	40006ae0 	andmi	r6, r0, r0, ror #21
    1260:	00000576 	andeq	r0, r0, r6, ror r5
    1264:	000002e0 	andeq	r0, r0, r0, ror #5
    1268:	0009c10f 	andeq	ip, r9, pc, lsl #2
    126c:	37df0200 	ldrbcc	r0, [pc, r0, lsl #4]
    1270:	02000000 	andeq	r0, r0, #0
    1274:	4a126f91 	bmi	49d0c0 <MV_CPU_LE+0x49d0bf>
    1278:	02000009 	andeq	r0, r0, #9
    127c:	000050e1 	andeq	r5, r0, r1, ror #1
    1280:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1284:	0a891300 	beq	fe245e8c <SerdesInfoTbl+0xbe23decc>
    1288:	fe020000 	cdp2	0, 0, cr0, cr2, cr0, {0}
    128c:	006ae001 	rsbeq	lr, sl, r1
    1290:	006b3a40 	rsbeq	r3, fp, r0, asr #20
    1294:	0005ae40 	andeq	sl, r5, r0, asr #28
    1298:	00031600 	andeq	r1, r3, r0, lsl #12
    129c:	09c10f00 	stmibeq	r1, {r8, r9, sl, fp}^
    12a0:	fe020000 	cdp2	0, 0, cr0, cr2, cr0, {0}
    12a4:	00000037 	andeq	r0, r0, r7, lsr r0
    12a8:	0d6f9102 	wstrdeq	wr9, [pc, #-8]!
    12ac:	0000094a 	andeq	r0, r0, sl, asr #18
    12b0:	50010002 	andpl	r0, r1, r2
    12b4:	02000000 	andeq	r0, r0, #0
    12b8:	14007491 	strne	r7, [r0], #-1169	; 0x491
    12bc:	00000af6 	strdeq	r0, [r0], -r6
    12c0:	01011d02 	tsteq	r1, r2, lsl #26
    12c4:	40006b3c 	andmi	r6, r0, ip, lsr fp
    12c8:	40006b8e 	andmi	r6, r0, lr, lsl #23
    12cc:	000005e6 	andeq	r0, r0, r6, ror #11
    12d0:	0000034e 	andeq	r0, r0, lr, asr #6
    12d4:	0009c10c 	andeq	ip, r9, ip, lsl #2
    12d8:	011d0200 	tsteq	sp, r0, lsl #4
    12dc:	00000037 	andeq	r0, r0, r7, lsr r0
    12e0:	0d6f9102 	wstrdeq	wr9, [pc, #-8]!
    12e4:	0000094a 	andeq	r0, r0, sl, asr #18
    12e8:	50011f02 	andpl	r1, r1, r2, lsl #30
    12ec:	02000000 	andeq	r0, r0, #0
    12f0:	15007491 	strne	r7, [r0, #-1169]	; 0x491
    12f4:	0009ef01 	andeq	lr, r9, r1, lsl #30
    12f8:	01410200 	mrseq	r0, (UNDEF: 97)
    12fc:	00005001 	andeq	r5, r0, r1
    1300:	006b9000 	rsbeq	r9, fp, r0
    1304:	006d9c40 	rsbeq	r9, sp, r0, asr #24
    1308:	00061e40 	andeq	r1, r6, r0, asr #28
    130c:	00044a00 	andeq	r4, r4, r0, lsl #20
    1310:	09c10c00 	stmibeq	r1, {sl, fp}^
    1314:	41020000 	mrsmi	r0, (UNDEF: 2)
    1318:	00003701 	andeq	r3, r0, r1, lsl #14
    131c:	4f910200 	svcmi	0x00910200
    1320:	000ada0c 	andeq	sp, sl, ip, lsl #20
    1324:	01410200 	mrseq	r0, (UNDEF: 97)
    1328:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    132c:	0c489102 	wstrdeq	wr9, [r8], #-8
    1330:	00000a23 	andeq	r0, r0, r3, lsr #20
    1334:	50014102 	andpl	r4, r1, r2, lsl #2
    1338:	02000000 	andeq	r0, r0, #0
    133c:	b70c4491 			; <UNDEFINED> instruction: 0xb70c4491
    1340:	02000009 	andeq	r0, r0, #9
    1344:	044a0141 	strbeq	r0, [sl], #-321	; 0x141
    1348:	91020000 	mrsls	r0, (UNDEF: 2)
    134c:	0a390c40 	beq	e44454 <MV_CPU_LE+0xe44453>
    1350:	41020000 	mrsmi	r0, (UNDEF: 2)
    1354:	00009701 	andeq	r9, r0, r1, lsl #14
    1358:	00910200 	addseq	r0, r1, r0, lsl #4
    135c:	02006e16 	andeq	r6, r0, #352	; 0x160
    1360:	00500143 	subseq	r0, r0, r3, asr #2
    1364:	91020000 	mrsls	r0, (UNDEF: 2)
    1368:	006d1674 	rsbeq	r1, sp, r4, ror r6
    136c:	50014302 	andpl	r4, r1, r2, lsl #6
    1370:	02000000 	andeq	r0, r0, #0
    1374:	0d0d7091 	wstrbeq	wr7, [sp, #-145]
    1378:	02000001 	andeq	r0, r0, #1
    137c:	00500143 	subseq	r0, r0, r3, asr #2
    1380:	91020000 	mrsls	r0, (UNDEF: 2)
    1384:	0a820d54 	beq	fe0848dc <SerdesInfoTbl+0xbe07c91c>
    1388:	43020000 	movwmi	r0, #8192	; 0x2000
    138c:	00005001 	andeq	r5, r0, r1
    1390:	50910200 	addspl	r0, r1, r0, lsl #4
    1394:	000ae40d 	andeq	lr, sl, sp, lsl #8
    1398:	01430200 	mrseq	r0, (UNDEF: 99)
    139c:	00000050 	andeq	r0, r0, r0, asr r0
    13a0:	0d6c9102 	wstrdeq	wr9, [ip, #-8]!
    13a4:	00000a9e 	muleq	r0, lr, sl
    13a8:	50014402 	andpl	r4, r1, r2, lsl #8
    13ac:	02000000 	andeq	r0, r0, #0
    13b0:	910d5891 			; <UNDEFINED> instruction: 0x910d5891
    13b4:	02000009 	andeq	r0, r0, #9
    13b8:	00500145 	subseq	r0, r0, r5, asr #2
    13bc:	91020000 	mrsls	r0, (UNDEF: 2)
    13c0:	09a40d68 	stmibeq	r4!, {r3, r5, r6, r8, sl, fp}
    13c4:	45020000 	strmi	r0, [r2]
    13c8:	00005001 	andeq	r5, r0, r1
    13cc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    13d0:	000aee0d 	andeq	lr, sl, sp, lsl #28
    13d4:	01450200 	mrseq	r0, (UNDEF: 101)
    13d8:	00000050 	andeq	r0, r0, r0, asr r0
    13dc:	16609102 	strbtne	r9, [r0], -r2, lsl #2
    13e0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    13e4:	50014502 	andpl	r4, r1, r2, lsl #10
    13e8:	02000000 	andeq	r0, r0, #0
    13ec:	05005c91 	streq	r5, [r0, #-3217]	; 0xc91
    13f0:	00010a04 	andeq	r0, r1, r4, lsl #20
    13f4:	09ac0b00 	stmibeq	ip!, {r8, r9, fp}
    13f8:	a2020000 	andge	r0, r2, #0
    13fc:	00500101 	subseq	r0, r0, r1, lsl #2
    1400:	6d9c0000 	wldrbvs	wr0, [ip]
    1404:	6dce4000 	wstrhvs	wr4, [lr]
    1408:	06584000 	ldrbeq	r4, [r8], -r0
    140c:	047d0000 	ldrbteq	r0, [sp]
    1410:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    1414:	02000009 	andeq	r0, r0, #9
    1418:	003701a2 	eorseq	r0, r7, r2, lsr #3
    141c:	91020000 	mrsls	r0, (UNDEF: 2)
    1420:	04140077 	ldreq	r0, [r4], #-119	; 0x77
    1424:	0200000b 	andeq	r0, r0, #11
    1428:	d00101b8 			; <UNDEFINED> instruction: 0xd00101b8
    142c:	0640006d 	strbeq	r0, [r0], -sp, rrx
    1430:	9040006e 	subls	r0, r0, lr, rrx
    1434:	a6000006 	strge	r0, [r0], -r6
    1438:	0c000004 	wstrbeq	wr0, [r0], #-4
    143c:	000009c1 	andeq	r0, r0, r1, asr #19
    1440:	3701b802 	strcc	fp, [r1, -r2, lsl #16]
    1444:	02000000 	andeq	r0, r0, #0
    1448:	15007791 	strne	r7, [r0, #-1937]	; 0x791
    144c:	000a7401 	andeq	r7, sl, r1, lsl #8
    1450:	01d90200 	bicseq	r0, r9, r0, lsl #4
    1454:	00008c01 	andeq	r8, r0, r1, lsl #24
    1458:	006e0800 	rsbeq	r0, lr, r0, lsl #16
    145c:	006e5840 	rsbeq	r5, lr, r0, asr #16
    1460:	0006c840 	andeq	ip, r6, r0, asr #16
    1464:	0004f200 	andeq	pc, r4, r0, lsl #4
    1468:	09c10c00 	stmibeq	r1, {sl, fp}^
    146c:	d9020000 	stmdble	r2, {}	; <UNPREDICTABLE>
    1470:	00003701 	andeq	r3, r0, r1, lsl #14
    1474:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1478:	0009b70c 	andeq	fp, r9, ip, lsl #14
    147c:	01d90200 	bicseq	r0, r9, r0, lsl #4
    1480:	0000044a 	andeq	r0, r0, sl, asr #8
    1484:	0c709102 	wldrdeq	wr9, [r0], #-8
    1488:	00000b2d 	andeq	r0, r0, sp, lsr #22
    148c:	7e01d902 	cdpvc	9, 0, cr13, cr1, cr2, {0}
    1490:	02000001 	andeq	r0, r0, #1
    1494:	0b007691 	bleq	1eee0 <MV_CPU_LE+0x1eedf>
    1498:	0000096a 	andeq	r0, r0, sl, ror #18
    149c:	01020302 	tsteq	r2, r2, lsl #6
    14a0:	0000008c 	andeq	r0, r0, ip, lsl #1
    14a4:	40006e58 	andmi	r6, r0, r8, asr lr
    14a8:	40006fd4 	ldrdmi	r6, [r0], -r4
    14ac:	00000700 	andeq	r0, r0, r0, lsl #14
    14b0:	0000055b 	andeq	r0, r0, fp, asr r5
    14b4:	0009c10c 	andeq	ip, r9, ip, lsl #2
    14b8:	02030200 	andeq	r0, r3, #0
    14bc:	00000037 	andeq	r0, r0, r7, lsr r0
    14c0:	0c6f9102 	wstrdeq	wr9, [pc], #-8
    14c4:	00000a4b 	andeq	r0, r0, fp, asr #20
    14c8:	50020302 	andpl	r0, r2, r2, lsl #6
    14cc:	02000000 	andeq	r0, r0, #0
    14d0:	2d0c6891 	stccs	8, cr6, [ip, #-580]	; 0xfffffdbc
    14d4:	0200000b 	andeq	r0, r0, #11
    14d8:	017e0203 	cmneq	lr, r3, lsl #4
    14dc:	91020000 	mrsls	r0, (UNDEF: 2)
    14e0:	6176166e 	cmnvs	r6, lr, ror #12
    14e4:	0502006c 	streq	r0, [r2, #-108]	; 0x6c
    14e8:	00005002 	andeq	r5, r0, r2
    14ec:	70910200 	addsvc	r0, r1, r0, lsl #4
    14f0:	000b350d 	andeq	r3, fp, sp, lsl #10
    14f4:	02050200 	andeq	r0, r5, #0
    14f8:	00000050 	andeq	r0, r0, r0, asr r0
    14fc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1500:	00091b0b 	andeq	r1, r9, fp, lsl #22
    1504:	025a0200 	subseq	r0, sl, #0
    1508:	00008c01 	andeq	r8, r0, r1, lsl #24
    150c:	006fd400 	rsbeq	sp, pc, r0, lsl #8
    1510:	0070a840 	rsbseq	sl, r0, r0, asr #16
    1514:	00073840 	andeq	r3, r7, r0, asr #16
    1518:	0005c400 	andeq	ip, r5, r0, lsl #8
    151c:	09c10c00 	stmibeq	r1, {sl, fp}^
    1520:	5a020000 	bpl	81528 <MV_CPU_LE+0x81527>
    1524:	00003702 	andeq	r3, r0, r2, lsl #14
    1528:	6f910200 	svcvs	0x00910200
    152c:	000a4b0c 	andeq	r4, sl, ip, lsl #22
    1530:	025a0200 	subseq	r0, sl, #0
    1534:	00000050 	andeq	r0, r0, r0, asr r0
    1538:	0c689102 	wstrdeq	wr9, [r8], #-8
    153c:	00000b2d 	andeq	r0, r0, sp, lsr #22
    1540:	7e025a02 	vmlavc.f32	s10, s4, s4
    1544:	02000001 	andeq	r0, r0, #1
    1548:	76166e91 			; <UNDEFINED> instruction: 0x76166e91
    154c:	02006c61 	andeq	r6, r0, #24832	; 0x6100
    1550:	0050025c 	subseq	r0, r0, ip, asr r2
    1554:	91020000 	mrsls	r0, (UNDEF: 2)
    1558:	0b350d70 	bleq	d44b20 <MV_CPU_LE+0xd44b1f>
    155c:	5c020000 	wstrbpl	wr0, [r2]
    1560:	00005002 	andeq	r5, r0, r2
    1564:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1568:	090a0b00 	stmdbeq	sl, {r8, r9, fp}
    156c:	9a020000 	bls	81574 <MV_CPU_LE+0x81573>
    1570:	008c0102 	addeq	r0, ip, r2, lsl #2
    1574:	70a80000 	adcvc	r0, r8, r0
    1578:	71c04000 	bicvc	r4, r0, r0
    157c:	07704000 	ldrbeq	r4, [r0, -r0]!
    1580:	063c0000 	ldrteq	r0, [ip], -r0
    1584:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    1588:	02000009 	andeq	r0, r0, #9
    158c:	0037029a 	mlaseq	r7, sl, r2, r0
    1590:	91020000 	mrsls	r0, (UNDEF: 2)
    1594:	0a970c67 	beq	fe5c4738 <SerdesInfoTbl+0xbe5bc778>
    1598:	9a020000 	bls	815a0 <MV_CPU_LE+0x8159f>
    159c:	0000bb02 	andeq	fp, r0, r2, lsl #22
    15a0:	60910200 	addsvs	r0, r1, r0, lsl #4
    15a4:	0009870c 	andeq	r8, r9, ip, lsl #14
    15a8:	029a0200 	addseq	r0, sl, #0
    15ac:	00000050 	andeq	r0, r0, r0, asr r0
    15b0:	0d5c9102 	wldrdeq	wr9, [ip, #-8]
    15b4:	00000b35 	andeq	r0, r0, r5, lsr fp
    15b8:	50029c02 	andpl	r9, r2, r2, lsl #24
    15bc:	02000000 	andeq	r0, r0, #0
    15c0:	4a0d7491 	bmi	35e80c <MV_CPU_LE+0x35e80b>
    15c4:	02000009 	andeq	r0, r0, #9
    15c8:	0050029c 			; <UNDEFINED> instruction: 0x0050029c
    15cc:	91020000 	mrsls	r0, (UNDEF: 2)
    15d0:	097b0d6c 	ldmdbeq	fp!, {r2, r3, r5, r6, r8, sl, fp}^
    15d4:	9c020000 	wstrbls	wr0, [r2]
    15d8:	00005002 	andeq	r5, r0, r2
    15dc:	70910200 	addsvc	r0, r1, r0, lsl #4
    15e0:	0a590b00 	beq	16441e8 <MV_CPU_LE+0x16441e7>
    15e4:	e5020000 	str	r0, [r2]
    15e8:	008c0102 	addeq	r0, ip, r2, lsl #2
    15ec:	71c00000 	bicvc	r0, r0, r0
    15f0:	73384000 	teqvc	r8, #0
    15f4:	07a84000 	streq	r4, [r8, r0]!
    15f8:	06b40000 	ldrteq	r0, [r4], r0
    15fc:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    1600:	02000009 	andeq	r0, r0, #9
    1604:	003702e5 	eorseq	r0, r7, r5, ror #5
    1608:	91020000 	mrsls	r0, (UNDEF: 2)
    160c:	0a970c67 	beq	fe5c47b0 <SerdesInfoTbl+0xbe5bc7f0>
    1610:	e5020000 	str	r0, [r2]
    1614:	0000bb02 	andeq	fp, r0, r2, lsl #22
    1618:	60910200 	addsvs	r0, r1, r0, lsl #4
    161c:	0009870c 	andeq	r8, r9, ip, lsl #14
    1620:	02e50200 	rsceq	r0, r5, #0
    1624:	00000050 	andeq	r0, r0, r0, asr r0
    1628:	0d5c9102 	wldrdeq	wr9, [ip, #-8]
    162c:	00000b35 	andeq	r0, r0, r5, lsr fp
    1630:	5002e702 	andpl	lr, r2, r2, lsl #14
    1634:	02000000 	andeq	r0, r0, #0
    1638:	4a0d7491 	bmi	35e884 <MV_CPU_LE+0x35e883>
    163c:	02000009 	andeq	r0, r0, #9
    1640:	005002e7 	subseq	r0, r0, r7, ror #5
    1644:	91020000 	mrsls	r0, (UNDEF: 2)
    1648:	093e0d6c 	ldmdbeq	lr!, {r2, r3, r5, r6, r8, sl, fp}
    164c:	e7020000 	str	r0, [r2, -r0]
    1650:	00005002 	andeq	r5, r0, r2
    1654:	70910200 	addsvc	r0, r1, r0, lsl #4
    1658:	09580b00 	ldmdbeq	r8, {r8, r9, fp}^
    165c:	34020000 	strcc	r0, [r2]
    1660:	008c0103 	addeq	r0, ip, r3, lsl #2
    1664:	73380000 	teqvc	r8, #0
    1668:	73904000 	orrsvc	r4, r0, #0
    166c:	07e04000 	strbeq	r4, [r0, r0]!
    1670:	071d0000 	ldreq	r0, [sp, -r0]
    1674:	c10c0000 	mrsgt	r0, (UNDEF: 12)
    1678:	02000009 	andeq	r0, r0, #9
    167c:	00370334 	eorseq	r0, r7, r4, lsr r3
    1680:	91020000 	mrsls	r0, (UNDEF: 2)
    1684:	026c0c6f 	rsbeq	r0, ip, #28416	; 0x6f00
    1688:	34020000 	strcc	r0, [r2]
    168c:	00005003 	andeq	r5, r0, r3
    1690:	68910200 	ldmvs	r1, {r9}
    1694:	00022f0c 	andeq	r2, r2, ip, lsl #30
    1698:	03340200 	teqeq	r4, #0
    169c:	00000097 	muleq	r0, r7, r0
    16a0:	0d649102 	wstrdeq	wr9, [r4, #-8]!
    16a4:	0000094f 	andeq	r0, r0, pc, asr #18
    16a8:	1d033602 	stcne	6, cr3, [r3, #-8]
    16ac:	02000007 	andeq	r0, r0, #7
    16b0:	e70d7091 			; <UNDEFINED> instruction: 0xe70d7091
    16b4:	02000009 	andeq	r0, r0, #9
    16b8:	00500337 	subseq	r0, r0, r7, lsr r3
    16bc:	91020000 	mrsls	r0, (UNDEF: 2)
    16c0:	37170074 			; <UNDEFINED> instruction: 0x37170074
    16c4:	2d000000 	wstrbcs	wr0, [r0]
    16c8:	18000007 	stmdane	r0, {r0, r1, r2}
    16cc:	0000005b 	andeq	r0, r0, fp, asr r0
    16d0:	01150001 	tsteq	r5, r1
    16d4:	00000a69 	andeq	r0, r0, r9, ror #20
    16d8:	01036102 	tsteq	r3, r2, lsl #2
    16dc:	0000008c 	andeq	r0, r0, ip, lsl #1
    16e0:	40007390 	mulmi	r0, r0, r3
    16e4:	400074b0 			; <UNDEFINED> instruction: 0x400074b0
    16e8:	00000818 	andeq	r0, r0, r8, lsl r8
    16ec:	00000788 	andeq	r0, r0, r8, lsl #15
    16f0:	0009c10c 	andeq	ip, r9, ip, lsl #2
    16f4:	03610200 	cmneq	r1, #0
    16f8:	00000037 	andeq	r0, r0, r7, lsr r0
    16fc:	0c779102 	wldrdeq	wr9, [r7], #-8
    1700:	00000933 	andeq	r0, r0, r3, lsr r9
    1704:	88036102 	stmdahi	r3, {r1, r8, sp, lr}
    1708:	02000007 	andeq	r0, r0, #7
    170c:	970c7091 			; <UNDEFINED> instruction: 0x970c7091
    1710:	0200000a 	andeq	r0, r0, #10
    1714:	00bb0361 	adcseq	r0, fp, r1, ror #6
    1718:	91020000 	mrsls	r0, (UNDEF: 2)
    171c:	09870c6c 	stmibeq	r7, {r2, r3, r5, r6, sl, fp}
    1720:	61020000 	mrsvs	r0, (UNDEF: 2)
    1724:	00005003 	andeq	r5, r0, r3
    1728:	68910200 	ldmvs	r1, {r9}
    172c:	5a040500 	bpl	102b34 <MV_CPU_LE+0x102b33>
    1730:	15000001 	strne	r0, [r0, #-1]
    1734:	0009db01 	andeq	sp, r9, r1, lsl #22
    1738:	03aa0200 			; <UNDEFINED> instruction: 0x03aa0200
    173c:	00008c01 	andeq	r8, r0, r1, lsl #24
    1740:	0074b000 	rsbseq	fp, r4, r0
    1744:	00758840 	rsbseq	r8, r5, r0, asr #16
    1748:	00085040 	andeq	r5, r8, r0, asr #32
    174c:	0007e900 	andeq	lr, r7, r0, lsl #18
    1750:	09c10c00 	stmibeq	r1, {sl, fp}^
    1754:	aa020000 	bge	8175c <MV_CPU_LE+0x8175b>
    1758:	00003703 	andeq	r3, r0, r3, lsl #14
    175c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1760:	0009330c 	andeq	r3, r9, ip, lsl #6
    1764:	03aa0200 			; <UNDEFINED> instruction: 0x03aa0200
    1768:	00000788 	andeq	r0, r0, r8, lsl #15
    176c:	0c709102 	wldrdeq	wr9, [r0], #-8
    1770:	00000a97 	muleq	r0, r7, sl
    1774:	bb03aa02 	bllt	ebf84 <MV_CPU_LE+0xebf83>
    1778:	02000000 	andeq	r0, r0, #0
    177c:	870c6c91 			; <UNDEFINED> instruction: 0x870c6c91
    1780:	02000009 	andeq	r0, r0, #9
    1784:	005003aa 	subseq	r0, r0, sl, lsr #7
    1788:	91020000 	mrsls	r0, (UNDEF: 2)
    178c:	fe190068 	cdp2	0, 1, cr0, cr9, cr8, {3}
    1790:	02000008 	andeq	r0, r0, #8
    1794:	880103cf 	stmdahi	r1, {r0, r1, r2, r3, r6, r7, r8, r9}
    1798:	1c400075 	wstrhne	wr0, [r0], #-117
    179c:	88400076 	stmdahi	r0, {r1, r2, r4, r5, r6}^
    17a0:	0c000008 	wstrbeq	wr0, [r0], #-8
    17a4:	0000099c 	muleq	r0, ip, r9
    17a8:	5003cf02 	andpl	ip, r3, r2, lsl #30
    17ac:	02000000 	andeq	r0, r0, #0
    17b0:	5c0d6491 	stcpl	4, cr6, [sp], {145}	; 0x91
    17b4:	02000008 	andeq	r0, r0, #8
    17b8:	005003d1 	ldrsbeq	r0, [r0], #-49	; 0xffffffcf
    17bc:	91020000 	mrsls	r0, (UNDEF: 2)
    17c0:	0a210d70 	beq	844d88 <MV_CPU_LE+0x844d87>
    17c4:	d1020000 	mrsle	r0, (UNDEF: 2)
    17c8:	00005003 	andeq	r5, r0, r3
    17cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    17d0:	000a050d 	andeq	r0, sl, sp, lsl #10
    17d4:	03d10200 	bicseq	r0, r1, #0
    17d8:	00000050 	andeq	r0, r0, r0, asr r0
    17dc:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    17e0:	00010500 	andeq	r0, r1, r0, lsl #10
    17e4:	21000200 	mrscs	r0, R8_usr
    17e8:	04000005 	streq	r0, [r0], #-5
    17ec:	00047101 	andeq	r7, r4, r1, lsl #2
    17f0:	0b3d0100 	bleq	f41bf8 <MV_CPU_LE+0xf41bf7>
    17f4:	03fd0000 	mvnseq	r0, #0
    17f8:	761c0000 	ldrvc	r0, [ip], -r0
    17fc:	76b84000 	ldrtvc	r4, [r8], r0
    1800:	09ce4000 	stmibeq	lr, {lr}^
    1804:	01020000 	mrseq	r0, (UNDEF: 2)
    1808:	00000b53 	andeq	r0, r0, r3, asr fp
    180c:	73014001 	movwvc	r4, #4097	; 0x1001
    1810:	1c000000 	wstrbne	wr0, [r0]
    1814:	64400076 	strbvs	r0, [r0], #-118	; 0x76
    1818:	c0400076 	subgt	r0, r0, r6, ror r0
    181c:	73000008 	movwvc	r0, #8
    1820:	03000000 	movweq	r0, #0
    1824:	40010073 	andmi	r0, r1, r3, ror r0
    1828:	00000073 	andeq	r0, r0, r3, ror r0
    182c:	036c9102 	cmneq	ip, #-2147483648	; 0x80000000
    1830:	40010063 	andmi	r0, r1, r3, rrx
    1834:	00000075 	andeq	r0, r0, r5, ror r0
    1838:	03689102 	cmneq	r8, #-2147483648	; 0x80000000
    183c:	4001006e 	andmi	r0, r1, lr, rrx
    1840:	00000075 	andeq	r0, r0, r5, ror r0
    1844:	04649102 	strbteq	r9, [r4], #-258	; 0x102
    1848:	42010070 	andmi	r0, r1, #112	; 0x70
    184c:	0000007c 	andeq	r0, r0, ip, ror r0
    1850:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1854:	04060405 	streq	r0, [r6], #-1029	; 0x405
    1858:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
    185c:	82040700 	andhi	r0, r4, #0
    1860:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1864:	032a0801 	teqeq	sl, #65536	; 0x10000
    1868:	01020000 	mrseq	r0, (UNDEF: 2)
    186c:	00000b5a 	andeq	r0, r0, sl, asr fp
    1870:	73014801 	movwvc	r4, #6145	; 0x1801
    1874:	64000000 	strvs	r0, [r0]
    1878:	b8400076 	stmdalt	r0, {r1, r2, r4, r5, r6}^
    187c:	f8400076 			; <UNDEFINED> instruction: 0xf8400076
    1880:	e9000008 	stmdb	r0, {r3}
    1884:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1888:	00000b4e 	andeq	r0, r0, lr, asr #22
    188c:	00734801 	rsbseq	r4, r3, r1, lsl #16
    1890:	91020000 	mrsls	r0, (UNDEF: 2)
    1894:	7273036c 	rsbsvc	r0, r3, #-1342177279	; 0xb0000001
    1898:	48010063 	stmdami	r1, {r0, r1, r5, r6}
    189c:	000000e9 	andeq	r0, r0, r9, ror #1
    18a0:	03689102 	cmneq	r8, #-2147483648	; 0x80000000
    18a4:	4801006e 	stmdami	r1, {r1, r2, r3, r5, r6}
    18a8:	00000075 	andeq	r0, r0, r5, ror r0
    18ac:	04649102 	strbteq	r9, [r4], #-258	; 0x102
    18b0:	01007064 	tsteq	r0, r4, rrx
    18b4:	0000f04a 	andeq	pc, r0, sl, asr #32
    18b8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    18bc:	00707304 	rsbseq	r7, r0, r4, lsl #6
    18c0:	00fd4b01 	rscseq	r4, sp, r1, lsl #22
    18c4:	91020000 	mrsls	r0, (UNDEF: 2)
    18c8:	04070070 	streq	r0, [r7], #-112	; 0x70
    18cc:	000000ef 	andeq	r0, r0, pc, ror #1
    18d0:	f604070a 			; <UNDEFINED> instruction: 0xf604070a
    18d4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    18d8:	03330801 	teqeq	r3, #65536	; 0x10000
    18dc:	04070000 	streq	r0, [r7]
    18e0:	00000103 	andeq	r0, r0, r3, lsl #2
    18e4:	0000f60b 	andeq	pc, r0, fp, lsl #12
    18e8:	00fd0000 	rscseq	r0, sp, r0
    18ec:	00020000 	andeq	r0, r2, r0
    18f0:	000005ad 	andeq	r0, r0, sp, lsr #11
    18f4:	04710104 	ldrbteq	r0, [r1], #-260	; 0x104
    18f8:	66010000 	strvs	r0, [r1], -r0
    18fc:	fd00000b 	stc2	0, cr0, [r0, #-44]	; 0xffffffd4
    1900:	b8000003 	stmdalt	r0, {r0, r1}
    1904:	6c400076 	wstrhvs	wr0, [r0], #-118
    1908:	25400077 	strbcs	r0, [r0, #-119]	; 0x77
    190c:	0200000a 	andeq	r0, r0, #10
    1910:	03330801 	teqeq	r3, #65536	; 0x10000
    1914:	01020000 	mrseq	r0, (UNDEF: 2)
    1918:	00032a08 	andeq	r2, r3, r8, lsl #20
    191c:	05040300 	streq	r0, [r4, #-768]	; 0x300
    1920:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1924:	00038f04 	andeq	r8, r3, r4, lsl #30
    1928:	45ab0100 	strmi	r0, [fp, #256]!	; 0x100
    192c:	02000000 	andeq	r0, r0, #0
    1930:	03770704 	cmneq	r7, #1048576	; 0x100000
    1934:	02020000 	andeq	r0, r2, #0
    1938:	00008f05 	andeq	r8, r0, r5, lsl #30
    193c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1940:	000003e3 	andeq	r0, r0, r3, ror #7
    1944:	f5050802 			; <UNDEFINED> instruction: 0xf5050802
    1948:	02000001 	andeq	r0, r0, #1
    194c:	036d0708 	cmneq	sp, #2097152	; 0x200000
    1950:	04020000 	streq	r0, [r2]
    1954:	0001fa05 	andeq	pc, r1, r5, lsl #20
    1958:	07040200 	streq	r0, [r4, -r0, lsl #4]
    195c:	00000372 	andeq	r0, r0, r2, ror r3
    1960:	b7040402 	strlt	r0, [r4, -r2, lsl #8]
    1964:	02000001 	andeq	r0, r0, #1
    1968:	04e90408 	strbteq	r0, [r9], #1032	; 0x408
    196c:	00050000 	andeq	r0, r5, r0
    1970:	01000000 	mrseq	r0, (UNDEF: 0)
    1974:	3a010182 	bcc	41f84 <MV_CPU_LE+0x41f83>
    1978:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    197c:	d4400076 	strble	r0, [r0], #-118	; 0x76
    1980:	30400076 	subcc	r0, r0, r6, ror r0
    1984:	c0000009 	andgt	r0, r0, r9
    1988:	06000000 	streq	r0, [r0], -r0
    198c:	00000462 	andeq	r0, r0, r2, ror #8
    1990:	3a018201 	bcc	6219c <MV_CPU_LE+0x6219b>
    1994:	02000000 	andeq	r0, r0, #0
    1998:	4b076c91 	blmi	1dcbe4 <MV_CPU_LE+0x1dcbe3>
    199c:	01000008 	tsteq	r0, r8
    19a0:	003a0184 	eorseq	r0, sl, r4, lsl #3
    19a4:	91020000 	mrsls	r0, (UNDEF: 2)
    19a8:	01080074 	tsteq	r8, r4, ror r0
    19ac:	00000b8b 	andeq	r0, r0, fp, lsl #23
    19b0:	d4015802 	strle	r5, [r1], #-2050	; 0x802
    19b4:	6c400076 	wstrhvs	wr0, [r0], #-118
    19b8:	68400077 	stmdavs	r0, {r0, r1, r2, r4, r5, r6}^
    19bc:	09000009 	stmdbeq	r0, {r0, r3}
    19c0:	00000b61 	andeq	r0, r0, r1, ror #22
    19c4:	006f5802 	rsbeq	r5, pc, r2, lsl #16
    19c8:	91020000 	mrsls	r0, (UNDEF: 2)
    19cc:	0b800a6c 	bleq	fe004384 <SerdesInfoTbl+0xbdffc3c4>
    19d0:	5a020000 	bpl	819d8 <MV_CPU_LE+0x819d7>
    19d4:	0000006f 	andeq	r0, r0, pc, rrx
    19d8:	0a749102 	beq	1d25de8 <MV_CPU_LE+0x1d25de7>
    19dc:	00000b76 	andeq	r0, r0, r6, ror fp
    19e0:	00455b02 	subeq	r5, r5, r2, lsl #22
    19e4:	91020000 	mrsls	r0, (UNDEF: 2)
    19e8:	Address 0x000019e8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10011201 	andne	r1, r1, r1, lsl #4
  10:	02000006 	andeq	r0, r0, #6
  14:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  18:	0b3b0b3a 	bleq	ec2d08 <MV_CPU_LE+0xec2d07>
  1c:	00001349 	andeq	r1, r0, r9, asr #6
  20:	0b002403 	bleq	9034 <MV_CPU_LE+0x9033>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	0400000e 	streq	r0, [r0], #-14
  2c:	0b0b0024 	bleq	2c00c4 <MV_CPU_LE+0x2c00c3>
  30:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  34:	04050000 	streq	r0, [r5]
  38:	3a0b0b01 	bcc	2c2c44 <MV_CPU_LE+0x2c2c43>
  3c:	010b3b0b 	tsteq	fp, fp, lsl #22
  40:	06000013 			; <UNDEFINED> instruction: 0x06000013
  44:	0e030028 	walignieq	wr0, wr3, wr8, #0
  48:	00000d1c 	andeq	r0, r0, ip, lsl sp
  4c:	03010407 	movweq	r0, #5127	; 0x1407
  50:	3a0b0b0e 	bcc	2c2c90 <MV_CPU_LE+0x2c2c8f>
  54:	010b3b0b 	tsteq	fp, fp, lsl #22
  58:	08000013 	stmdaeq	r0, {r0, r1, r4}
  5c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
  60:	0b3a0b0b 	bleq	e82c94 <MV_CPU_LE+0xe82c93>
  64:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  68:	0d090000 	wstrbeq	wr0, [r9]
  6c:	3a0e0300 	bcc	380c74 <MV_CPU_LE+0x380c73>
  70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  74:	000a3813 	andeq	r3, sl, r3, lsl r8
  78:	01010a00 	tsteq	r1, r0, lsl #20
  7c:	13011349 	movwne	r1, #4937	; 0x1349
  80:	210b0000 	mrscs	r0, (UNDEF: 11)
  84:	2f134900 	svccs	0x00134900
  88:	0c00000b 	wstrbeq	wr0, [r0], #-11
  8c:	0b0b000f 	bleq	2c00d0 <MV_CPU_LE+0x2c00cf>
  90:	00001349 	andeq	r1, r0, r9, asr #6
  94:	03012e0d 	movweq	r2, #7693	; 0x1e0d
  98:	3b0b3a0e 	blcc	2ce8d8 <MV_CPU_LE+0x2ce8d7>
  9c:	490c2705 	stmdbmi	ip, {r0, r2, r8, r9, sl, sp}
  a0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  a4:	01064001 	tsteq	r6, r1
  a8:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  ac:	0e030005 	woreq	wr0, wr3, wr5
  b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
  b4:	0a021349 	beq	84de0 <MV_CPU_LE+0x84ddf>
  b8:	340f0000 	strcc	r0, [pc], #0	; c0 <MV_CPU_LE+0xbf>
  bc:	3a0e0300 	bcc	380cc4 <MV_CPU_LE+0x380cc3>
  c0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
  c4:	000a0213 	andeq	r0, sl, r3, lsl r2
  c8:	002e1000 	eoreq	r1, lr, r0
  cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  d0:	0b3b0b3a 	bleq	ec2dc0 <MV_CPU_LE+0xec2dbf>
  d4:	13490c27 	movtne	r0, #39975	; 0x9c27
  d8:	01120111 	tsteq	r2, r1, lsl r1
  dc:	00000640 	andeq	r0, r0, r0, asr #12
  e0:	3f012e11 	svccc	0x00012e11
  e4:	3a0e030c 	bcc	380d1c <MV_CPU_LE+0x380d1b>
  e8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  ec:	1113490c 	tstne	r3, ip, lsl #18
  f0:	40011201 	andmi	r1, r1, r1, lsl #4
  f4:	00130106 	andseq	r0, r3, r6, lsl #2
  f8:	00341200 	eorseq	r1, r4, r0, lsl #4
  fc:	0b3a0e03 	bleq	e83910 <MV_CPU_LE+0xe8390f>
 100:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 104:	00000a02 	andeq	r0, r0, r2, lsl #20
 108:	03000513 	movweq	r0, #1299	; 0x513
 10c:	3b0b3a0e 	blcc	2ce94c <MV_CPU_LE+0x2ce94b>
 110:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 114:	1400000a 	strne	r0, [r0], #-10
 118:	08030034 	stmdaeq	r3, {r2, r4, r5}
 11c:	0b3b0b3a 	bleq	ec2e0c <MV_CPU_LE+0xec2e0b>
 120:	0a021349 	beq	84e4c <MV_CPU_LE+0x84e4b>
 124:	2e150000 	wxorcs	wr0, wr5, wr0
 128:	030c3f00 	movweq	r3, #52992	; 0xcf00
 12c:	3b0b3a0e 	blcc	2ce96c <MV_CPU_LE+0x2ce96b>
 130:	490c2705 	stmdbmi	ip, {r0, r2, r8, r9, sl, sp}
 134:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 138:	00064001 	andeq	r4, r6, r1
 13c:	012e1600 	teqeq	lr, r0, lsl #12
 140:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 144:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
 148:	13490c27 	movtne	r0, #39975	; 0x9c27
 14c:	01120111 	tsteq	r2, r1, lsl r1
 150:	13010640 	movwne	r0, #5696	; 0x1640
 154:	34170000 	ldrcc	r0, [r7]
 158:	3a080300 	bcc	200d60 <MV_CPU_LE+0x200d5f>
 15c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 160:	000a0213 	andeq	r0, sl, r3, lsl r2
 164:	010b1800 	tsteq	fp, r0, lsl #16
 168:	01120111 	tsteq	r2, r1, lsl r1
 16c:	00001301 	andeq	r1, r0, r1, lsl #6
 170:	11010b19 	tstne	r1, r9, lsl fp
 174:	00011201 	andeq	r1, r1, r1, lsl #4
 178:	00261a00 	eoreq	r1, r6, r0, lsl #20
 17c:	00001349 	andeq	r1, r0, r9, asr #6
 180:	0000211b 	andeq	r2, r0, fp, lsl r1
 184:	00341c00 	eorseq	r1, r4, r0, lsl #24
 188:	0b3a0e03 	bleq	e8399c <MV_CPU_LE+0xe8399b>
 18c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 190:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 194:	341d0000 	ldrcc	r0, [sp]
 198:	3a0e0300 	bcc	380da0 <MV_CPU_LE+0x380d9f>
 19c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1a0:	020c3f13 	andeq	r3, ip, #76	; 0x4c
 1a4:	0000000a 	andeq	r0, r0, sl
 1a8:	25011101 	strcs	r1, [r1, #-257]	; 0x101
 1ac:	030b130e 	movweq	r1, #45838	; 0xb30e
 1b0:	110e1b0e 	tstne	lr, lr, lsl #22
 1b4:	10011201 	andne	r1, r1, r1, lsl #4
 1b8:	02000006 	andeq	r0, r0, #6
 1bc:	0b0b0024 	bleq	2c0254 <MV_CPU_LE+0x2c0253>
 1c0:	0e030b3e 	vmoveq.16	d3[0], r0
 1c4:	24030000 	strcs	r0, [r3]
 1c8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 1cc:	0008030b 	andeq	r0, r8, fp, lsl #6
 1d0:	00160400 	andseq	r0, r6, r0, lsl #8
 1d4:	0b3a0e03 	bleq	e839e8 <MV_CPU_LE+0xe839e7>
 1d8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1dc:	04050000 	streq	r0, [r5]
 1e0:	3a0b0b01 	bcc	2c2dec <MV_CPU_LE+0x2c2deb>
 1e4:	010b3b0b 	tsteq	fp, fp, lsl #22
 1e8:	06000013 			; <UNDEFINED> instruction: 0x06000013
 1ec:	0e030028 	walignieq	wr0, wr3, wr8, #0
 1f0:	00000d1c 	andeq	r0, r0, ip, lsl sp
 1f4:	03010407 	movweq	r0, #5127	; 0x1407
 1f8:	3a0b0b0e 	bcc	2c2e38 <MV_CPU_LE+0x2c2e37>
 1fc:	010b3b0b 	tsteq	fp, fp, lsl #22
 200:	08000013 	stmdaeq	r0, {r0, r1, r4}
 204:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 208:	0b3a0b0b 	bleq	e82e3c <MV_CPU_LE+0xe82e3b>
 20c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 210:	0d090000 	wstrbeq	wr0, [r9]
 214:	3a0e0300 	bcc	380e1c <MV_CPU_LE+0x380e1b>
 218:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 21c:	000a3813 	andeq	r3, sl, r3, lsl r8
 220:	01010a00 	tsteq	r1, r0, lsl #20
 224:	13011349 	movwne	r1, #4937	; 0x1349
 228:	210b0000 	mrscs	r0, (UNDEF: 11)
 22c:	2f134900 	svccs	0x00134900
 230:	0c00000b 	wstrbeq	wr0, [r0], #-11
 234:	0b0b000f 	bleq	2c0278 <MV_CPU_LE+0x2c0277>
 238:	00001349 	andeq	r1, r0, r9, asr #6
 23c:	0300340d 	movweq	r3, #1037	; 0x40d
 240:	3b0b3a0e 	blcc	2cea80 <MV_CPU_LE+0x2cea7f>
 244:	3f13490b 	svccc	0x0013490b
 248:	000c3c0c 	andeq	r3, ip, ip, lsl #24
 24c:	00340e00 	eorseq	r0, r4, r0, lsl #28
 250:	0b3a0e03 	bleq	e83a64 <MV_CPU_LE+0xe83a63>
 254:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 258:	0a020c3f 	beq	8335c <MV_CPU_LE+0x8335b>
 25c:	01000000 	mrseq	r0, (UNDEF: 0)
 260:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 264:	0e030b13 	vmoveq.32	d3[0], r0
 268:	01110e1b 	tsteq	r1, fp, lsl lr
 26c:	06100112 			; <UNDEFINED> instruction: 0x06100112
 270:	24020000 	strcs	r0, [r2]
 274:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 278:	000e030b 	andeq	r0, lr, fp, lsl #6
 27c:	00160300 	andseq	r0, r6, r0, lsl #6
 280:	0b3a0e03 	bleq	e83a94 <MV_CPU_LE+0xe83a93>
 284:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 288:	24040000 	strcs	r0, [r4]
 28c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 290:	0008030b 	andeq	r0, r8, fp, lsl #6
 294:	01130500 	tsteq	r3, r0, lsl #10
 298:	0b0b0e03 	bleq	2c3aac <MV_CPU_LE+0x2c3aab>
 29c:	0b3b0b3a 	bleq	ec2f8c <MV_CPU_LE+0xec2f8b>
 2a0:	00001301 	andeq	r1, r0, r1, lsl #6
 2a4:	03000d06 	movweq	r0, #3334	; 0xd06
 2a8:	3b0b3a08 	blcc	2cead0 <MV_CPU_LE+0x2ceacf>
 2ac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2b0:	0700000a 	streq	r0, [r0, -sl]
 2b4:	0e03000d 	woreq	wr0, wr3, wr13
 2b8:	0b3b0b3a 	bleq	ec2fa8 <MV_CPU_LE+0xec2fa7>
 2bc:	0a381349 	beq	e04fe8 <MV_CPU_LE+0xe04fe7>
 2c0:	01080000 	mrseq	r0, (UNDEF: 8)
 2c4:	01134901 	tsteq	r3, r1, lsl #18
 2c8:	09000013 	stmdbeq	r0, {r0, r1, r4}
 2cc:	13490021 	movtne	r0, #36897	; 0x9021
 2d0:	00000b2f 	andeq	r0, r0, pc, lsr #22
 2d4:	03012e0a 	movweq	r2, #7690	; 0x1e0a
 2d8:	3b0b3a0e 	blcc	2ceb18 <MV_CPU_LE+0x2ceb17>
 2dc:	490c2705 	stmdbmi	ip, {r0, r2, r8, r9, sl, sp}
 2e0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 2e4:	01064001 	tsteq	r6, r1
 2e8:	0b000013 	bleq	33c <MV_CPU_LE+0x33b>
 2ec:	0e030005 	woreq	wr0, wr3, wr5
 2f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
 2f4:	0a021349 	beq	85020 <MV_CPU_LE+0x8501f>
 2f8:	340c0000 	strcc	r0, [ip]
 2fc:	3a0e0300 	bcc	380f04 <MV_CPU_LE+0x380f03>
 300:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 304:	000a0213 	andeq	r0, sl, r3, lsl r2
 308:	012e0d00 	teqeq	lr, r0, lsl #26
 30c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 310:	0b3b0b3a 	bleq	ec3000 <MV_CPU_LE+0xec2fff>
 314:	01110c27 	tsteq	r1, r7, lsr #24
 318:	06400112 			; <UNDEFINED> instruction: 0x06400112
 31c:	00001301 	andeq	r1, r0, r1, lsl #6
 320:	0300340e 	movweq	r3, #1038	; 0x40e
 324:	3b0b3a0e 	blcc	2ceb64 <MV_CPU_LE+0x2ceb63>
 328:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 32c:	0f00000a 	svceq	0x0000000a
 330:	0b0b000f 	bleq	2c0374 <MV_CPU_LE+0x2c0373>
 334:	00001349 	andeq	r1, r0, r9, asr #6
 338:	49003510 	stmdbmi	r0, {r4, r8, sl, ip, sp}
 33c:	11000013 	tstne	r0, r3, lsl r0
 340:	08030005 	stmdaeq	r3, {r0, r2}
 344:	0b3b0b3a 	bleq	ec3034 <MV_CPU_LE+0xec3033>
 348:	0a021349 	beq	85074 <MV_CPU_LE+0x85073>
 34c:	05120000 	ldreq	r0, [r2]
 350:	3a0e0300 	bcc	380f58 <MV_CPU_LE+0x380f57>
 354:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 358:	000a0213 	andeq	r0, sl, r3, lsl r2
 35c:	00341300 	eorseq	r1, r4, r0, lsl #6
 360:	0b3a0803 	bleq	e82374 <MV_CPU_LE+0xe82373>
 364:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 368:	00000a02 	andeq	r0, r0, r2, lsl #20
 36c:	3f012e14 	svccc	0x00012e14
 370:	3a0e030c 	bcc	380fa8 <MV_CPU_LE+0x380fa7>
 374:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
 378:	1113490c 	tstne	r3, ip, lsl #18
 37c:	40011201 	andmi	r1, r1, r1, lsl #4
 380:	00130106 	andseq	r0, r3, r6, lsl #2
 384:	012e1500 	teqeq	lr, r0, lsl #10
 388:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 38c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
 390:	13490c27 	movtne	r0, #39975	; 0x9c27
 394:	01120111 	tsteq	r2, r1, lsl r1
 398:	00000640 	andeq	r0, r0, r0, asr #12
 39c:	01110100 	tsteq	r1, r0, lsl #2
 3a0:	0b130e25 	bleq	4c3c3c <MV_CPU_LE+0x4c3c3b>
 3a4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 3a8:	01120111 	tsteq	r2, r1, lsl r1
 3ac:	00000610 	andeq	r0, r0, r0, lsl r6
 3b0:	03001602 	movweq	r1, #1538	; 0x602
 3b4:	3b0b3a0e 	blcc	2cebf4 <MV_CPU_LE+0x2cebf3>
 3b8:	0013490b 	andseq	r4, r3, fp, lsl #18
 3bc:	00240300 	eoreq	r0, r4, r0, lsl #6
 3c0:	0b3e0b0b 	bleq	f82ff4 <MV_CPU_LE+0xf82ff3>
 3c4:	00000e03 	andeq	r0, r0, r3, lsl #28
 3c8:	0b002404 	bleq	93e0 <MV_CPU_LE+0x93df>
 3cc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 3d0:	05000008 	streq	r0, [r0, #-8]
 3d4:	0b0b000f 	bleq	2c0418 <MV_CPU_LE+0x2c0417>
 3d8:	00001349 	andeq	r1, r0, r9, asr #6
 3dc:	0b010406 	bleq	413fc <MV_CPU_LE+0x413fb>
 3e0:	3b0b3a0b 	blcc	2cec14 <MV_CPU_LE+0x2cec13>
 3e4:	0013010b 	andseq	r0, r3, fp, lsl #2
 3e8:	00280700 	eoreq	r0, r8, r0, lsl #14
 3ec:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
 3f0:	13080000 	movwne	r0, #32768	; 0x8000
 3f4:	0b0e0301 	bleq	381000 <MV_CPU_LE+0x380fff>
 3f8:	3b0b3a0b 	blcc	2cec2c <MV_CPU_LE+0x2cec2b>
 3fc:	0013010b 	andseq	r0, r3, fp, lsl #2
 400:	000d0900 	andeq	r0, sp, r0, lsl #18
 404:	0b3a0e03 	bleq	e83c18 <MV_CPU_LE+0xe83c17>
 408:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 40c:	00000a38 	andeq	r0, r0, r8, lsr sl
 410:	0301040a 	movweq	r0, #5130	; 0x140a
 414:	3a0b0b0e 	bcc	2c3054 <MV_CPU_LE+0x2c3053>
 418:	010b3b0b 	tsteq	fp, fp, lsl #22
 41c:	0b000013 	bleq	470 <MV_CPU_LE+0x46f>
 420:	0e03012e 	wsadbeq	wr0, wr3, wr14
 424:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
 428:	13490c27 	movtne	r0, #39975	; 0x9c27
 42c:	01120111 	tsteq	r2, r1, lsl r1
 430:	13010640 	movwne	r0, #5696	; 0x1640
 434:	050c0000 	streq	r0, [ip]
 438:	3a0e0300 	bcc	381040 <MV_CPU_LE+0x38103f>
 43c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 440:	000a0213 	andeq	r0, sl, r3, lsl r2
 444:	00340d00 	eorseq	r0, r4, r0, lsl #26
 448:	0b3a0e03 	bleq	e83c5c <MV_CPU_LE+0xe83c5b>
 44c:	1349053b 	movtne	r0, #38203	; 0x953b
 450:	00000a02 	andeq	r0, r0, r2, lsl #20
 454:	03012e0e 	movweq	r2, #7694	; 0x1e0e
 458:	3b0b3a0e 	blcc	2cec98 <MV_CPU_LE+0x2cec97>
 45c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 460:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 464:	01064001 	tsteq	r6, r1
 468:	0f000013 	svceq	0x00000013
 46c:	0e030005 	woreq	wr0, wr3, wr5
 470:	0b3b0b3a 	bleq	ec3160 <MV_CPU_LE+0xec315f>
 474:	0a021349 	beq	851a0 <MV_CPU_LE+0x8519f>
 478:	26100000 	ldrcs	r0, [r0], -r0
 47c:	00134900 	andseq	r4, r3, r0, lsl #18
 480:	012e1100 	teqeq	lr, r0, lsl #2
 484:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 488:	0b3b0b3a 	bleq	ec3178 <MV_CPU_LE+0xec3177>
 48c:	13490c27 	movtne	r0, #39975	; 0x9c27
 490:	01120111 	tsteq	r2, r1, lsl r1
 494:	13010640 	movwne	r0, #5696	; 0x1640
 498:	34120000 	ldrcc	r0, [r2]
 49c:	3a0e0300 	bcc	3810a4 <MV_CPU_LE+0x3810a3>
 4a0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4a4:	000a0213 	andeq	r0, sl, r3, lsl r2
 4a8:	012e1300 	teqeq	lr, r0, lsl #6
 4ac:	0b3a0e03 	bleq	e83cc0 <MV_CPU_LE+0xe83cbf>
 4b0:	0c270b3b 	stceq	11, cr0, [r7], #-236	; 0xffffff14
 4b4:	01120111 	tsteq	r2, r1, lsl r1
 4b8:	13010640 	movwne	r0, #5696	; 0x1640
 4bc:	2e140000 	wxorcs	wr0, wr4, wr0
 4c0:	3a0e0301 	bcc	3810cc <MV_CPU_LE+0x3810cb>
 4c4:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
 4c8:	1201110c 	andne	r1, r1, #3
 4cc:	01064001 	tsteq	r6, r1
 4d0:	15000013 	strne	r0, [r0, #-19]
 4d4:	0c3f012e 	wldrweq	wr0, [pc], #-184	; 0xffffff48
 4d8:	0b3a0e03 	bleq	e83cec <MV_CPU_LE+0xe83ceb>
 4dc:	0c27053b 	stceq	5, cr0, [r7], #-236	; 0xffffff14
 4e0:	01111349 	tsteq	r1, r9, asr #6
 4e4:	06400112 			; <UNDEFINED> instruction: 0x06400112
 4e8:	00001301 	andeq	r1, r0, r1, lsl #6
 4ec:	03003416 	movweq	r3, #1046	; 0x416
 4f0:	3b0b3a08 	blcc	2ced18 <MV_CPU_LE+0x2ced17>
 4f4:	02134905 	andseq	r4, r3, #81920	; 0x14000
 4f8:	1700000a 	strne	r0, [r0, -sl]
 4fc:	13490101 	movtne	r0, #37121	; 0x9101
 500:	00001301 	andeq	r1, r0, r1, lsl #6
 504:	49002118 	stmdbmi	r0, {r3, r4, r8, sp}
 508:	000b2f13 	andeq	r2, fp, r3, lsl pc
 50c:	012e1900 	teqeq	lr, r0, lsl #18
 510:	0b3a0e03 	bleq	e83d24 <MV_CPU_LE+0xe83d23>
 514:	0c27053b 	stceq	5, cr0, [r7], #-236	; 0xffffff14
 518:	01120111 	tsteq	r2, r1, lsl r1
 51c:	00000640 	andeq	r0, r0, r0, asr #12
 520:	01110100 	tsteq	r1, r0, lsl #2
 524:	0b130e25 	bleq	4c3dc0 <MV_CPU_LE+0x4c3dbf>
 528:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 52c:	01120111 	tsteq	r2, r1, lsl r1
 530:	00000610 	andeq	r0, r0, r0, lsl r6
 534:	3f012e02 	svccc	0x00012e02
 538:	3a0e030c 	bcc	381170 <MV_CPU_LE+0x38116f>
 53c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 540:	1113490c 	tstne	r3, ip, lsl #18
 544:	40011201 	andmi	r1, r1, r1, lsl #4
 548:	00130106 	andseq	r0, r3, r6, lsl #2
 54c:	00050300 	andeq	r0, r5, r0, lsl #6
 550:	0b3a0803 	bleq	e82564 <MV_CPU_LE+0xe82563>
 554:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 558:	00000a02 	andeq	r0, r0, r2, lsl #20
 55c:	03003404 	movweq	r3, #1028	; 0x404
 560:	3b0b3a08 	blcc	2ced88 <MV_CPU_LE+0x2ced87>
 564:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 568:	0500000a 	streq	r0, [r0, #-10]
 56c:	0b0b000f 	bleq	2c05b0 <MV_CPU_LE+0x2c05af>
 570:	24060000 	strcs	r0, [r6]
 574:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 578:	0008030b 	andeq	r0, r8, fp, lsl #6
 57c:	000f0700 	andeq	r0, pc, r0, lsl #14
 580:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 584:	24080000 	strcs	r0, [r8]
 588:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 58c:	000e030b 	andeq	r0, lr, fp, lsl #6
 590:	00050900 	andeq	r0, r5, r0, lsl #18
 594:	0b3a0e03 	bleq	e83da8 <MV_CPU_LE+0xe83da7>
 598:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 59c:	00000a02 	andeq	r0, r0, r2, lsl #20
 5a0:	0000260a 	andeq	r2, r0, sl, lsl #12
 5a4:	00260b00 	eoreq	r0, r6, r0, lsl #22
 5a8:	00001349 	andeq	r1, r0, r9, asr #6
 5ac:	01110100 	tsteq	r1, r0, lsl #2
 5b0:	0b130e25 	bleq	4c3e4c <MV_CPU_LE+0x4c3e4b>
 5b4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 5b8:	01120111 	tsteq	r2, r1, lsl r1
 5bc:	00000610 	andeq	r0, r0, r0, lsl r6
 5c0:	0b002402 	bleq	95d0 <MV_CPU_LE+0x95cf>
 5c4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 5c8:	0300000e 	movweq	r0, #14
 5cc:	0b0b0024 	bleq	2c0664 <MV_CPU_LE+0x2c0663>
 5d0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 5d4:	16040000 	strne	r0, [r4], -r0
 5d8:	3a0e0300 	bcc	3811e0 <MV_CPU_LE+0x3811df>
 5dc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5e0:	05000013 	streq	r0, [r0, #-19]
 5e4:	0e03012e 	wsadbeq	wr0, wr3, wr14
 5e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
 5ec:	13490c27 	movtne	r0, #39975	; 0x9c27
 5f0:	01120111 	tsteq	r2, r1, lsl r1
 5f4:	13010640 	movwne	r0, #5696	; 0x1640
 5f8:	05060000 	streq	r0, [r6]
 5fc:	3a0e0300 	bcc	381204 <MV_CPU_LE+0x381203>
 600:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 604:	000a0213 	andeq	r0, sl, r3, lsl r2
 608:	00340700 	eorseq	r0, r4, r0, lsl #14
 60c:	0b3a0e03 	bleq	e83e20 <MV_CPU_LE+0xe83e1f>
 610:	1349053b 	movtne	r0, #38203	; 0x953b
 614:	00000a02 	andeq	r0, r0, r2, lsl #20
 618:	3f012e08 	svccc	0x00012e08
 61c:	3a0e030c 	bcc	381254 <MV_CPU_LE+0x381253>
 620:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 624:	1201110c 	andne	r1, r1, #3
 628:	00064001 	andeq	r4, r6, r1
 62c:	00050900 	andeq	r0, r5, r0, lsl #18
 630:	0b3a0e03 	bleq	e83e44 <MV_CPU_LE+0xe83e43>
 634:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 638:	00000a02 	andeq	r0, r0, r2, lsl #20
 63c:	0300340a 	movweq	r3, #1034	; 0x40a
 640:	3b0b3a0e 	blcc	2cee80 <MV_CPU_LE+0x2cee7f>
 644:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 648:	0000000a 	andeq	r0, r0, sl

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000002 	andeq	r0, r0, r2
   8:	007d0002 	rsbseq	r0, sp, r2
   c:	00000002 	andeq	r0, r0, r2
  10:	00000004 	andeq	r0, r0, r4
  14:	047d0002 	ldrbteq	r0, [sp], #-2
  18:	00000004 	andeq	r0, r0, r4
  1c:	00000006 	andeq	r0, r0, r6
  20:	187d0002 	ldmdane	sp!, {r1}^
  24:	00000006 	andeq	r0, r0, r6
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	18770002 	ldmdane	r7!, {r1}^
	...
  38:	0000001c 	andeq	r0, r0, ip, lsl r0
  3c:	0000001e 	andeq	r0, r0, lr, lsl r0
  40:	007d0002 	rsbseq	r0, sp, r2
  44:	0000001e 	andeq	r0, r0, lr, lsl r0
  48:	00000020 	andeq	r0, r0, r0, lsr #32
  4c:	047d0002 	ldrbteq	r0, [sp], #-2
  50:	00000020 	andeq	r0, r0, r0, lsr #32
  54:	0000002c 	andeq	r0, r0, ip, lsr #32
  58:	04770002 	ldrbteq	r0, [r7], #-2
	...
  64:	0000002c 	andeq	r0, r0, ip, lsr #32
  68:	0000002e 	andeq	r0, r0, lr, lsr #32
  6c:	007d0002 	rsbseq	r0, sp, r2
  70:	0000002e 	andeq	r0, r0, lr, lsr #32
  74:	00000030 	andeq	r0, r0, r0, lsr r0
  78:	087d0002 	ldmdaeq	sp!, {r1}^
  7c:	00000030 	andeq	r0, r0, r0, lsr r0
  80:	00000062 	andeq	r0, r0, r2, rrx
  84:	08770002 	ldmdaeq	r7!, {r1}^
	...
  90:	00000064 	andeq	r0, r0, r4, rrx
  94:	00000066 	andeq	r0, r0, r6, rrx
  98:	007d0002 	rsbseq	r0, sp, r2
  9c:	00000066 	andeq	r0, r0, r6, rrx
  a0:	00000068 	andeq	r0, r0, r8, rrx
  a4:	087d0002 	ldmdaeq	sp!, {r1}^
  a8:	00000068 	andeq	r0, r0, r8, rrx
  ac:	0000006a 	andeq	r0, r0, sl, rrx
  b0:	107d0002 	rsbsne	r0, sp, r2
  b4:	0000006a 	andeq	r0, r0, sl, rrx
  b8:	0000008a 	andeq	r0, r0, sl, lsl #1
  bc:	10770002 	rsbsne	r0, r7, r2
	...
  c8:	0000008c 	andeq	r0, r0, ip, lsl #1
  cc:	0000008e 	andeq	r0, r0, lr, lsl #1
  d0:	007d0002 	rsbseq	r0, sp, r2
  d4:	0000008e 	andeq	r0, r0, lr, lsl #1
  d8:	00000090 	muleq	r0, r0, r0
  dc:	087d0002 	ldmdaeq	sp!, {r1}^
  e0:	00000090 	muleq	r0, r0, r0
  e4:	00000092 	muleq	r0, r2, r0
  e8:	387d0002 	ldmdacc	sp!, {r1}^
  ec:	00000092 	muleq	r0, r2, r0
  f0:	00000118 	andeq	r0, r0, r8, lsl r1
  f4:	30770002 	rsbscc	r0, r7, r2
	...
 100:	00000118 	andeq	r0, r0, r8, lsl r1
 104:	0000011a 	andeq	r0, r0, sl, lsl r1
 108:	007d0002 	rsbseq	r0, sp, r2
 10c:	0000011a 	andeq	r0, r0, sl, lsl r1
 110:	0000011c 	andeq	r0, r0, ip, lsl r1
 114:	087d0002 	ldmdaeq	sp!, {r1}^
 118:	0000011c 	andeq	r0, r0, ip, lsl r1
 11c:	0000011e 	andeq	r0, r0, lr, lsl r1
 120:	387d0002 	ldmdacc	sp!, {r1}^
 124:	0000011e 	andeq	r0, r0, lr, lsl r1
 128:	00000210 	andeq	r0, r0, r0, lsl r2
 12c:	30770002 	rsbscc	r0, r7, r2
	...
 138:	00000210 	andeq	r0, r0, r0, lsl r2
 13c:	00000212 	andeq	r0, r0, r2, lsl r2
 140:	007d0002 	rsbseq	r0, sp, r2
 144:	00000212 	andeq	r0, r0, r2, lsl r2
 148:	00000214 	andeq	r0, r0, r4, lsl r2
 14c:	047d0002 	ldrbteq	r0, [sp], #-2
 150:	00000214 	andeq	r0, r0, r4, lsl r2
 154:	00000228 	andeq	r0, r0, r8, lsr #4
 158:	04770002 	ldrbteq	r0, [r7], #-2
	...
 164:	00000228 	andeq	r0, r0, r8, lsr #4
 168:	0000022a 	andeq	r0, r0, sl, lsr #4
 16c:	007d0002 	rsbseq	r0, sp, r2
 170:	0000022a 	andeq	r0, r0, sl, lsr #4
 174:	0000022c 	andeq	r0, r0, ip, lsr #4
 178:	087d0002 	ldmdaeq	sp!, {r1}^
 17c:	0000022c 	andeq	r0, r0, ip, lsr #4
 180:	0000022e 	andeq	r0, r0, lr, lsr #4
 184:	187d0002 	ldmdane	sp!, {r1}^
 188:	0000022e 	andeq	r0, r0, lr, lsr #4
 18c:	0000029c 	muleq	r0, ip, r2
 190:	18770002 	ldmdane	r7!, {r1}^
	...
 19c:	0000029c 	muleq	r0, ip, r2
 1a0:	0000029e 	muleq	r0, lr, r2
 1a4:	007d0002 	rsbseq	r0, sp, r2
 1a8:	0000029e 	muleq	r0, lr, r2
 1ac:	000002a0 	andeq	r0, r0, r0, lsr #5
 1b0:	087d0002 	ldmdaeq	sp!, {r1}^
 1b4:	000002a0 	andeq	r0, r0, r0, lsr #5
 1b8:	000002a2 	andeq	r0, r0, r2, lsr #5
 1bc:	107d0002 	rsbsne	r0, sp, r2
 1c0:	000002a2 	andeq	r0, r0, r2, lsr #5
 1c4:	000002c8 	andeq	r0, r0, r8, asr #5
 1c8:	10770002 	rsbsne	r0, r7, r2
	...
 1d4:	000002c8 	andeq	r0, r0, r8, asr #5
 1d8:	000002ca 	andeq	r0, r0, sl, asr #5
 1dc:	007d0002 	rsbseq	r0, sp, r2
 1e0:	000002ca 	andeq	r0, r0, sl, asr #5
 1e4:	000002cc 	andeq	r0, r0, ip, asr #5
 1e8:	0c7d0002 	wldrheq	wr0, [sp], #-2
 1ec:	000002cc 	andeq	r0, r0, ip, asr #5
 1f0:	000002ce 	andeq	r0, r0, lr, asr #5
 1f4:	307d0002 	rsbscc	r0, sp, r2
 1f8:	000002ce 	andeq	r0, r0, lr, asr #5
 1fc:	0000048c 	andeq	r0, r0, ip, lsl #9
 200:	30770002 	rsbscc	r0, r7, r2
	...
 20c:	0000048c 	andeq	r0, r0, ip, lsl #9
 210:	0000048e 	andeq	r0, r0, lr, lsl #9
 214:	007d0002 	rsbseq	r0, sp, r2
 218:	0000048e 	andeq	r0, r0, lr, lsl #9
 21c:	00000490 	muleq	r0, r0, r4
 220:	087d0002 	ldmdaeq	sp!, {r1}^
 224:	00000490 	muleq	r0, r0, r4
 228:	000004fa 	strdeq	r0, [r0], -sl
 22c:	08770002 	ldmdaeq	r7!, {r1}^
	...
 238:	000004fc 	strdeq	r0, [r0], -ip
 23c:	000004fe 	strdeq	r0, [r0], -lr
 240:	007d0002 	rsbseq	r0, sp, r2
 244:	000004fe 	strdeq	r0, [r0], -lr
 248:	00000500 	andeq	r0, r0, r0, lsl #10
 24c:	087d0002 	ldmdaeq	sp!, {r1}^
 250:	00000500 	andeq	r0, r0, r0, lsl #10
 254:	0000056a 	andeq	r0, r0, sl, ror #10
 258:	08770002 	ldmdaeq	r7!, {r1}^
	...
 264:	0000056c 	andeq	r0, r0, ip, ror #10
 268:	0000056e 	andeq	r0, r0, lr, ror #10
 26c:	007d0002 	rsbseq	r0, sp, r2
 270:	0000056e 	andeq	r0, r0, lr, ror #10
 274:	00000570 	andeq	r0, r0, r0, ror r5
 278:	087d0002 	ldmdaeq	sp!, {r1}^
 27c:	00000570 	andeq	r0, r0, r0, ror r5
 280:	00000572 	andeq	r0, r0, r2, ror r5
 284:	107d0002 	rsbsne	r0, sp, r2
 288:	00000572 	andeq	r0, r0, r2, ror r5
 28c:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
 290:	10770002 	rsbsne	r0, r7, r2
	...
 29c:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
 2a0:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
 2a4:	007d0002 	rsbseq	r0, sp, r2
 2a8:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
 2ac:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
 2b0:	047d0002 	ldrbteq	r0, [sp], #-2
 2b4:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
 2b8:	000005be 			; <UNDEFINED> instruction: 0x000005be
 2bc:	107d0002 	rsbsne	r0, sp, r2
 2c0:	000005be 			; <UNDEFINED> instruction: 0x000005be
 2c4:	000005fe 	strdeq	r0, [r0], -lr
 2c8:	10770002 	rsbsne	r0, r7, r2
	...
 2d4:	00000600 	andeq	r0, r0, r0, lsl #12
 2d8:	00000602 	andeq	r0, r0, r2, lsl #12
 2dc:	007d0002 	rsbseq	r0, sp, r2
 2e0:	00000602 	andeq	r0, r0, r2, lsl #12
 2e4:	00000606 	andeq	r0, r0, r6, lsl #12
 2e8:	0c7d0002 	wldrheq	wr0, [sp], #-2
 2ec:	00000606 	andeq	r0, r0, r6, lsl #12
 2f0:	00000608 	andeq	r0, r0, r8, lsl #12
 2f4:	e07d0003 	rsbs	r0, sp, r3
 2f8:	0006080b 	andeq	r0, r6, fp, lsl #16
 2fc:	00253000 	eoreq	r3, r5, r0
 300:	77000300 	strvc	r0, [r0, -r0, lsl #6]
 304:	00000bd8 	ldrdeq	r0, [r0], -r8
	...
 310:	00020000 	andeq	r0, r2, r0
 314:	00020000 	andeq	r0, r2, r0
 318:	0002007d 	andeq	r0, r2, sp, ror r0
 31c:	00040000 	andeq	r0, r4, r0
 320:	00020000 	andeq	r0, r2, r0
 324:	0004047d 	andeq	r0, r4, sp, ror r4
 328:	00060000 	andeq	r0, r6, r0
 32c:	00020000 	andeq	r0, r2, r0
 330:	0006187d 	andeq	r1, r6, sp, ror r8
 334:	001c0000 	andseq	r0, ip, r0
 338:	00020000 	andeq	r0, r2, r0
 33c:	00001877 	andeq	r1, r0, r7, ror r8
 340:	00000000 	andeq	r0, r0, r0
 344:	001c0000 	andseq	r0, ip, r0
 348:	001e0000 	andseq	r0, lr, r0
 34c:	00020000 	andeq	r0, r2, r0
 350:	001e007d 	andseq	r0, lr, sp, ror r0
 354:	00200000 	eoreq	r0, r0, r0
 358:	00020000 	andeq	r0, r2, r0
 35c:	0020087d 	eoreq	r0, r0, sp, ror r8
 360:	00220000 	eoreq	r0, r2, r0
 364:	00020000 	andeq	r0, r2, r0
 368:	0022187d 	eoreq	r1, r2, sp, ror r8
 36c:	00e80000 	rsceq	r0, r8, r0
 370:	00020000 	andeq	r0, r2, r0
 374:	00001877 	andeq	r1, r0, r7, ror r8
 378:	00000000 	andeq	r0, r0, r0
 37c:	00e80000 	rsceq	r0, r8, r0
 380:	00ea0000 	rsceq	r0, sl, r0
 384:	00020000 	andeq	r0, r2, r0
 388:	00ea007d 	rsceq	r0, sl, sp, ror r0
 38c:	00ec0000 	rsceq	r0, ip, r0
 390:	00020000 	andeq	r0, r2, r0
 394:	00ec047d 	rsceq	r0, ip, sp, ror r4
 398:	00ee0000 	rsceq	r0, lr, r0
 39c:	00020000 	andeq	r0, r2, r0
 3a0:	00ee187d 	rsceq	r1, lr, sp, ror r8
 3a4:	011c0000 	tsteq	ip, r0
 3a8:	00020000 	andeq	r0, r2, r0
 3ac:	00001877 	andeq	r1, r0, r7, ror r8
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	011c0000 	tsteq	ip, r0
 3b8:	011e0000 	tsteq	lr, r0
 3bc:	00020000 	andeq	r0, r2, r0
 3c0:	011e007d 	tsteq	lr, sp, ror r0
 3c4:	01200000 	teqeq	r0, r0
 3c8:	00020000 	andeq	r0, r2, r0
 3cc:	0120087d 	teqeq	r0, sp, ror r8
 3d0:	01220000 	teqeq	r2, r0
 3d4:	00020000 	andeq	r0, r2, r0
 3d8:	0122107d 	teqeq	r2, sp, ror r0
 3dc:	015c0000 	cmpeq	ip, r0
 3e0:	00020000 	andeq	r0, r2, r0
 3e4:	00001077 	andeq	r1, r0, r7, ror r0
 3e8:	00000000 	andeq	r0, r0, r0
 3ec:	015c0000 	cmpeq	ip, r0
 3f0:	015e0000 	cmpeq	lr, r0
 3f4:	00020000 	andeq	r0, r2, r0
 3f8:	015e007d 	cmpeq	lr, sp, ror r0
 3fc:	01600000 	cmneq	r0, r0
 400:	00020000 	andeq	r0, r2, r0
 404:	0160087d 	smceq	141	; 0x8d
 408:	01620000 	cmneq	r2, r0
 40c:	00020000 	andeq	r0, r2, r0
 410:	0162287d 	smceq	8845	; 0x228d
 414:	02120000 	andseq	r0, r2, #0
 418:	00020000 	andeq	r0, r2, r0
 41c:	00002877 	andeq	r2, r0, r7, ror r8
 420:	00000000 	andeq	r0, r0, r0
 424:	02140000 	andseq	r0, r4, #0
 428:	02160000 	andseq	r0, r6, #0
 42c:	00020000 	andeq	r0, r2, r0
 430:	0216007d 	andseq	r0, r6, #125	; 0x7d
 434:	02180000 	andseq	r0, r8, #0
 438:	00020000 	andeq	r0, r2, r0
 43c:	0218047d 	andseq	r0, r8, #2097152000	; 0x7d000000
 440:	021a0000 	andseq	r0, sl, #0
 444:	00020000 	andeq	r0, r2, r0
 448:	021a107d 	andseq	r1, sl, #125	; 0x7d
 44c:	02460000 	subeq	r0, r6, #0
 450:	00020000 	andeq	r0, r2, r0
 454:	00001077 	andeq	r1, r0, r7, ror r0
 458:	00000000 	andeq	r0, r0, r0
 45c:	02480000 	subeq	r0, r8, #0
 460:	024a0000 	subeq	r0, sl, #0
 464:	00020000 	andeq	r0, r2, r0
 468:	024a007d 	subeq	r0, sl, #125	; 0x7d
 46c:	024c0000 	subeq	r0, ip, #0
 470:	00020000 	andeq	r0, r2, r0
 474:	024c047d 	subeq	r0, ip, #2097152000	; 0x7d000000
 478:	024e0000 	subeq	r0, lr, #0
 47c:	00020000 	andeq	r0, r2, r0
 480:	024e107d 	subeq	r1, lr, #125	; 0x7d
 484:	026e0000 	rsbeq	r0, lr, #0
 488:	00020000 	andeq	r0, r2, r0
 48c:	00001077 	andeq	r1, r0, r7, ror r0
	...
 498:	00020000 	andeq	r0, r2, r0
 49c:	00020000 	andeq	r0, r2, r0
 4a0:	0002007d 	andeq	r0, r2, sp, ror r0
 4a4:	00040000 	andeq	r0, r4, r0
 4a8:	00020000 	andeq	r0, r2, r0
 4ac:	0004047d 	andeq	r0, r4, sp, ror r4
 4b0:	00060000 	andeq	r0, r6, r0
 4b4:	00020000 	andeq	r0, r2, r0
 4b8:	0006187d 	andeq	r1, r6, sp, ror r8
 4bc:	001c0000 	andseq	r0, ip, r0
 4c0:	00020000 	andeq	r0, r2, r0
 4c4:	00001877 	andeq	r1, r0, r7, ror r8
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	001c0000 	andseq	r0, ip, r0
 4d0:	001e0000 	andseq	r0, lr, r0
 4d4:	00020000 	andeq	r0, r2, r0
 4d8:	001e007d 	andseq	r0, lr, sp, ror r0
 4dc:	00200000 	eoreq	r0, r0, r0
 4e0:	00020000 	andeq	r0, r2, r0
 4e4:	0020047d 	eoreq	r0, r0, sp, ror r4
 4e8:	00220000 	eoreq	r0, r2, r0
 4ec:	00020000 	andeq	r0, r2, r0
 4f0:	0022107d 	eoreq	r1, r2, sp, ror r0
 4f4:	00460000 	subeq	r0, r6, r0
 4f8:	00020000 	andeq	r0, r2, r0
 4fc:	00001077 	andeq	r1, r0, r7, ror r0
 500:	00000000 	andeq	r0, r0, r0
 504:	00480000 	subeq	r0, r8, r0
 508:	004a0000 	subeq	r0, sl, r0
 50c:	00020000 	andeq	r0, r2, r0
 510:	004a007d 	subeq	r0, sl, sp, ror r0
 514:	004c0000 	subeq	r0, ip, r0
 518:	00020000 	andeq	r0, r2, r0
 51c:	004c087d 	subeq	r0, ip, sp, ror r8
 520:	004e0000 	subeq	r0, lr, r0
 524:	00020000 	andeq	r0, r2, r0
 528:	004e207d 	subeq	r2, lr, sp, ror r0
 52c:	01540000 	cmpeq	r4, r0
 530:	00020000 	andeq	r0, r2, r0
 534:	00002077 	andeq	r2, r0, r7, ror r0
 538:	00000000 	andeq	r0, r0, r0
 53c:	01540000 	cmpeq	r4, r0
 540:	01560000 	cmpeq	r6, r0
 544:	00020000 	andeq	r0, r2, r0
 548:	0156007d 	cmpeq	r6, sp, ror r0
 54c:	01580000 	cmpeq	r8, r0
 550:	00020000 	andeq	r0, r2, r0
 554:	0158087d 	cmpeq	r8, sp, ror r8
 558:	015a0000 	cmpeq	sl, r0
 55c:	00020000 	andeq	r0, r2, r0
 560:	015a187d 	cmpeq	sl, sp, ror r8
 564:	024c0000 	subeq	r0, ip, #0
 568:	00020000 	andeq	r0, r2, r0
 56c:	00001877 	andeq	r1, r0, r7, ror r8
 570:	00000000 	andeq	r0, r0, r0
 574:	024c0000 	subeq	r0, ip, #0
 578:	024e0000 	subeq	r0, lr, #0
 57c:	00020000 	andeq	r0, r2, r0
 580:	024e007d 	subeq	r0, lr, #125	; 0x7d
 584:	02500000 	subseq	r0, r0, #0
 588:	00020000 	andeq	r0, r2, r0
 58c:	0250087d 	subseq	r0, r0, #8192000	; 0x7d0000
 590:	02520000 	subseq	r0, r2, #0
 594:	00020000 	andeq	r0, r2, r0
 598:	0252187d 	subseq	r1, r2, #8192000	; 0x7d0000
 59c:	02940000 	addseq	r0, r4, #0
 5a0:	00020000 	andeq	r0, r2, r0
 5a4:	00001877 	andeq	r1, r0, r7, ror r8
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	02940000 	addseq	r0, r4, #0
 5b0:	02960000 	addseq	r0, r6, #0
 5b4:	00020000 	andeq	r0, r2, r0
 5b8:	0296007d 	addseq	r0, r6, #125	; 0x7d
 5bc:	02980000 	addseq	r0, r8, #0
 5c0:	00020000 	andeq	r0, r2, r0
 5c4:	0298087d 	addseq	r0, r8, #8192000	; 0x7d0000
 5c8:	029a0000 	addseq	r0, sl, #0
 5cc:	00020000 	andeq	r0, r2, r0
 5d0:	029a187d 	addseq	r1, sl, #8192000	; 0x7d0000
 5d4:	02ee0000 	rsceq	r0, lr, #0
 5d8:	00020000 	andeq	r0, r2, r0
 5dc:	00001877 	andeq	r1, r0, r7, ror r8
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	02f00000 	rscseq	r0, r0, #0
 5e8:	02f20000 	rscseq	r0, r2, #0
 5ec:	00020000 	andeq	r0, r2, r0
 5f0:	02f2007d 	rscseq	r0, r2, #125	; 0x7d
 5f4:	02f40000 	rscseq	r0, r4, #0
 5f8:	00020000 	andeq	r0, r2, r0
 5fc:	02f4087d 	rscseq	r0, r4, #8192000	; 0x7d0000
 600:	02f60000 	rscseq	r0, r6, #0
 604:	00020000 	andeq	r0, r2, r0
 608:	02f6187d 	rscseq	r1, r6, #8192000	; 0x7d0000
 60c:	03420000 	movteq	r0, #8192	; 0x2000
 610:	00020000 	andeq	r0, r2, r0
 614:	00001877 	andeq	r1, r0, r7, ror r8
 618:	00000000 	andeq	r0, r0, r0
 61c:	03440000 	movteq	r0, #16384	; 0x4000
 620:	03460000 	movteq	r0, #24576	; 0x6000
 624:	00020000 	andeq	r0, r2, r0
 628:	0346007d 	movteq	r0, #24701	; 0x607d
 62c:	03480000 	movteq	r0, #32768	; 0x8000
 630:	00020000 	andeq	r0, r2, r0
 634:	0348087d 	movteq	r0, #34941	; 0x887d
 638:	034a0000 	movteq	r0, #40960	; 0xa000
 63c:	00030000 	andeq	r0, r3, r0
 640:	4a00c07d 	bmi	3083c <MV_CPU_LE+0x3083b>
 644:	50000003 	andpl	r0, r0, r3
 648:	03000005 	movweq	r0, #5
 64c:	00c07700 	sbceq	r7, r0, r0, lsl #14
	...
 658:	00000550 	andeq	r0, r0, r0, asr r5
 65c:	00000552 	andeq	r0, r0, r2, asr r5
 660:	007d0002 	rsbseq	r0, sp, r2
 664:	00000552 	andeq	r0, r0, r2, asr r5
 668:	00000554 	andeq	r0, r0, r4, asr r5
 66c:	087d0002 	ldmdaeq	sp!, {r1}^
 670:	00000554 	andeq	r0, r0, r4, asr r5
 674:	00000556 	andeq	r0, r0, r6, asr r5
 678:	107d0002 	rsbsne	r0, sp, r2
 67c:	00000556 	andeq	r0, r0, r6, asr r5
 680:	00000582 	andeq	r0, r0, r2, lsl #11
 684:	10770002 	rsbsne	r0, r7, r2
	...
 690:	00000584 	andeq	r0, r0, r4, lsl #11
 694:	00000586 	andeq	r0, r0, r6, lsl #11
 698:	007d0002 	rsbseq	r0, sp, r2
 69c:	00000586 	andeq	r0, r0, r6, lsl #11
 6a0:	00000588 	andeq	r0, r0, r8, lsl #11
 6a4:	087d0002 	ldmdaeq	sp!, {r1}^
 6a8:	00000588 	andeq	r0, r0, r8, lsl #11
 6ac:	0000058a 	andeq	r0, r0, sl, lsl #11
 6b0:	107d0002 	rsbsne	r0, sp, r2
 6b4:	0000058a 	andeq	r0, r0, sl, lsl #11
 6b8:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
 6bc:	10770002 	rsbsne	r0, r7, r2
	...
 6c8:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
 6cc:	000005be 			; <UNDEFINED> instruction: 0x000005be
 6d0:	007d0002 	rsbseq	r0, sp, r2
 6d4:	000005be 			; <UNDEFINED> instruction: 0x000005be
 6d8:	000005c0 	andeq	r0, r0, r0, asr #11
 6dc:	087d0002 	ldmdaeq	sp!, {r1}^
 6e0:	000005c0 	andeq	r0, r0, r0, asr #11
 6e4:	000005c2 	andeq	r0, r0, r2, asr #11
 6e8:	107d0002 	rsbsne	r0, sp, r2
 6ec:	000005c2 	andeq	r0, r0, r2, asr #11
 6f0:	0000060c 	andeq	r0, r0, ip, lsl #12
 6f4:	10770002 	rsbsne	r0, r7, r2
	...
 700:	0000060c 	andeq	r0, r0, ip, lsl #12
 704:	0000060e 	andeq	r0, r0, lr, lsl #12
 708:	007d0002 	rsbseq	r0, sp, r2
 70c:	0000060e 	andeq	r0, r0, lr, lsl #12
 710:	00000610 	andeq	r0, r0, r0, lsl r6
 714:	087d0002 	ldmdaeq	sp!, {r1}^
 718:	00000610 	andeq	r0, r0, r0, lsl r6
 71c:	00000612 	andeq	r0, r0, r2, lsl r6
 720:	187d0002 	ldmdane	sp!, {r1}^
 724:	00000612 	andeq	r0, r0, r2, lsl r6
 728:	00000788 	andeq	r0, r0, r8, lsl #15
 72c:	18770002 	ldmdane	r7!, {r1}^
	...
 738:	00000788 	andeq	r0, r0, r8, lsl #15
 73c:	0000078a 	andeq	r0, r0, sl, lsl #15
 740:	007d0002 	rsbseq	r0, sp, r2
 744:	0000078a 	andeq	r0, r0, sl, lsl #15
 748:	0000078c 	andeq	r0, r0, ip, lsl #15
 74c:	087d0002 	ldmdaeq	sp!, {r1}^
 750:	0000078c 	andeq	r0, r0, ip, lsl #15
 754:	0000078e 	andeq	r0, r0, lr, lsl #15
 758:	187d0002 	ldmdane	sp!, {r1}^
 75c:	0000078e 	andeq	r0, r0, lr, lsl #15
 760:	0000085c 	andeq	r0, r0, ip, asr r8
 764:	18770002 	ldmdane	r7!, {r1}^
	...
 770:	0000085c 	andeq	r0, r0, ip, asr r8
 774:	0000085e 	andeq	r0, r0, lr, asr r8
 778:	007d0002 	rsbseq	r0, sp, r2
 77c:	0000085e 	andeq	r0, r0, lr, asr r8
 780:	00000860 	andeq	r0, r0, r0, ror #16
 784:	087d0002 	ldmdaeq	sp!, {r1}^
 788:	00000860 	andeq	r0, r0, r0, ror #16
 78c:	00000862 	andeq	r0, r0, r2, ror #16
 790:	287d0002 	ldmdacs	sp!, {r1}^
 794:	00000862 	andeq	r0, r0, r2, ror #16
 798:	00000974 	andeq	r0, r0, r4, ror r9
 79c:	28770002 	ldmdacs	r7!, {r1}^
	...
 7a8:	00000974 	andeq	r0, r0, r4, ror r9
 7ac:	00000976 	andeq	r0, r0, r6, ror r9
 7b0:	007d0002 	rsbseq	r0, sp, r2
 7b4:	00000976 	andeq	r0, r0, r6, ror r9
 7b8:	00000978 	andeq	r0, r0, r8, ror r9
 7bc:	087d0002 	ldmdaeq	sp!, {r1}^
 7c0:	00000978 	andeq	r0, r0, r8, ror r9
 7c4:	0000097a 	andeq	r0, r0, sl, ror r9
 7c8:	287d0002 	ldmdacs	sp!, {r1}^
 7cc:	0000097a 	andeq	r0, r0, sl, ror r9
 7d0:	00000aec 	andeq	r0, r0, ip, ror #21
 7d4:	28770002 	ldmdacs	r7!, {r1}^
	...
 7e0:	00000aec 	andeq	r0, r0, ip, ror #21
 7e4:	00000aee 	andeq	r0, r0, lr, ror #21
 7e8:	007d0002 	rsbseq	r0, sp, r2
 7ec:	00000aee 	andeq	r0, r0, lr, ror #21
 7f0:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 7f4:	087d0002 	ldmdaeq	sp!, {r1}^
 7f8:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 7fc:	00000af2 	strdeq	r0, [r0], -r2
 800:	207d0002 	rsbscs	r0, sp, r2
 804:	00000af2 	strdeq	r0, [r0], -r2
 808:	00000b44 	andeq	r0, r0, r4, asr #22
 80c:	20770002 	rsbscs	r0, r7, r2
	...
 818:	00000b44 	andeq	r0, r0, r4, asr #22
 81c:	00000b46 	andeq	r0, r0, r6, asr #22
 820:	007d0002 	rsbseq	r0, sp, r2
 824:	00000b46 	andeq	r0, r0, r6, asr #22
 828:	00000b48 	andeq	r0, r0, r8, asr #22
 82c:	087d0002 	ldmdaeq	sp!, {r1}^
 830:	00000b48 	andeq	r0, r0, r8, asr #22
 834:	00000b4a 	andeq	r0, r0, sl, asr #22
 838:	187d0002 	ldmdane	sp!, {r1}^
 83c:	00000b4a 	andeq	r0, r0, sl, asr #22
 840:	00000c64 	andeq	r0, r0, r4, ror #24
 844:	18770002 	ldmdane	r7!, {r1}^
	...
 850:	00000c64 	andeq	r0, r0, r4, ror #24
 854:	00000c66 	andeq	r0, r0, r6, ror #24
 858:	007d0002 	rsbseq	r0, sp, r2
 85c:	00000c66 	andeq	r0, r0, r6, ror #24
 860:	00000c68 	andeq	r0, r0, r8, ror #24
 864:	087d0002 	ldmdaeq	sp!, {r1}^
 868:	00000c68 	andeq	r0, r0, r8, ror #24
 86c:	00000c6a 	andeq	r0, r0, sl, ror #24
 870:	187d0002 	ldmdane	sp!, {r1}^
 874:	00000c6a 	andeq	r0, r0, sl, ror #24
 878:	00000d3c 	andeq	r0, r0, ip, lsr sp
 87c:	18770002 	ldmdane	r7!, {r1}^
	...
 888:	00000d3c 	andeq	r0, r0, ip, lsr sp
 88c:	00000d3e 	andeq	r0, r0, lr, lsr sp
 890:	007d0002 	rsbseq	r0, sp, r2
 894:	00000d3e 	andeq	r0, r0, lr, lsr sp
 898:	00000d40 	andeq	r0, r0, r0, asr #26
 89c:	087d0002 	ldmdaeq	sp!, {r1}^
 8a0:	00000d40 	andeq	r0, r0, r0, asr #26
 8a4:	00000d42 	andeq	r0, r0, r2, asr #26
 8a8:	207d0002 	rsbscs	r0, sp, r2
 8ac:	00000d42 	andeq	r0, r0, r2, asr #26
 8b0:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 8b4:	20770002 	rsbscs	r0, r7, r2
	...
 8c4:	00000002 	andeq	r0, r0, r2
 8c8:	007d0002 	rsbseq	r0, sp, r2
 8cc:	00000002 	andeq	r0, r0, r2
 8d0:	00000004 	andeq	r0, r0, r4
 8d4:	047d0002 	ldrbteq	r0, [sp], #-2
 8d8:	00000004 	andeq	r0, r0, r4
 8dc:	00000006 	andeq	r0, r0, r6
 8e0:	207d0002 	rsbscs	r0, sp, r2
 8e4:	00000006 	andeq	r0, r0, r6
 8e8:	00000048 	andeq	r0, r0, r8, asr #32
 8ec:	20770002 	rsbscs	r0, r7, r2
	...
 8f8:	00000048 	andeq	r0, r0, r8, asr #32
 8fc:	0000004a 	andeq	r0, r0, sl, asr #32
 900:	007d0002 	rsbseq	r0, sp, r2
 904:	0000004a 	andeq	r0, r0, sl, asr #32
 908:	0000004c 	andeq	r0, r0, ip, asr #32
 90c:	047d0002 	ldrbteq	r0, [sp], #-2
 910:	0000004c 	andeq	r0, r0, ip, asr #32
 914:	0000004e 	andeq	r0, r0, lr, asr #32
 918:	207d0002 	rsbscs	r0, sp, r2
 91c:	0000004e 	andeq	r0, r0, lr, asr #32
 920:	0000009c 	muleq	r0, ip, r0
 924:	20770002 	rsbscs	r0, r7, r2
	...
 934:	00000002 	andeq	r0, r0, r2
 938:	007d0002 	rsbseq	r0, sp, r2
 93c:	00000002 	andeq	r0, r0, r2
 940:	00000004 	andeq	r0, r0, r4
 944:	047d0002 	ldrbteq	r0, [sp], #-2
 948:	00000004 	andeq	r0, r0, r4
 94c:	00000006 	andeq	r0, r0, r6
 950:	187d0002 	ldmdane	sp!, {r1}^
 954:	00000006 	andeq	r0, r0, r6
 958:	0000001c 	andeq	r0, r0, ip, lsl r0
 95c:	18770002 	ldmdane	r7!, {r1}^
	...
 968:	0000001c 	andeq	r0, r0, ip, lsl r0
 96c:	0000001e 	andeq	r0, r0, lr, lsl r0
 970:	007d0002 	rsbseq	r0, sp, r2
 974:	0000001e 	andeq	r0, r0, lr, lsl r0
 978:	00000020 	andeq	r0, r0, r0, lsr #32
 97c:	087d0002 	ldmdaeq	sp!, {r1}^
 980:	00000020 	andeq	r0, r0, r0, lsr #32
 984:	00000022 	andeq	r0, r0, r2, lsr #32
 988:	187d0002 	ldmdane	sp!, {r1}^
 98c:	00000022 	andeq	r0, r0, r2, lsr #32
 990:	000000b4 	strheq	r0, [r0], -r4
 994:	18770002 	ldmdane	r7!, {r1}^
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	400040ac 	andmi	r4, r0, ip, lsr #1
  14:	00002530 	andeq	r2, r0, r0, lsr r5
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	0c330002 	wldrbeq	wr0, [r3], #-2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	400065dc 	ldrdmi	r6, [r0], -ip
  34:	0000026e 	andeq	r0, r0, lr, ror #4
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	0fa50002 	svceq	0x00a50002
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	4000684c 	andmi	r6, r0, ip, asr #16
  54:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	17e10002 	strbne	r0, [r1, r2]!
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	4000761c 	andmi	r7, r0, ip, lsl r6
  74:	0000009c 	muleq	r0, ip, r0
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	18ea0002 	stmiane	sl!, {r1}^
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	400076b8 			; <UNDEFINED> instruction: 0x400076b8
  94:	000000b4 	strheq	r0, [r0], -r4
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000005f8 	strdeq	r0, [r0], -r8
   4:	006d0002 	rsbeq	r0, sp, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2e010000 	worcs	wr0, wr1, wr0
  1c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
  20:	63727300 	cmnvs	r2, #0
  24:	7968705f 	stmdbvc	r8!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
  28:	766d0000 	strbtvc	r0, [sp], -r0
  2c:	2e736f5f 	mrccs	15, 3, r6, cr3, cr15, {2}
  30:	00010068 	andeq	r0, r1, r8, rrx
  34:	48766d00 	ldmdami	r6!, {r8, sl, fp, sp, lr}^
  38:	53686769 	cmnpl	r8, #27525120	; 0x1a40000
  3c:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
  40:	4c766e45 	ldclmi	14, cr6, [r6], #-276	; 0xfffffeec
  44:	632e6269 	teqvs	lr, #-1879048186	; 0x90000006
  48:	00000200 	andeq	r0, r0, r0, lsl #4
  4c:	6948766d 	stmdbvs	r8, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr}^
  50:	70536867 	subsvc	r6, r3, r7, ror #16
  54:	45646565 	strbmi	r6, [r4, #-1381]!	; 0x565
  58:	7053766e 	subsvc	r7, r3, lr, ror #12
  5c:	682e6365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, sp, lr}
  60:	00000200 	andeq	r0, r0, r0, lsl #4
  64:	5f6e6962 	svcpl	0x006e6962
  68:	5f726468 	svcpl	0x00726468
  6c:	69737774 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
  70:	0100682e 	tsteq	r0, lr, lsr #16
  74:	00000000 	andeq	r0, r0, r0
  78:	40ac0205 	adcmi	r0, ip, r5, lsl #4
  7c:	82034000 	andhi	r4, r3, #0
  80:	3e4d0103 	wmacucc	wr0, wr13, wr3
  84:	03020421 	movweq	r0, #9249	; 0x2421
  88:	03667ddd 	cmneq	r6, #14144	; 0x3740
  8c:	10032e0a 	andne	r2, r3, sl, lsl #28
  90:	ad2f4d2e 	stcge	13, cr4, [pc, #-184]!	; ffffffe0 <SerdesInfoTbl+0xbfff8020>
  94:	13034b5a 	movwne	r4, #15194	; 0x3b5a
  98:	21833e66 	orrcs	r3, r3, r6, ror #28
  9c:	3d3d7a85 	vldmdbcc	sp!, {s14-s146}
  a0:	3d3d1508 	ldccc	5, cr1, [sp, #-32]!	; 0xffffffe0
  a4:	e53d2f3d 	ldr	r2, [sp, #-3901]!	; 0xf3d
  a8:	4077213e 	rsbsmi	r2, r7, lr, lsr r1
  ac:	0402003f 	streq	r0, [r2], #-63	; 0x3f
  b0:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
  b4:	3d3d5a3e 	vldmdbcc	sp!, {s10-s71}
  b8:	3d3d1508 	ldccc	5, cr1, [sp, #-32]!	; 0xffffffe0
  bc:	e53d3d3d 	ldr	r3, [sp, #-3389]!	; 0xd3d
  c0:	3d25564b 	stccc	6, cr5, [r5, #-300]!	; 0xfffffed4
  c4:	7803ad59 	stmdavc	r3, {r0, r3, r4, r6, r8, sl, fp, sp, pc}
  c8:	200a0366 	andcs	r0, sl, r6, ror #6
  cc:	3d2ff52f 	stccc	5, cr15, [pc, #-188]!	; 18 <MV_CPU_LE+0x17>
  d0:	75403e77 	strbvc	r3, [r0, #-3703]	; 0xe77
  d4:	77684b59 			; <UNDEFINED> instruction: 0x77684b59
  d8:	214b6859 	cmpcs	fp, r9, asr r8
  dc:	59753e77 	ldmdbpl	r5!, {r0, r1, r2, r4, r5, r6, r9, sl, fp, ip, sp}^
  e0:	3d305877 	ldccc	8, cr5, [r0, #-476]!	; 0xfffffe24
  e4:	083e3d3d 	ldmdaeq	lr!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
  e8:	223d3d14 	eorscs	r3, sp, #1280	; 0x500
  ec:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
  f0:	3d3d223d 	ldccc	2, cr2, [sp, #-244]!	; 0xffffff0c
  f4:	bc083e22 	stclt	14, cr3, [r8], {34}	; 0x22
  f8:	59233d3d 	stmdbpl	r3!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
  fc:	0200223d 	andeq	r2, r0, #-805306365	; 0xd0000003
 100:	3c060104 	wstrwcc	wr0, [r6], #-16
 104:	003d3d06 	eorseq	r3, sp, r6, lsl #26
 108:	06010402 	streq	r0, [r1], -r2, lsl #8
 10c:	3d67063c 	stclcc	6, cr0, [r7, #-240]!	; 0xffffff10
 110:	01040200 	mrseq	r0, R12_usr
 114:	3d063c06 	stccc	12, cr3, [r6, #-24]	; 0xffffffe8
 118:	0402003d 	streq	r0, [r2], #-61	; 0x3d
 11c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 120:	02003d67 	andeq	r3, r0, #6592	; 0x19c0
 124:	3c060104 	wstrwcc	wr0, [r6], #-16
 128:	003d6706 	eorseq	r6, sp, r6, lsl #14
 12c:	06010402 	streq	r0, [r1], -r2, lsl #8
 130:	3d67063c 	stclcc	6, cr0, [r7, #-240]!	; 0xffffff10
 134:	59223d22 	stmdbpl	r2!, {r1, r5, r8, sl, fp, ip, sp}
 138:	2066033d 	rsbcs	r0, r6, sp, lsr r3
 13c:	2e0e0333 	mcrcs	3, 0, r0, cr14, cr3, {1}
 140:	03c92235 	biceq	r2, r9, #1342177283	; 0x50000003
 144:	022fd613 	eoreq	sp, pc, #19922944	; 0x1300000
 148:	403f1625 	eorsmi	r1, pc, r5, lsr #12
 14c:	2f69303e 	svccs	0x0069303e
 150:	40162502 	andsmi	r2, r6, r2, lsl #10
 154:	68303f40 	ldmdavs	r0!, {r6, r8, r9, sl, fp, ip, sp}
 158:	d7757540 	ldrble	r7, [r5, -r0, asr #10]!
 15c:	a03d5978 	eorsge	r5, sp, r8, ror r9
 160:	4f4b77ad 	svcmi	0x004b77ad
 164:	4b4a0a03 	blmi	1282978 <MV_CPU_LE+0x1282977>
 168:	0859595d 	ldmdaeq	r9, {r0, r2, r3, r4, r6, r8, fp, ip, lr}^
 16c:	084d4b13 	stmdaeq	sp, {r0, r1, r4, r8, r9, fp, lr}^
 170:	4b2491e6 	blmi	924910 <MV_CPU_LE+0x92490f>
 174:	91224b22 	teqls	r2, r2, lsr #22
 178:	4b224b23 	blmi	892e0c <MV_CPU_LE+0x892e0b>
 17c:	4b224b22 	blmi	892e0c <MV_CPU_LE+0x892e0b>
 180:	2f4c4b23 	svccs	0x004c4b23
 184:	ad319291 	ldcge	2, cr9, [r1, #-580]!	; 0xfffffdbc
 188:	596a4c67 	stmdbpl	sl!, {r0, r1, r2, r5, r6, sl, fp, lr}^
 18c:	00844b5b 	addeq	r4, r4, fp, asr fp
 190:	06020402 	streq	r0, [r2], -r2, lsl #8
 194:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 198:	004c0601 	subeq	r0, ip, r1, lsl #12
 19c:	84010402 	strhi	r0, [r1], #-1026	; 0x402
 1a0:	01040200 	mrseq	r0, R12_usr
 1a4:	04020067 	streq	r0, [r2], #-103	; 0x67
 1a8:	02007601 	andeq	r7, r0, #1048576	; 0x100000
 1ac:	79030104 	stmdbvc	r3, {r2, r8}
 1b0:	200a0366 	andcs	r0, sl, r6, ror #6
 1b4:	4bbb7867 	blmi	feede358 <SerdesInfoTbl+0xbeed6398>
 1b8:	85594f67 	ldrbhi	r4, [r9, #-3943]	; 0xf67
 1bc:	08839208 	stmeq	r3, {r3, r9, ip, pc}
 1c0:	94088394 	strls	r8, [r8], #-916	; 0x394
 1c4:	9e087203 	cdpls	2, 0, cr7, cr8, cr3, {0}
 1c8:	0402001e 	streq	r0, [r2], #-30
 1cc:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 1d0:	59821603 	stmibpl	r2, {r0, r1, r9, sl, ip}
 1d4:	08220891 	stmdaeq	r2!, {r0, r4, r7, fp}
 1d8:	852f083e 	strhi	r0, [pc, #-2110]!	; fffff9a2 <SerdesInfoTbl+0xbfff79e2>
 1dc:	224b224b 	subcs	r2, fp, #-1342177276	; 0xb0000004
 1e0:	e64c2f08 	strb	r2, [ip], -r8, lsl #30
 1e4:	04020083 	streq	r0, [r2], #-131	; 0x83
 1e8:	00ba0601 	adcseq	r0, sl, r1, lsl #12
 1ec:	3c020402 	stccc	4, cr0, [r2], {2}
 1f0:	03040200 	movweq	r0, #16896	; 0x4200
 1f4:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 1f8:	cb5a0603 	blgt	1681a0c <MV_CPU_LE+0x1681a0b>
 1fc:	83843008 	orrhi	r3, r4, #8
 200:	08227667 	stmdaeq	r2!, {r0, r1, r2, r5, r6, r9, sl, ip, sp, lr}
 204:	2f08592f 	svccs	0x0008592f
 208:	592f0859 	stmdbpl	pc!, {r0, r3, r4, r6, fp}	; <UNPREDICTABLE>
 20c:	084d2f08 	stmdaeq	sp, {r3, r8, r9, sl, fp, sp}^
 210:	020083d8 	andeq	r8, r0, #1610612739	; 0x60000003
 214:	ba060104 	blt	18062c <MV_CPU_LE+0x18062b>
 218:	02040200 	andeq	r0, r4, #0
 21c:	0402003c 	streq	r0, [r2], #-60	; 0x3c
 220:	02002e03 	andeq	r2, r0, #48	; 0x30
 224:	59060304 	stmdbpl	r6, {r2, r8, r9}
 228:	c8085003 	stmdagt	r8, {r0, r1, ip, lr}
 22c:	2e290330 	mcrcs	3, 1, r0, cr9, cr0, {1}
 230:	00205203 	eoreq	r5, r0, r3, lsl #4
 234:	06010402 	streq	r0, [r1], -r2, lsl #8
 238:	38030666 	stmdacc	r3, {r1, r2, r5, r6, r9, sl}
 23c:	08915974 	ldmeq	r1, {r2, r4, r5, r6, r8, fp, ip, lr}
 240:	03678430 	cmneq	r7, #805306368	; 0x30000000
 244:	02007479 	andeq	r7, r0, #2030043136	; 0x79000000
 248:	66060104 	strvs	r0, [r6], -r4, lsl #2
 24c:	660f0306 	strvs	r0, [pc], -r6, lsl #6
 250:	5a4b8784 	bpl	12e2068 <MV_CPU_LE+0x12e2067>
 254:	08915a4c 	ldmeq	r1, {r2, r3, r6, r9, fp, ip, lr}
 258:	672f0822 	strvs	r0, [pc, -r2, lsr #16]!
 25c:	04020069 	streq	r0, [r2], #-105	; 0x69
 260:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 264:	83964c59 	orrshi	r4, r6, #22784	; 0x5900
 268:	040200e6 	streq	r0, [r2], #-230	; 0xe6
 26c:	06820601 	streq	r0, [r2], r1, lsl #12
 270:	5a4cf44b 	bpl	133d3a4 <MV_CPU_LE+0x133d3a3>
 274:	08226a08 	stmdaeq	r2!, {r3, r9, fp, sp, lr}
 278:	22ca6730 	sbccs	r6, sl, #12582912	; 0xc00000
 27c:	22762f08 	rsbscs	r2, r6, #32
 280:	08592f08 	ldmdaeq	r9, {r3, r8, r9, sl, fp, sp}^
 284:	2f08592f 	svccs	0x0008592f
 288:	4d2f0859 	stcmi	8, cr0, [pc, #-356]!	; 12c <MV_CPU_LE+0x12b>
 28c:	c8084b03 	stmdagt	r8, {r0, r1, r8, r9, fp, lr}
 290:	032e0a03 	teqeq	lr, #12288	; 0x3000
 294:	17032e13 	smladne	r3, r3, lr, r2
 298:	2048032e 	subcs	r0, r8, lr, lsr #6
 29c:	01040200 	mrseq	r0, R12_usr
 2a0:	03066606 	movweq	r6, #26118	; 0x6606
 2a4:	767400c0 	ldrbtvc	r0, [r4], -r0, asr #1
 2a8:	67596784 	ldrbvs	r6, [r9, -r4, lsl #15]
 2ac:	68c96759 	stmiavs	r9, {r0, r3, r4, r6, r8, r9, sl, sp, lr}^
 2b0:	0892597c 	ldmeq	r2, {r2, r3, r4, r5, r6, r8, fp, ip, lr}
 2b4:	00936734 	addseq	r6, r3, r4, lsr r7
 2b8:	06010402 	streq	r0, [r1], -r2, lsl #8
 2bc:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 2c0:	02008202 	andeq	r8, r0, #536870912	; 0x20000000
 2c4:	20080304 	andcs	r0, r8, r4, lsl #6
 2c8:	04040200 	streq	r0, [r4], #-512	; 0x200
 2cc:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 2d0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
 2d4:	00d60704 	sbcseq	r0, r6, r4, lsl #14
 2d8:	08080402 	stmdaeq	r8, {r1, sl}
 2dc:	04020074 	streq	r0, [r2], #-116	; 0x74
 2e0:	02004a09 	andeq	r4, r0, #36864	; 0x9000
 2e4:	00740a04 	rsbseq	r0, r4, r4, lsl #20
 2e8:	080b0402 	stmdaeq	fp, {r1, sl}
 2ec:	04020066 	streq	r0, [r2], #-102	; 0x66
 2f0:	02006605 	andeq	r6, r0, #5242880	; 0x500000
 2f4:	004a0c04 	subeq	r0, sl, r4, lsl #24
 2f8:	c80d0402 	stmdagt	sp, {r1, sl}
 2fc:	0f040200 	svceq	0x00040200
 300:	0200ba08 	andeq	fp, r0, #32768	; 0x8000
 304:	5a060f04 	bpl	183f1c <MV_CPU_LE+0x183f1b>
 308:	0f040200 	svceq	0x00040200
 30c:	83678383 	cmnhi	r7, #201326594	; 0xc000002
 310:	67766767 	ldrbvs	r6, [r6, -r7, ror #14]!
 314:	01040200 	mrseq	r0, R12_usr
 318:	02004a06 	andeq	r4, r0, #24576	; 0x6000
 31c:	00820204 	addeq	r0, r2, r4, lsl #4
 320:	08030402 	stmdaeq	r3, {r1, sl}
 324:	04020020 	streq	r0, [r2], #-32
 328:	02002e04 	andeq	r2, r0, #64	; 0x40
 32c:	004a0604 	subeq	r0, sl, r4, lsl #12
 330:	d6070402 	strle	r0, [r7], -r2, lsl #8
 334:	08040200 	stmdaeq	r4, {r9}
 338:	02007408 	andeq	r7, r0, #134217728	; 0x8000000
 33c:	004a0904 	subeq	r0, sl, r4, lsl #18
 340:	740a0402 	strvc	r0, [sl], #-1026	; 0x402
 344:	0b040200 	bleq	100b4c <MV_CPU_LE+0x100b4b>
 348:	02006608 	andeq	r6, r0, #8388608	; 0x800000
 34c:	00660504 	rsbeq	r0, r6, r4, lsl #10
 350:	4a0c0402 	bmi	301360 <MV_CPU_LE+0x30135f>
 354:	0d040200 	stceq	2, cr0, [r4]
 358:	040200c8 	streq	r0, [r2], #-200	; 0xc8
 35c:	00ba080f 	adcseq	r0, sl, pc, lsl #16
 360:	060f0402 	streq	r0, [pc], -r2, lsl #8
 364:	6e038340 	cdpvs	3, 0, cr8, cr3, cr0, {2}
 368:	03013502 	movweq	r3, #5378	; 0x1502
 36c:	02002075 	andeq	r2, r0, #117	; 0x75
 370:	66060104 	strvs	r0, [r6], -r4, lsl #2
 374:	74250306 	strtvc	r0, [r5], #-774	; 0x306
 378:	68598385 	ldmdavs	r9, {r0, r2, r7, r8, r9, pc}^
 37c:	68596859 	ldmdavs	r9, {r0, r3, r4, r6, fp, sp, lr}^
 380:	5b7c6859 	blpl	1f1a4ec <MV_CPU_LE+0x1f1a4eb>
 384:	08230892 	stmdaeq	r3!, {r1, r4, r7, fp}
 388:	0069672f 	rsbeq	r6, r9, pc, lsr #14
 38c:	06010402 	streq	r0, [r1], -r2, lsl #8
 390:	4c59064a 	mrrcmi	6, 4, r0, r9, cr10
 394:	04020094 	streq	r0, [r2], #-148	; 0x94
 398:	00820601 	addeq	r0, r2, r1, lsl #12
 39c:	06020402 	streq	r0, [r2], -r2, lsl #8
 3a0:	0402004b 	streq	r0, [r2], #-75	; 0x4b
 3a4:	083e6502 	ldmdaeq	lr!, {r1, r8, sl, sp, lr}
 3a8:	300822cb 	andcc	r2, r8, fp, asr #5
 3ac:	cccecc6a 	stclgt	12, cr12, [lr], {106}	; 0x6a
 3b0:	22cb67e6 	sbccs	r6, fp, #60293120	; 0x3980000
 3b4:	78783008 	ldmdavc	r8!, {r3, ip, sp}^
 3b8:	76678478 			; <UNDEFINED> instruction: 0x76678478
 3bc:	592f0822 	stmdbpl	pc!, {r1, r5, fp}	; <UNPREDICTABLE>
 3c0:	08592f08 	ldmdaeq	r9, {r3, r8, r9, sl, fp, sp}^
 3c4:	3d08592f 	stccc	9, cr5, [r8, #-188]	; 0xffffff44
 3c8:	08be084e 	ldmeq	lr!, {r1, r2, r3, r6, fp}
 3cc:	08bf08be 	ldmeq	pc!, {r1, r2, r3, r4, r5, r7, fp}	; <UNPREDICTABLE>
 3d0:	9f0367d8 	svcls	0x000367d8
 3d4:	03c8087f 	biceq	r0, r8, #8323072	; 0x7f0000
 3d8:	03362e0b 	teqeq	r6, #176	; 0xb0
 3dc:	ab032e3c 	blge	cbcd4 <MV_CPU_LE+0xcbcd3>
 3e0:	0200207f 	andeq	r2, r0, #127	; 0x7f
 3e4:	66060104 	strvs	r0, [r6], -r4, lsl #2
 3e8:	00ed0306 	rsceq	r0, sp, r6, lsl #6
 3ec:	08925b74 	ldmeq	r2, {r2, r4, r5, r6, r8, r9, fp, ip, lr}
 3f0:	672f0815 			; <UNDEFINED> instruction: 0x672f0815
 3f4:	7a034b67 	bvc	d3198 <MV_CPU_LE+0xd3197>
 3f8:	7a039e08 	bvc	e7c20 <MV_CPU_LE+0xe7c1f>
 3fc:	04020020 	streq	r0, [r2], #-32
 400:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 404:	4b661503 	blmi	1985818 <MV_CPU_LE+0x1985817>
 408:	5a4b224b 	bpl	12c8d3c <MV_CPU_LE+0x12c8d3b>
 40c:	08230891 	stmdaeq	r3!, {r0, r4, r7, fp}
 410:	682f083f 	stmdavs	pc!, {r0, r1, r2, r3, r4, r5, fp}	; <UNPREDICTABLE>
 414:	224b75e6 	subcs	r7, fp, #964689920	; 0x39800000
 418:	75842f08 	strvc	r2, [r4, #3848]	; 0xf08
 41c:	2f08224b 	svccs	0x0008224b
 420:	592f0859 	stmdbpl	pc!, {r0, r3, r4, r6, fp}	; <UNPREDICTABLE>
 424:	08592f08 	ldmdaeq	r9, {r3, r8, r9, sl, fp, sp}^
 428:	d8084d2f 	stmdale	r8, {r0, r1, r2, r3, r5, r8, sl, fp, lr}
 42c:	585e0367 	ldmdapl	lr, {r0, r1, r2, r5, r6, r8, r9}^
 430:	2e090331 	mcrcs	3, 0, r0, cr9, cr1, {1}
 434:	2e0b0335 	mcrcs	3, 0, r0, cr11, cr5, {1}
 438:	00205e03 	eoreq	r5, r0, r3, lsl #28
 43c:	06010402 	streq	r0, [r1], -r2, lsl #8
 440:	28030666 	stmdacs	r3, {r1, r2, r5, r6, r9, sl}
 444:	004b4c74 	subeq	r4, fp, r4, ror ip
 448:	03010402 	movweq	r0, #5122	; 0x1402
 44c:	2c036652 	stccs	6, cr6, [r3], {82}	; 0x52
 450:	92592866 	subsls	r2, r9, #6684672	; 0x660000
 454:	01040200 	mrseq	r0, R12_usr
 458:	02004a06 	andeq	r4, r0, #24576	; 0x6000
 45c:	00660304 	rsbeq	r0, r6, r4, lsl #6
 460:	4a040402 	bmi	101470 <MV_CPU_LE+0x10146f>
 464:	05040200 	streq	r0, [r4, #-512]	; 0x200
 468:	040200f2 	streq	r0, [r2], #-242	; 0xf2
 46c:	02002e06 	andeq	r2, r0, #96	; 0x60
 470:	004a0704 	subeq	r0, sl, r4, lsl #14
 474:	90080402 	andls	r0, r8, r2, lsl #8
 478:	09040200 	stmdbeq	r4, {r9}
 47c:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 480:	02006602 	andeq	r6, r0, #2097152	; 0x200000
 484:	004a0b04 	subeq	r0, sl, r4, lsl #22
 488:	e40c0402 	str	r0, [ip], #-1026	; 0x402
 48c:	0a040200 	beq	100c94 <MV_CPU_LE+0x100c93>
 490:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 494:	005a060a 	subseq	r0, sl, sl, lsl #12
 498:	670a0402 	strvs	r0, [sl, -r2, lsl #8]
 49c:	00677659 	rsbeq	r7, r7, r9, asr r6
 4a0:	06010402 	streq	r0, [r1], -r2, lsl #8
 4a4:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 4a8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
 4ac:	004a0404 	subeq	r0, sl, r4, lsl #8
 4b0:	f2050402 	vshl.s8	d0, d2, d5
 4b4:	06040200 	streq	r0, [r4], -r0, lsl #4
 4b8:	0402002e 	streq	r0, [r2], #-46	; 0x2e
 4bc:	02004a07 	andeq	r4, r0, #28672	; 0x7000
 4c0:	00900804 	addseq	r0, r0, r4, lsl #16
 4c4:	2e090402 	cdpcs	4, 0, cr0, cr9, cr2, {0}
 4c8:	02040200 	andeq	r0, r4, #0
 4cc:	04020066 	streq	r0, [r2], #-102	; 0x66
 4d0:	02004a0b 	andeq	r4, r0, #45056	; 0xb000
 4d4:	00e40c04 	rsceq	r0, r4, r4, lsl #24
 4d8:	4a0a0402 	bmi	2814e8 <MV_CPU_LE+0x2814e7>
 4dc:	4a780306 	bmi	1e010fc <MV_CPU_LE+0x1e010fb>
 4e0:	0402001e 	streq	r0, [r2], #-30
 4e4:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 4e8:	59821103 	stmibpl	r2, {r0, r1, r8, ip}
 4ec:	02006792 	andeq	r6, r0, #38273024	; 0x2480000
 4f0:	4a060104 	bmi	180908 <MV_CPU_LE+0x180907>
 4f4:	03040200 	movweq	r0, #16896	; 0x4200
 4f8:	04020066 	streq	r0, [r2], #-102	; 0x66
 4fc:	02004a04 	andeq	r4, r0, #16384	; 0x4000
 500:	00f20504 	rscseq	r0, r2, r4, lsl #10
 504:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
 508:	07040200 	streq	r0, [r4, -r0, lsl #4]
 50c:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 510:	02009008 	andeq	r9, r0, #8
 514:	002e0904 	eoreq	r0, lr, r4, lsl #18
 518:	66020402 	strvs	r0, [r2], -r2, lsl #8
 51c:	0b040200 	bleq	100d24 <MV_CPU_LE+0x100d23>
 520:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 524:	0200e40c 	andeq	lr, r0, #201326592	; 0xc000000
 528:	004a0a04 	subeq	r0, sl, r4, lsl #20
 52c:	060a0402 	streq	r0, [sl], -r2, lsl #8
 530:	0402005a 	streq	r0, [r2], #-90	; 0x5a
 534:	0200670a 	andeq	r6, r0, #2621440	; 0x280000
 538:	4a060104 	bmi	180950 <MV_CPU_LE+0x18094f>
 53c:	03040200 	movweq	r0, #16896	; 0x4200
 540:	04020066 	streq	r0, [r2], #-102	; 0x66
 544:	02004a04 	andeq	r4, r0, #16384	; 0x4000
 548:	00f20504 	rscseq	r0, r2, r4, lsl #10
 54c:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
 550:	07040200 	streq	r0, [r4, -r0, lsl #4]
 554:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 558:	02009008 	andeq	r9, r0, #8
 55c:	002e0904 	eoreq	r0, lr, r4, lsl #18
 560:	66020402 	strvs	r0, [r2], -r2, lsl #8
 564:	0b040200 	bleq	100d6c <MV_CPU_LE+0x100d6b>
 568:	0402004a 	streq	r0, [r2], #-74	; 0x4a
 56c:	0200e40c 	andeq	lr, r0, #201326592	; 0xc000000
 570:	064a0a04 	strbeq	r0, [sl], -r4, lsl #20
 574:	02001e45 	andeq	r1, r0, #1104	; 0x450
 578:	66060104 	strvs	r0, [r6], -r4, lsl #2
 57c:	820d0306 	andhi	r0, sp, #402653184	; 0x18000000
 580:	0891596a 	ldmeq	r1, {r1, r3, r5, r6, r8, fp, ip, lr}
 584:	21bb5914 			; <UNDEFINED> instruction: 0x21bb5914
 588:	675aae08 	ldrbvs	sl, [sl, -r8, lsl #28]
 58c:	02009267 	andeq	r9, r0, #1879048198	; 0x70000006
 590:	82060104 	andhi	r0, r6, #1
 594:	084b5b06 	stmdaeq	fp, {r1, r2, r8, r9, fp, ip, lr}^
 598:	cb081dcf 	blgt	207cdc <MV_CPU_LE+0x207cdb>
 59c:	4b675a22 	blmi	19d6e2c <MV_CPU_LE+0x19d6e2b>
 5a0:	081d1908 	ldmdaeq	sp, {r3, r8, fp, ip}
 5a4:	21082515 	tstcs	r8, r5, lsl r5
 5a8:	02210859 	eoreq	r0, r1, #5832704	; 0x590000
 5ac:	2108132f 	tstcs	r8, pc, lsr #6
 5b0:	4d210859 	stcmi	8, cr0, [r1, #-356]!	; 0xfffffe9c
 5b4:	1df9084b 	ldclne	8, cr0, [r9, #300]!	; 0x12c
 5b8:	4c22f508 	stcmi	5, cr15, [r2], #-32	; 0xffffffe0
 5bc:	931d974b 	tstls	sp, #19660800	; 0x12c0000
 5c0:	7fbe0322 	svcvc	0x00be0322
 5c4:	0330322e 	teqeq	r0, #-536870910	; 0xe0000002
 5c8:	18032e0d 	stmdane	r3, {r0, r2, r3, r9, sl, fp, sp}
 5cc:	2e0c032e 	cdpcs	3, 0, cr0, cr12, cr14, {1}
 5d0:	00200d03 	eoreq	r0, r0, r3, lsl #26
 5d4:	03010402 	movweq	r0, #5122	; 0x1402
 5d8:	71667fb8 	strhvc	r7, [r6, #-248]!	; 0xffffff08
 5dc:	0402001d 	streq	r0, [r2], #-29
 5e0:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 5e4:	7400d503 	strvc	sp, [r0], #-1283	; 0x503
 5e8:	83596784 	cmphi	r9, #34603008	; 0x2100000
 5ec:	040200aa 	streq	r0, [r2], #-170	; 0xaa
 5f0:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 5f4:	022f7778 	eoreq	r7, pc, #31457280	; 0x1e00000
 5f8:	0101000d 	tsteq	r1, sp
 5fc:	00000069 	andeq	r0, r0, r9, rrx
 600:	00630002 	rsbeq	r0, r3, r2
 604:	01020000 	mrseq	r0, (UNDEF: 2)
 608:	000d0efb 	strdeq	r0, [sp], -fp
 60c:	01010101 	tsteq	r1, r1, lsl #2
 610:	01000000 	mrseq	r0, (UNDEF: 0)
 614:	2e010000 	worcs	wr0, wr1, wr0
 618:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 61c:	63727300 	cmnvs	r2, #0
 620:	7968705f 	stmdbvc	r8!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 624:	6f620000 	svcvs	0x00620000
 628:	7473746f 	ldrbtvc	r7, [r3], #-1135	; 0x46f
 62c:	5f706172 	svcpl	0x00706172
 630:	682e736f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
 634:	00000100 	andeq	r0, r0, r0, lsl #2
 638:	6948766d 	stmdbvs	r8, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr}^
 63c:	70536867 	subsvc	r6, r3, r7, ror #16
 640:	45646565 	strbmi	r6, [r4, #-1381]!	; 0x565
 644:	7053766e 	subsvc	r7, r3, lr, ror #12
 648:	682e6365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, sp, lr}
 64c:	00000200 	andeq	r0, r0, r0, lsl #4
 650:	6948766d 	stmdbvs	r8, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr}^
 654:	70536867 	subsvc	r6, r3, r7, ror #16
 658:	45646565 	strbmi	r6, [r4, #-1381]!	; 0x565
 65c:	7053766e 	subsvc	r7, r3, lr, ror #12
 660:	632e6365 	teqvs	lr, #-1811939327	; 0x94000001
 664:	00000200 	andeq	r0, r0, r0, lsl #4
 668:	0000dd00 	andeq	sp, r0, r0, lsl #26
 66c:	4c000200 	stcmi	2, cr0, [r0], {0}
 670:	02000000 	andeq	r0, r0, #0
 674:	0d0efb01 	vstreq	d15, [lr, #-4]
 678:	01010100 	mrseq	r0, (UNDEF: 17)
 67c:	00000001 	andeq	r0, r0, r1
 680:	01000001 	tsteq	r0, r1
 684:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
 688:	72730063 	rsbsvc	r0, r3, #99	; 0x63
 68c:	74755f63 	ldrbtvc	r5, [r5], #-3939	; 0xf63
 690:	00006c69 	andeq	r6, r0, r9, ror #24
 694:	746f6f62 	strbtvc	r6, [pc], #-3938	; 69c <MV_CPU_LE+0x69b>
 698:	61727473 	cmnvs	r2, r3, ror r4
 69c:	736f5f70 	cmnvc	pc, #448	; 0x1c0
 6a0:	0100682e 	tsteq	r0, lr, lsr #16
 6a4:	766d0000 	strbtvc	r0, [sp], -r0
 6a8:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 6ac:	0200632e 	andeq	r6, r0, #-1207959552	; 0xb8000000
 6b0:	766d0000 	strbtvc	r0, [sp], -r0
 6b4:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 6b8:	0100682e 	tsteq	r0, lr, lsr #16
 6bc:	00000000 	andeq	r0, r0, r0
 6c0:	65dc0205 	ldrbvs	r0, [ip, #517]	; 0x205
 6c4:	88034000 	stmdahi	r3, {lr}
 6c8:	3e4d0103 	wmacucc	wr0, wr13, wr3
 6cc:	03020421 	movweq	r0, #9249	; 0x2421
 6d0:	3e667dcc 	cdpcc	13, 6, cr7, cr6, cr12, {6}
 6d4:	3da03e5a 	stccc	14, cr3, [r0, #360]!	; 0x168
 6d8:	58090368 	stmdapl	r9, {r3, r5, r6, r8, r9}
 6dc:	223d3108 	eorscs	r3, sp, #2
 6e0:	233d223d 	teqcs	sp, #-805306365	; 0xd0000003
 6e4:	4b4b233d 	blmi	12c93e0 <MV_CPU_LE+0x12c93df>
 6e8:	4c4d674b 	mcrrmi	7, 4, r6, sp, cr11
 6ec:	59661403 	stmdbpl	r6!, {r0, r1, sl, ip}^
 6f0:	04020059 	streq	r0, [r2], #-89	; 0x59
 6f4:	06200601 	strteq	r0, [r0], -r1, lsl #12
 6f8:	0c033e75 	stceq	14, cr3, [r3], {117}	; 0x75
 6fc:	59244d58 	stmdbpl	r4!, {r3, r4, r6, r8, sl, fp, lr}
 700:	01040200 	mrseq	r0, R12_usr
 704:	4c064a06 	stcmi	10, cr4, [r6], {6}
 708:	01040200 	mrseq	r0, R12_usr
 70c:	034a7903 	movteq	r7, #43267	; 0xa903
 710:	0d034a0a 	vstreq	s8, [r3, #-40]	; 0xffffffd8
 714:	2f3f5b66 	svccs	0x003f5b66
 718:	604b3e3f 	subvs	r3, fp, pc, lsr lr
 71c:	db3e3f2f 	blle	f903e0 <MV_CPU_LE+0xf903df>
 720:	62033ecb 	andvs	r3, r3, #3248	; 0xcb0
 724:	0402003c 	streq	r0, [r2], #-60	; 0x3c
 728:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 72c:	753c2503 	ldrvc	r2, [ip, #-1283]!	; 0x503
 730:	7413035b 	ldrvc	r0, [r3], #-859	; 0x35b
 734:	0200593e 	andeq	r5, r0, #1015808	; 0xf8000
 738:	20060104 	andcs	r0, r6, r4, lsl #2
 73c:	03407506 	movteq	r7, #1286	; 0x506
 740:	593e7414 	ldmdbpl	lr!, {r2, r4, sl, ip, sp, lr}
 744:	0006025c 	andeq	r0, r6, ip, asr r2
 748:	02800101 	addeq	r0, r0, #1073741824	; 0x40000000
 74c:	00020000 	andeq	r0, r2, r0
 750:	0000004c 	andeq	r0, r0, ip, asr #32
 754:	0efb0102 	wmulsmreq	wr0, wr11, wr2
 758:	0101000d 	tsteq	r1, sp
 75c:	00000101 	andeq	r0, r0, r1, lsl #2
 760:	00000100 	andeq	r0, r0, r0, lsl #2
 764:	692f2e01 	stmdbvs	pc!, {r0, r9, sl, fp, sp}	; <UNPREDICTABLE>
 768:	7300636e 	movwvc	r6, #878	; 0x36e
 76c:	755f6372 	ldrbvc	r6, [pc, #-882]	; 402 <MV_CPU_LE+0x401>
 770:	006c6974 	rsbeq	r6, ip, r4, ror r9
 774:	5f766d00 	svcpl	0x00766d00
 778:	682e736f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
 77c:	00000100 	andeq	r0, r0, r0, lsl #2
 780:	745f766d 	ldrbvc	r7, [pc], #-1645	; 788 <MV_CPU_LE+0x787>
 784:	2e697377 	mcrcs	3, 3, r7, cr9, cr7, {3}
 788:	00020063 	andeq	r0, r2, r3, rrx
 78c:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 790:	7264685f 	rsbvc	r6, r4, #6225920	; 0x5f0000
 794:	7377745f 	cmnvc	r7, #1593835520	; 0x5f000000
 798:	00682e69 	rsbeq	r2, r8, r9, ror #28
 79c:	00000001 	andeq	r0, r0, r1
 7a0:	4c020500 	stcmi	5, cr0, [r2], {0}
 7a4:	03400068 	movteq	r0, #104	; 0x68
 7a8:	4d010382 	stcmi	3, cr0, [r1, #-520]	; 0xfffffdf8
 7ac:	0204213e 	andeq	r2, r4, #-2147483633	; 0x8000000f
 7b0:	667dcc03 	ldrbtvs	ip, [sp], -r3, lsl #24
 7b4:	2f3e5959 	svccs	0x003e5959
 7b8:	59741a03 	ldmdbpl	r4!, {r0, r1, r9, fp, ip}^
 7bc:	cb3e7540 	blgt	f9dcc4 <MV_CPU_LE+0xf9dcc3>
 7c0:	3d4d3dcb 	stclcc	13, cr3, [sp, #-812]	; 0xfffffcd4
 7c4:	01040200 	mrseq	r0, R12_usr
 7c8:	02002006 	andeq	r2, r0, #6
 7cc:	06740204 	ldrbteq	r0, [r4], -r4, lsl #4
 7d0:	083f91da 	ldmdaeq	pc!, {r1, r3, r4, r6, r7, r8, ip, pc}	; <UNPREDICTABLE>
 7d4:	00593f13 	subseq	r3, r9, r3, lsl pc
 7d8:	06010402 	streq	r0, [r1], -r2, lsl #8
 7dc:	3e3d063c 	mrccc	6, 1, r0, cr13, cr12, {1}
 7e0:	9e150330 	mrcls	3, 0, r0, cr5, cr0, {1}
 7e4:	4dcacb5c 	vstrmi	d28, [sl, #368]	; 0x170
 7e8:	0402003d 	streq	r0, [r2], #-61	; 0x3d
 7ec:	06200601 	strteq	r0, [r0], -r1, lsl #12
 7f0:	91da1308 	bicsls	r1, sl, r8, lsl #6
 7f4:	3f13083f 	svccc	0x0013083f
 7f8:	2f3e3d59 	svccs	0x003e3d59
 7fc:	5d901303 	ldcpl	3, cr1, [r0, #12]
 800:	2f3ebb75 	svccs	0x003ebb75
 804:	5b741503 	blpl	1d05c18 <MV_CPU_LE+0x1d05c17>
 808:	4dcbc94c 	stclmi	9, cr12, [fp, #304]	; 0x130
 80c:	5c741303 	ldclpl	3, cr1, [r4], #-12
 810:	034ccbca 	movteq	ip, #52170	; 0xcbca
 814:	3e837419 	mcrcc	4, 4, r7, cr3, cr9, {0}
 818:	4b900903 	blmi	fe402c2c <SerdesInfoTbl+0xbe3fac6c>
 81c:	2108674b 	tstcs	r8, fp, asr #14
 820:	04020076 	streq	r0, [r2], #-118	; 0x76
 824:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 828:	2f2f2f4b 	svccs	0x002f2f4b
 82c:	002e7703 	eoreq	r7, lr, r3, lsl #14
 830:	06010402 	streq	r0, [r1], -r2, lsl #8
 834:	003b064a 	eorseq	r0, fp, sl, asr #12
 838:	06010402 	streq	r0, [r1], -r2, lsl #8
 83c:	0f03064a 	svceq	0x0003064a
 840:	b0684d3c 	rsblt	r4, r8, ip, lsr sp
 844:	4c764cbd 	ldclmi	12, cr4, [r6], #-756	; 0xfffffd0c
 848:	4c934d3d 	ldcmi	13, cr4, [r3], {61}	; 0x3d
 84c:	9476bbbf 	ldrbtls	fp, [r6], #-3007	; 0xbbf
 850:	aff4cbc9 	svcge	0x00f4cbc9
 854:	1303214c 	movwne	r2, #12620	; 0x314c
 858:	03ca5974 	biceq	r5, sl, #1900544	; 0x1d0000
 85c:	bd5b8213 	ldcllt	2, cr8, [fp, #-76]	; 0xffffffb4
 860:	7418034d 	ldrvc	r0, [r8], #-845	; 0x34d
 864:	a1b04b85 	lslsge	r4, r5, #23
 868:	86741f03 	ldrbthi	r1, [r4], -r3, lsl #30
 86c:	ae4b4c68 	cdpge	12, 4, cr4, cr11, cr8, {3}
 870:	003d4d4d 	eorseq	r4, sp, sp, asr #26
 874:	06010402 	streq	r0, [r1], -r2, lsl #8
 878:	04020020 	streq	r0, [r2], #-32
 87c:	db067402 	blle	19d88c <MV_CPU_LE+0x19d88b>
 880:	593f3073 	ldmdbpl	pc!, {r0, r1, r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
 884:	01040200 	mrseq	r0, R12_usr
 888:	02003c06 	andeq	r3, r0, #1536	; 0x600
 88c:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
 890:	67403f3d 	smlaldxvs	r3, r0, sp, pc	; <UNPREDICTABLE>
 894:	003d4daf 	eorseq	r4, sp, pc, lsr #27
 898:	06010402 	streq	r0, [r1], -r2, lsl #8
 89c:	04020020 	streq	r0, [r2], #-32
 8a0:	db067402 	blle	19d8b0 <MV_CPU_LE+0x19d8af>
 8a4:	593f3073 	ldmdbpl	pc!, {r0, r1, r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
 8a8:	01040200 	mrseq	r0, R12_usr
 8ac:	02003c06 	andeq	r3, r0, #1536	; 0x600
 8b0:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
 8b4:	2f3f3f3d 	svccs	0x003f3f3d
 8b8:	86ba1903 	ldrthi	r1, [sl], r3, lsl #18
 8bc:	4dae4b68 	stcmi	11, cr4, [lr, #416]!	; 0x1a0
 8c0:	02003d4d 	andeq	r3, r0, #4928	; 0x1340
 8c4:	20060104 	andcs	r0, r6, r4, lsl #2
 8c8:	02040200 	andeq	r0, r4, #0
 8cc:	73db0674 	bicsvc	r0, fp, #121634816	; 0x7400000
 8d0:	00593f30 	subseq	r3, r9, r0, lsr pc
 8d4:	06010402 	streq	r0, [r1], -r2, lsl #8
 8d8:	0402003c 	streq	r0, [r2], #-60	; 0x3c
 8dc:	3d063c02 	stccc	12, cr3, [r6, #-8]
 8e0:	032f3f3f 	teqeq	pc, #252	; 0xfc
 8e4:	30759e1e 	rsbscc	r9, r5, lr, lsl lr
 8e8:	003d3f3d 	eorseq	r3, sp, sp, lsr pc
 8ec:	06010402 	streq	r0, [r1], -r2, lsl #8
 8f0:	04020020 	streq	r0, [r2], #-32
 8f4:	db067402 	blle	19d904 <MV_CPU_LE+0x19d903>
 8f8:	bb403073 	bllt	100cacc <MV_CPU_LE+0x100cacb>
 8fc:	3d4d4c4b 	stclcc	12, cr4, [sp, #-300]	; 0xfffffed4
 900:	01040200 	mrseq	r0, R12_usr
 904:	02002006 	andeq	r2, r0, #6
 908:	06740204 	ldrbteq	r0, [r4], -r4, lsl #4
 90c:	3f3073db 	svccc	0x003073db
 910:	02003e59 	andeq	r3, r0, #1424	; 0x590
 914:	6a030104 	bvs	c0d2c <MV_CPU_LE+0xc0d2b>
 918:	3c1b033c 	ldccc	3, cr0, [fp], {60}	; 0x3c
 91c:	ac1f032f 	ldcge	3, cr0, [pc], {47}	; 0x2f
 920:	3f3d3075 	svccc	0x003d3075
 924:	0402003d 	streq	r0, [r2], #-61	; 0x3d
 928:	00200601 	eoreq	r0, r0, r1, lsl #12
 92c:	74020402 	strvc	r0, [r2], #-1026	; 0x402
 930:	3073db06 	rsbscc	sp, r3, r6, lsl #22
 934:	4bc93e3f 	blmi	ff250238 <SerdesInfoTbl+0xbf248278>
 938:	003d4cae 	eorseq	r4, sp, lr, lsr #25
 93c:	06010402 	streq	r0, [r1], -r2, lsl #8
 940:	04020020 	streq	r0, [r2], #-32
 944:	db067402 	blle	19d954 <MV_CPU_LE+0x19d953>
 948:	593f3073 	ldmdbpl	pc!, {r0, r1, r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
 94c:	01040200 	mrseq	r0, R12_usr
 950:	3e063c06 	cdpcc	12, 0, cr3, cr6, cr6, {0}
 954:	0402003d 	streq	r0, [r2], #-61	; 0x3d
 958:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 95c:	4bf3403e 	blmi	ffcd0a5c <SerdesInfoTbl+0xbfcc8a9c>
 960:	01040200 	mrseq	r0, R12_usr
 964:	034a6103 	movteq	r6, #41219	; 0xa103
 968:	032f3c22 	teqeq	pc, #8704	; 0x2200
 96c:	3d78ba1c 	vldmdbcc	r8!, {s23-s50}
 970:	3d4c3d59 	stclcc	13, cr3, [ip, #-356]	; 0xfffffe9c
 974:	1f03923e 	svcne	0x0003923e
 978:	02008374 	andeq	r8, r0, #-805306367	; 0xd0000001
 97c:	3c060104 	wstrwcc	wr0, [r6], #-16
 980:	753d3d06 	ldrvc	r3, [sp, #-3334]!	; 0xd06
 984:	ad4b414b 	wstrdge	wr4, [fp, #-300]	; 0xfffffed4
 988:	4bc93e4b 	blmi	ff2502bc <SerdesInfoTbl+0xbf2482fc>
 98c:	3f4b753e 	svccc	0x004b753e
 990:	913e4bad 	teqls	lr, sp, lsr #23
 994:	3f753f4b 	svccc	0x00753f4b
 998:	20032f4d 	andcs	r2, r3, sp, asr #30
 99c:	02008374 	andeq	r8, r0, #-805306367	; 0xd0000001
 9a0:	3c060104 	wstrwcc	wr0, [r6], #-16
 9a4:	753e3d06 	ldrvc	r3, [lr, #-3334]!	; 0xd06
 9a8:	4bad3f4b 	blmi	feb506dc <SerdesInfoTbl+0xbeb4871c>
 9ac:	4bc94b40 	blmi	ff2536b4 <SerdesInfoTbl+0xbf24b6f4>
 9b0:	3e4b913f 	mcrcc	1, 2, r9, cr11, cr15, {1}
 9b4:	7b2f3f75 	blvc	bd0790 <MV_CPU_LE+0xbd078f>
 9b8:	4c3d9f4e 	ldcmi	15, cr9, [sp], #-312	; 0xfffffec8
 9bc:	6892763f 	ldmvs	r2, {r0, r1, r2, r3, r4, r5, r9, sl, ip, sp, lr}
 9c0:	040200bc 	streq	r0, [r2], #-188	; 0xbc
 9c4:	06200601 	strteq	r0, [r0], -r1, lsl #12
 9c8:	00060292 	muleq	r6, r2, r2
 9cc:	00530101 	subseq	r0, r3, r1, lsl #2
 9d0:	00020000 	andeq	r0, r2, r0
 9d4:	00000027 	andeq	r0, r0, r7, lsr #32
 9d8:	0efb0102 	wmulsmreq	wr0, wr11, wr2
 9dc:	0101000d 	tsteq	r1, sp
 9e0:	00000101 	andeq	r0, r0, r1, lsl #2
 9e4:	00000100 	andeq	r0, r0, r0, lsl #2
 9e8:	63727301 	cmnvs	r2, #67108864	; 0x4000000
 9ec:	6974755f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
 9f0:	7500006c 	strvc	r0, [r0, #-108]	; 0x6c
 9f4:	736c6974 	cmnvc	ip, #1900544	; 0x1d0000
 9f8:	0100632e 	tsteq	r0, lr, lsr #6
 9fc:	00000000 	andeq	r0, r0, r0
 a00:	761c0205 	ldrvc	r0, [ip], -r5, lsl #4
 a04:	c0034000 	andgt	r4, r3, r0
 a08:	2f670100 	svccs	0x00670100
 a0c:	04020021 	streq	r0, [r2], #-33	; 0x21
 a10:	21bc8101 			; <UNDEFINED> instruction: 0x21bc8101
 a14:	2f2f6769 	svccs	0x002f6769
 a18:	04020021 	streq	r0, [r2], #-33	; 0x21
 a1c:	21bcb901 			; <UNDEFINED> instruction: 0x21bcb901
 a20:	01000602 	tsteq	r0, r2, lsl #12
 a24:	00006901 	andeq	r6, r0, r1, lsl #18
 a28:	37000200 	strcc	r0, [r0, -r0, lsl #4]
 a2c:	02000000 	andeq	r0, r0, #0
 a30:	0d0efb01 	vstreq	d15, [lr, #-4]
 a34:	01010100 	mrseq	r0, (UNDEF: 17)
 a38:	00000001 	andeq	r0, r0, r1
 a3c:	01000001 	tsteq	r0, r1
 a40:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
 a44:	72730063 	rsbsvc	r0, r3, #99	; 0x63
 a48:	74755f63 	ldrbtvc	r5, [r5], #-3939	; 0xf63
 a4c:	00006c69 	andeq	r6, r0, r9, ror #24
 a50:	6f5f766d 	svcvs	0x005f766d
 a54:	00682e73 	rsbeq	r2, r8, r3, ror lr
 a58:	74000001 	strvc	r0, [r0], #-1
 a5c:	2e656d69 	cdpcs	13, 6, cr6, cr5, cr9, {3}
 a60:	00020063 	andeq	r0, r2, r3, rrx
 a64:	05000000 	streq	r0, [r0]
 a68:	0076b802 	rsbseq	fp, r6, r2, lsl #16
 a6c:	03820340 	orreq	r0, r2, #1
 a70:	213e4d01 	teqcs	lr, r1, lsl #26
 a74:	d0030204 	andle	r0, r3, r4, lsl #4
 a78:	924f667d 	subls	r6, pc, #131072000	; 0x7d00000
 a7c:	4b756a67 	blmi	1d5b420 <MV_CPU_LE+0x1d5b41f>
 a80:	00684b4b 	rsbeq	r4, r8, fp, asr #22
 a84:	06010402 	streq	r0, [r1], -r2, lsl #8
 a88:	4b930620 	blmi	fe4c2310 <SerdesInfoTbl+0xbe4ba350>
 a8c:	00060267 	andeq	r0, r6, r7, ror #4
 a90:	Address 0x00000a90 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	4d5f564d 	ldclmi	6, cr5, [pc, #-308]	; fffffed4 <SerdesInfoTbl+0xbfff7f14>
   4:	4f494d45 	svcmi	0x00494d45
   8:	33454c5f 	movtcc	r4, #23647	; 0x5c5f
   c:	45525f32 	ldrbmi	r5, [r2, #-3890]	; 0xf32
  10:	4d004441 	stcmi	4, cr4, [r0, #-260]	; 0xfffffefc
  14:	54535f56 	ldrbpl	r5, [r3], #-3926	; 0xf56
  18:	53555441 	cmppl	r5, #1090519040	; 0x41000000
  1c:	5f564d00 	svcpl	0x00564d00
  20:	00363155 	eorseq	r3, r6, r5, asr r1
  24:	6f42766d 	svcvs	0x0042766d
  28:	4d647261 	stclmi	2, cr7, [r4, #-388]!	; 0xfffffe7c
  2c:	6c75646f 	ldclvs	4, cr6, [r5], #-444	; 0xfffffe44
  30:	63537365 	cmpvs	r3, #-1811939327	; 0x94000001
  34:	6d006e61 	stcvs	14, cr6, [r0, #-388]	; 0xfffffe7c
  38:	616f4276 	smcvs	62502	; 0xf426
  3c:	64496472 	strbvs	r6, [r9], #-1138	; 0x472
  40:	00746547 	rsbseq	r6, r4, r7, asr #10
  44:	6f42766d 	svcvs	0x0042766d
  48:	53647261 	cmnpl	r4, #268435462	; 0x10000006
  4c:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
  50:	67664373 			; <UNDEFINED> instruction: 0x67664373
  54:	00746547 	rsbseq	r6, r4, r7, asr #10
  58:	7443766d 	strbvc	r7, [r3], #-1645	; 0x66d
  5c:	65536c72 	ldrbvs	r6, [r3, #-3186]	; 0xc72
  60:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
  64:	4c78614d 	wldrdmi	wr6, [r8], #-308	; 0xfffffecc
  68:	73656e69 	cmnvc	r5, #1680	; 0x690
  6c:	00746547 	rsbseq	r6, r4, r7, asr #10
  70:	74697753 	strbtvc	r7, [r9], #-1875	; 0x753
  74:	6f4d6863 	svcvs	0x004d6863
  78:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0x564
  7c:	42766d00 	rsbsmi	r6, r6, #0
  80:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
  84:	46757043 	ldrbtmi	r7, [r5], -r3, asr #32
  88:	47716572 			; <UNDEFINED> instruction: 0x47716572
  8c:	73007465 	movwvc	r7, #1125	; 0x465
  90:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
  94:	746e6920 	strbtvc	r6, [lr], #-2336	; 0x920
  98:	5f564d00 	svcpl	0x00564d00
  9c:	5f584550 	svcpl	0x00584550
  a0:	544f4f52 	strbpl	r4, [pc], #-3922	; a8 <MV_CPU_LE+0xa7>
  a4:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; ffffff30 <SerdesInfoTbl+0xbfff7f70>
  a8:	58454c50 	stmdapl	r5, {r4, r6, sl, fp, lr}^
  ac:	5f564d00 	svcpl	0x00564d00
  b0:	5f4e4942 	svcpl	0x004e4942
  b4:	44524553 	ldrbmi	r4, [r2], #-1363	; 0x553
  b8:	555f5345 	ldrbpl	r5, [pc, #-837]	; fffffd7b <SerdesInfoTbl+0xbfff7dbb>
  bc:	5f54494e 	svcpl	0x0054494e
  c0:	58444e49 	stmdapl	r4, {r0, r3, r6, r9, sl, fp, lr}^
  c4:	48787200 	ldmdami	r8!, {r9, ip, sp, lr}^
  c8:	49686769 	stmdbmi	r8!, {r0, r3, r5, r6, r8, r9, sl, sp, lr}^
  cc:	6465706d 	strbtvs	r7, [r5], #-109	; 0x6d
  d0:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xe61
  d4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
  d8:	78657000 	stmdavc	r5!, {ip, sp, lr}^
  dc:	656e694c 	strbvs	r6, [lr, #-2380]!	; 0x94c
  e0:	006d754e 	rsbeq	r7, sp, lr, asr #10
  e4:	4d786570 	ldclmi	5, cr6, [r8, #-448]!	; 0xfffffe40
  e8:	4d00646f 	stcmi	4, cr6, [r0, #-444]	; 0xfffffe44
  ec:	45535f56 	ldrbmi	r5, [r3, #-3926]	; 0xf56
  f0:	53454452 	movtpl	r4, #21586	; 0x5452
  f4:	4148435f 	cmpmi	r8, pc, asr r3
  f8:	5f45474e 	svcpl	0x0045474e
  fc:	48505f4d 	ldmdami	r0, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
 100:	65730059 	ldrbvs	r0, [r3, #-89]!	; 0x59
 104:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 108:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
 10c:	65726600 	ldrbvs	r6, [r2, #-1536]!	; 0x600
 110:	61760071 	cmnvs	r6, r1, ror r0
 114:	4f64696c 	svcmi	0x0064696c
 118:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0x666
 11c:	564d0074 			; <UNDEFINED> instruction: 0x564d0074
 120:	4e49425f 	mcrmi	2, 2, r4, cr9, cr15, {2}
 124:	5245535f 	subpl	r5, r5, #2080374785	; 0x7c000001
 128:	5f534544 	svcpl	0x00534544
 12c:	00474643 	subeq	r4, r7, r3, asr #12
 130:	75646f6d 	strbvc	r6, [r4, #-3949]!	; 0xf6d
 134:	6f43656c 	svcvs	0x0043656c
 138:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 13c:	00646574 	rsbeq	r6, r4, r4, ror r5
 140:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 144:	00737365 	rsbseq	r7, r3, r5, ror #6
 148:	50766d5f 	rsbspl	r6, r6, pc, asr sp
 14c:	79547865 	ldmdbvc	r4, {r0, r2, r5, r6, fp, ip, sp, lr}^
 150:	41006570 	tstmi	r0, r0, ror r5
 154:	37524444 	ldrbcc	r4, [r2, -r4, asr #8]
 158:	5449425f 	strbpl	r4, [r9], #-607	; 0x25f
 15c:	78657000 	stmdavc	r5!, {ip, sp, lr}^
 160:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
 164:	5f564d00 	svcpl	0x00564d00
 168:	65640038 	strbvs	r0, [r4, #-56]!	; 0x38
 16c:	6d754e76 	ldclvs	14, cr4, [r5, #-472]!	; 0xfffffe28
 170:	72657300 	rsbvc	r7, r5, #0
 174:	56736564 	ldrbtpl	r6, [r3], -r4, ror #10
 178:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
 17c:	53776f4c 	cmnpl	r7, #304	; 0x130
 180:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
 184:	5f564d00 	svcpl	0x00564d00
 188:	5f584550 	svcpl	0x00584550
 18c:	5f444e45 	svcpl	0x00444e45
 190:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
 194:	65700054 	ldrbvs	r0, [r0, #-84]!	; 0x54
 198:	70003078 	andvc	r3, r0, r8, ror r0
 19c:	00317865 	eorseq	r7, r1, r5, ror #16
 1a0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 1a4:	00644964 	rsbeq	r4, r4, r4, ror #18
 1a8:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
 1ac:	694c7365 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 1b0:	5f38656e 	svcpl	0x0038656e
 1b4:	66003531 			; <UNDEFINED> instruction: 0x66003531
 1b8:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xf6c
 1bc:	43766d00 	cmnmi	r6, #0
 1c0:	486c7274 	stmdami	ip!, {r2, r4, r5, r6, r9, ip, sp, lr}^
 1c4:	53686769 	cmnpl	r8, #27525120	; 0x1a40000
 1c8:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
 1cc:	64726553 	ldrbtvs	r6, [r2], #-1363	; 0x553
 1d0:	68507365 	ldmdavs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 1d4:	6e6f4379 	mcrvs	3, 3, r4, cr15, cr9, {3}
 1d8:	00676966 	rsbeq	r6, r7, r6, ror #18
 1dc:	545f564d 	ldrbpl	r5, [pc], #-1613	; 1e4 <MV_CPU_LE+0x1e3>
 1e0:	5f495357 	svcpl	0x00495357
 1e4:	56414c53 			; <UNDEFINED> instruction: 0x56414c53
 1e8:	65640045 	strbvs	r0, [r4, #-69]!	; 0x45
 1ec:	00644976 	rsbeq	r4, r4, r6, ror r9
 1f0:	32676572 	rsbcc	r6, r7, #478150656	; 0x1c800000
 1f4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 1f8:	6f6c2067 	svcvs	0x006c2067
 1fc:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 200:	7300746e 	movwvc	r7, #1134	; 0x46e
 204:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 208:	67655273 			; <UNDEFINED> instruction: 0x67655273
 20c:	53776f4c 	cmnpl	r7, #304	; 0x130
 210:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
 214:	52455300 	subpl	r5, r5, #0
 218:	5f534544 	svcpl	0x00534544
 21c:	54494e55 	strbpl	r4, [r9], #-3669	; 0xe55
 220:	5445535f 	strbpl	r5, [r5], #-863	; 0x35f
 224:	7562004d 	strbvc	r0, [r2, #-77]!	; 0x4d
 228:	65705373 	ldrbvs	r5, [r0, #-883]!	; 0x373
 22c:	6d006465 	stcvs	4, cr6, [r0, #-404]	; 0xfffffe6c
 230:	5465726f 	strbtpl	r7, [r5], #-623	; 0x26f
 234:	326e6568 	rsbcc	r6, lr, #436207616	; 0x1a000000
 238:	4d003635 	stcmi	6, cr3, [r0, #-212]	; 0xffffff2c
 23c:	57545f56 			; <UNDEFINED> instruction: 0x57545f56
 240:	415f4953 	cmpmi	pc, r3, asr r9	; <UNPREDICTABLE>
 244:	5f524444 	svcpl	0x00524444
 248:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0x954
 24c:	42766d00 	rsbsmi	r6, r6, #0
 250:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
 254:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
 258:	52746153 	rsbspl	r6, r4, #-1073741804	; 0xc0000014
 25c:	00746547 	rsbseq	r6, r4, r7, asr #10
 260:	54766d5f 	ldrbtpl	r6, [r6], #-3423	; 0xd5f
 264:	41697377 	smcmi	38711	; 0x9737
 268:	00726464 	rsbseq	r6, r2, r4, ror #8
 26c:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 270:	4d007465 	stcmi	4, cr7, [r0, #-404]	; 0xfffffe6c
 274:	45505f56 	ldrbmi	r5, [r0, #-3926]	; 0xf56
 278:	4e555f58 	mrcmi	15, 2, r5, cr5, cr8, {2}
 27c:	435f5449 	cmpmi	pc, #1224736768	; 0x49000000
 280:	73004746 	movwvc	r4, #1862	; 0x746
 284:	705f6372 	subsvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
 288:	6d2f7968 	stcvs	9, cr7, [pc, #-416]!	; f0 <MV_CPU_LE+0xef>
 28c:	67694876 			; <UNDEFINED> instruction: 0x67694876
 290:	65705368 	ldrbvs	r5, [r0, #-872]!	; 0x368
 294:	6e456465 	cdpvs	4, 4, cr6, cr5, cr5, {3}
 298:	62694c76 	rsbvs	r4, r9, #30208	; 0x7600
 29c:	4d00632e 	stcmi	3, cr6, [r0, #-184]	; 0xffffff48
 2a0:	45505f56 	ldrbmi	r5, [r0, #-3926]	; 0xf56
 2a4:	59545f58 	ldmdbpl	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 2a8:	50004550 	andpl	r4, r0, r0, asr r5
 2ac:	425f5845 	subsmi	r5, pc, #4521984	; 0x450000
 2b0:	4d5f5355 	ldclmi	3, cr5, [pc, #-340]	; 164 <MV_CPU_LE+0x163>
 2b4:	5f45444f 	svcpl	0x0045444f
 2b8:	50003158 	andpl	r3, r0, r8, asr r1
 2bc:	425f5845 	subsmi	r5, pc, #4521984	; 0x450000
 2c0:	4d5f5355 	ldclmi	3, cr5, [pc, #-340]	; 174 <MV_CPU_LE+0x173>
 2c4:	5f45444f 	svcpl	0x0045444f
 2c8:	6d003458 	stcvs	4, cr3, [r0, #-352]	; 0xfffffea0
 2cc:	616f4276 	smcvs	62502	; 0xf426
 2d0:	73496472 	movtvc	r6, #38002	; 0x9472
 2d4:	4d786550 	ldclmi	5, cr6, [r8, #-320]!	; 0xfffffec0
 2d8:	6c75646f 	ldclvs	4, cr6, [r5], #-444	; 0xfffffe44
 2dc:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
 2e0:	7463656e 	strbtvc	r6, [r3], #-1390	; 0x56e
 2e4:	50006465 	andpl	r6, r0, r5, ror #8
 2e8:	425f5845 	subsmi	r5, pc, #4521984	; 0x450000
 2ec:	445f5355 	ldrbmi	r5, [pc], #-853	; 2f4 <MV_CPU_LE+0x2f3>
 2f0:	42415349 	submi	r5, r1, #603979777	; 0x24000001
 2f4:	0044454c 	subeq	r4, r4, ip, asr #10
 2f8:	5f584550 	svcpl	0x00584550
 2fc:	5f535542 	svcpl	0x00535542
 300:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xf4d
 304:	0038585f 	eorseq	r5, r8, pc, asr r8
 308:	65735370 	ldrbvs	r5, [r3, #-880]!	; 0x370
 30c:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 310:	7968704d 	stmdbvc	r8!, {r0, r2, r3, r6, ip, sp, lr}^
 314:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 318:	6d006567 	stcvs	5, cr6, [r0, #-412]	; 0xfffffe64
 31c:	65537861 	ldrbvs	r7, [r3, #-2145]	; 0x861
 320:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 324:	656e694c 	strbvs	r6, [lr, #-2380]!	; 0x94c
 328:	6e750073 	mrcvs	0, 3, r0, cr5, cr3, {3}
 32c:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
 330:	63206465 	teqvs	r0, #1694498816	; 0x65000000
 334:	00726168 	rsbseq	r6, r2, r8, ror #2
 338:	545f564d 	ldrbpl	r5, [pc], #-1613	; 340 <MV_CPU_LE+0x33f>
 33c:	5f495357 	svcpl	0x00495357
 340:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
 344:	65537000 	ldrbvs	r7, [r3]
 348:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 34c:	6f666e49 	svcvs	0x00666e49
 350:	44444100 	strbmi	r4, [r4], #-256	; 0x100
 354:	5f303152 	svcpl	0x00303152
 358:	00544942 	subseq	r4, r4, r2, asr #18
 35c:	56676572 			; <UNDEFINED> instruction: 0x56676572
 360:	73006c61 	movwvc	r6, #3169	; 0xc61
 364:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 368:	67664373 			; <UNDEFINED> instruction: 0x67664373
 36c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 370:	6f6c2067 	svcvs	0x006c2067
 374:	7520676e 	strvc	r6, [r0, #-1902]!	; 0x76e
 378:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 37c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 380:	00746e69 	rsbseq	r6, r4, r9, ror #28
 384:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
 388:	616c7300 	cmnvs	ip, r0, lsl #6
 38c:	4d006576 	stcmi	5, cr6, [r0, #-472]	; 0xfffffe28
 390:	33555f56 	cmpcc	r5, #344	; 0x158
 394:	766d0032 			; <UNDEFINED> instruction: 0x766d0032
 398:	72616f42 	rsbvc	r6, r1, #264	; 0x108
 39c:	656c5364 	strbvs	r5, [ip, #-868]!	; 0x364
 3a0:	75704364 	ldrbvc	r4, [r0, #-868]!	; 0x364
 3a4:	476d754e 	strbmi	r7, [sp, -lr, asr #10]!
 3a8:	6d007465 	stcvs	4, cr7, [r0, #-404]	; 0xfffffe6c
 3ac:	72744376 	rsbsvc	r4, r4, #-671088639	; 0xd8000001
 3b0:	646f4d6c 	strbtvs	r4, [pc], #-3436	; 3b8 <MV_CPU_LE+0x3b7>
 3b4:	65476c65 	strbvs	r6, [r7, #-3173]	; 0xc65
 3b8:	65670074 	strbvs	r0, [r7, #-116]!	; 0x74
 3bc:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xf74
 3c0:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 3c4:	656e694c 	strbvs	r6, [lr, #-2380]!	; 0x94c
 3c8:	00676643 	rsbeq	r6, r7, r3, asr #12
 3cc:	7443766d 	strbvc	r7, [r3], #-1645	; 0x66d
 3d0:	65526c72 	ldrbvs	r6, [r2, #-3186]	; 0xc72
 3d4:	74654776 	strbtvc	r4, [r5], #-1910	; 0x776
 3d8:	78655000 	stmdavc	r5!, {ip, lr}^
 3dc:	75646f4d 	strbvc	r6, [r4, #-3917]!	; 0xf4d
 3e0:	7300656c 	movwvc	r6, #1388	; 0x56c
 3e4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
 3e8:	736e7520 	cmnvc	lr, #134217728	; 0x8000000
 3ec:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0x769
 3f0:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 3f4:	74730074 	ldrbtvc	r0, [r3], #-116	; 0x74
 3f8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 3fc:	6f682f00 	svcvs	0x00682f00
 400:	6f2f656d 	svcvs	0x002f656d
 404:	6969726d 	stmdbvs	r9!, {r0, r2, r3, r5, r6, r9, ip, sp, lr}^
 408:	6f72702f 	svcvs	0x0072702f
 40c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0x56a
 410:	62752f73 	rsbsvs	r2, r5, #460	; 0x1cc
 414:	2f746f6f 	svccs	0x00746f6f
 418:	73737973 	cmnvc	r3, #1884160	; 0x1cc000
 41c:	752f3177 	strvc	r3, [pc, #-375]!	; 2ad <MV_CPU_LE+0x2ac>
 420:	6f6f622d 	svcvs	0x006f622d
 424:	6f742f74 	svcvs	0x00742f74
 428:	2f736c6f 	svccs	0x00736c6f
 42c:	5f6e6962 	svcpl	0x006e6962
 430:	5f726468 	svcpl	0x00726468
 434:	616d7261 	cmnvs	sp, r1, ror #4
 438:	615f6164 	cmpvs	pc, r4, ror #2
 43c:	74007078 	strvc	r7, [r0], #-120	; 0x78
 440:	53697377 	cmnpl	r9, #-603979775	; 0xdc000001
 444:	6576616c 	ldrbvs	r6, [r6, #-364]!	; 0x16c
 448:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 44c:	5f656369 	svcpl	0x00656369
 450:	00766572 	rsbseq	r6, r6, r2, ror r5
 454:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
 458:	66437365 	strbvs	r7, [r3], -r5, ror #6
 45c:	61765f67 	cmnvs	r6, r7, ror #30
 460:	6461006c 	strbtvs	r0, [r1], #-108	; 0x6c
 464:	73007264 	movwvc	r7, #612	; 0x264
 468:	69696d67 	stmdbvs	r9!, {r0, r1, r2, r5, r6, r8, sl, fp, sp, lr}^
 46c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
 470:	554e4700 	strbpl	r4, [lr, #-1792]	; 0x700
 474:	34204320 	strtcc	r4, [r0], #-800	; 0x320
 478:	322e362e 	eorcc	r3, lr, #48234496	; 0x2e00000
 47c:	5f564d00 	svcpl	0x00564d00
 480:	73003855 	movwvc	r3, #2133	; 0x855
 484:	31727461 	cmncc	r2, r1, ror #8
 488:	6c730031 	wldrhvs	wr0, [r3], #-49
 48c:	41657661 	cmnmi	r5, r1, ror #12
 490:	00726464 	rsbseq	r6, r2, r4, ror #8
 494:	44524553 	ldrbmi	r4, [r2], #-1363	; 0x553
 498:	555f5345 	ldrbpl	r5, [pc, #-837]	; 15b <MV_CPU_LE+0x15a>
 49c:	5f54494e 	svcpl	0x0054494e
 4a0:	4d475351 	stclmi	3, cr5, [r7, #-324]	; 0xfffffebc
 4a4:	72004949 	andvc	r4, r0, #1196032	; 0x124000
 4a8:	64416765 	strbvs	r6, [r1], #-1893	; 0x765
 4ac:	53007264 	movwpl	r7, #612	; 0x264
 4b0:	45445245 	strbmi	r5, [r4, #-581]	; 0x245
 4b4:	4e555f53 	mrcmi	15, 2, r5, cr5, cr3, {2}
 4b8:	535f5449 	cmppl	pc, #1224736768	; 0x49000000
 4bc:	00415441 	subeq	r5, r1, r1, asr #8
 4c0:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
 4c4:	61567365 	cmpvs	r6, r5, ror #6
 4c8:	4865756c 	stmdami	r5!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
 4cc:	65705369 	ldrbvs	r5, [r0, #-873]!	; 0x369
 4d0:	74006465 	strvc	r6, [r0], #-1125	; 0x465
 4d4:	0032706d 	eorseq	r7, r2, sp, rrx
 4d8:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
 4dc:	65527365 	ldrbvs	r7, [r2, #-869]	; 0x365
 4e0:	53694867 	cmnpl	r9, #6750208	; 0x670000
 4e4:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
 4e8:	756f6400 	strbvc	r6, [pc, #-1024]!	; f0 <MV_CPU_LE+0xef>
 4ec:	00656c62 	rsbeq	r6, r5, r2, ror #24
 4f0:	64726553 	ldrbtvs	r6, [r2], #-1363	; 0x553
 4f4:	6e497365 	cdpvs	3, 4, cr7, cr9, cr5, {3}
 4f8:	62546f66 	subsvs	r6, r4, #408	; 0x198
 4fc:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0x6c
 500:	6d754e67 	ldclvs	14, cr4, [r5, #-412]!	; 0xfffffe64
 504:	646f6d00 	strbtvs	r6, [pc], #-3328	; 50c <MV_CPU_LE+0x50b>
 508:	53006c65 	movwpl	r6, #3173	; 0xc65
 50c:	45445245 	strbmi	r5, [r4, #-581]	; 0x245
 510:	4e555f53 	mrcmi	15, 2, r5, cr5, cr3, {2}
 514:	505f5449 	subspl	r5, pc, r9, asr #8
 518:	70005845 	andvc	r5, r0, r5, asr #16
 51c:	6f4d7865 	svcvs	0x004d7865
 520:	69006564 	stmdbvs	r0, {r2, r5, r6, r8, sl, sp, lr}
 524:	69645f6e 	stmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 528:	74636572 	strbtvc	r6, [r3], #-1394	; 0x572
 52c:	72617300 	rsbvc	r7, r1, #0
 530:	0062734d 	rsbeq	r7, r2, sp, asr #6
 534:	61746173 	cmnvs	r4, r3, ror r1
 538:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
 53c:	42766d00 	rsbsmi	r6, r6, #0
 540:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
 544:	6b6c6354 	blvs	1b1929c <MV_CPU_LE+0x1b1929b>
 548:	00746547 	rsbseq	r6, r4, r7, asr #10
 54c:	44524553 	ldrbmi	r4, [r2], #-1363	; 0x553
 550:	555f5345 	ldrbpl	r5, [pc, #-837]	; 213 <MV_CPU_LE+0x212>
 554:	5f54494e 	svcpl	0x0054494e
 558:	4f434e55 	svcmi	0x00434e55
 55c:	43454e4e 	movtmi	r4, #24142	; 0x5e4e
 560:	00444554 	subeq	r4, r4, r4, asr r5
 564:	616f625f 	cmnvs	pc, pc, asr r2	; <UNPREDICTABLE>
 568:	65536472 	ldrbvs	r6, [r3, #-1138]	; 0x472
 56c:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 570:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 574:	704d6567 	subvc	r6, sp, r7, ror #10
 578:	4d007968 	stcmi	9, cr7, [r0, #-416]	; 0xfffffe60
 57c:	4f425f56 	svcmi	0x00425f56
 580:	53004c4f 	movwpl	r4, #3151	; 0xc4f
 584:	45445245 	strbmi	r5, [r4, #-581]	; 0x245
 588:	4e555f53 	mrcmi	15, 2, r5, cr5, cr3, {2}
 58c:	535f5449 	cmppl	pc, #1224736768	; 0x49000000
 590:	49494d47 	stmdbmi	r9, {r0, r1, r2, r6, r8, sl, fp, lr}^
 594:	45530030 	ldrbmi	r0, [r3, #-48]	; 0x30
 598:	53454452 	movtpl	r4, #21586	; 0x5452
 59c:	494e555f 	stmdbmi	lr, {r0, r1, r2, r3, r4, r6, r8, sl, ip, lr}^
 5a0:	47535f54 			; <UNDEFINED> instruction: 0x47535f54
 5a4:	3149494d 	cmpcc	r9, sp, asr #18
 5a8:	52455300 	subpl	r5, r5, #0
 5ac:	5f534544 	svcpl	0x00534544
 5b0:	54494e55 	strbpl	r4, [r9], #-3669	; 0xe55
 5b4:	4d47535f 	stclmi	3, cr5, [r7, #-380]	; 0xfffffe84
 5b8:	00324949 	eorseq	r4, r2, r9, asr #18
 5bc:	44524553 	ldrbmi	r4, [r2], #-1363	; 0x553
 5c0:	555f5345 	ldrbpl	r5, [pc, #-837]	; 283 <MV_CPU_LE+0x282>
 5c4:	5f54494e 	svcpl	0x0054494e
 5c8:	494d4753 	stmdbmi	sp, {r0, r1, r4, r6, r8, r9, sl, lr}^
 5cc:	5f003349 	svcpl	0x00003349
 5d0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 5d4:	72655364 	rsbvc	r5, r5, #-1879048191	; 0x90000001
 5d8:	43736564 	cmnmi	r3, #419430400	; 0x19000000
 5dc:	00666e6f 	rsbeq	r6, r6, pc, ror #28
 5e0:	54766d5f 	ldrbtpl	r6, [r6], #-3423	; 0xd5f
 5e4:	53697377 	cmnpl	r9, #-603979775	; 0xdc000001
 5e8:	6576616c 	ldrbvs	r6, [r6, #-364]!	; 0x16c
 5ec:	52455300 	subpl	r5, r5, #0
 5f0:	5f534544 	svcpl	0x00534544
 5f4:	5453414c 	ldrbpl	r4, [r3], #-332	; 0x14c
 5f8:	494e555f 	stmdbmi	lr, {r0, r1, r2, r3, r4, r6, r8, sl, ip, lr}^
 5fc:	65730054 	ldrbvs	r0, [r3, #-84]!	; 0x54
 600:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 604:	656e694c 	strbvs	r6, [lr, #-2380]!	; 0x94c
 608:	00375f30 	eorseq	r5, r7, r0, lsr pc
 60c:	55786570 	ldrbpl	r6, [r8, #-1392]!	; 0x570
 610:	0074696e 	rsbseq	r6, r4, lr, ror #18
 614:	64726573 	ldrbtvs	r6, [r2], #-1395	; 0x573
 618:	694c7365 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
 61c:	754e656e 	strbvc	r6, [lr, #-1390]	; 0x56e
 620:	6572006d 	ldrbvs	r0, [r2, #-109]!	; 0x6d
 624:	6d754e76 	ldclvs	14, cr4, [r5, #-472]!	; 0xfffffe28
 628:	43766d00 	cmnmi	r6, #0
 62c:	506c7274 	rsbpl	r7, ip, r4, ror r2
 630:	614d7865 	cmpvs	sp, r5, ror #16
 634:	696e5578 	stmdbvs	lr!, {r3, r4, r5, r6, r8, sl, ip, lr}^
 638:	74654774 	strbtvc	r4, [r5], #-1908	; 0x774
 63c:	37647200 	strbcc	r7, [r4, -r0, lsl #4]!
 640:	30363438 	eorscc	r3, r6, r8, lsr r4
 644:	6f666e49 	svcvs	0x00666e49
 648:	72616f42 	rsbvc	r6, r1, #264	; 0x108
 64c:	72655364 	rsbvc	r5, r5, #-1879048191	; 0x90000001
 650:	43736564 	cmnmi	r3, #419430400	; 0x19000000
 654:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 658:	6c615667 	stclvs	6, cr5, [r1], #-412	; 0xfffffe64
 65c:	64006575 	strvs	r6, [r0], #-1397	; 0x575
 660:	58383762 	ldmdapl	r8!, {r1, r5, r6, r8, r9, sl, ip, sp}
 664:	63703036 	cmnvs	r0, #54	; 0x36
 668:	6e496361 	cdpvs	3, 4, cr6, cr9, cr1, {3}
 66c:	6f426f66 	svcvs	0x00426f66
 670:	53647261 	cmnpl	r4, #268435462	; 0x10000006
 674:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 678:	6e6f4373 	mcrvs	3, 3, r4, cr15, cr3, {3}
 67c:	56676966 	strbtpl	r6, [r7], -r6, ror #18
 680:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
 684:	37647200 	strbcc	r7, [r4, -r0, lsl #4]!
 688:	30363438 	eorscc	r3, r6, r8, lsr r4
 68c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 690:	65527265 	ldrbvs	r7, [r2, #-613]	; 0x265
 694:	6e493276 	mcrvs	2, 2, r3, cr9, cr6, {3}
 698:	6f426f66 	svcvs	0x00426f66
 69c:	53647261 	cmnpl	r4, #268435462	; 0x10000006
 6a0:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 6a4:	6e6f4373 	mcrvs	3, 3, r4, cr15, cr3, {3}
 6a8:	56676966 	strbtpl	r6, [r7], -r6, ror #18
 6ac:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
 6b0:	37647200 	strbcc	r7, [r4, -r0, lsl #4]!
 6b4:	30363438 	eorscc	r3, r6, r8, lsr r4
 6b8:	5f505841 	svcpl	0x00505841
 6bc:	495f5047 	ldmdbmi	pc, {r0, r1, r2, r6, ip, lr}^	; <UNPREDICTABLE>
 6c0:	426f666e 	rsbmi	r6, pc, #115343360	; 0x6e00000
 6c4:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
 6c8:	64726553 	ldrbtvs	r6, [r2], #-1363	; 0x553
 6cc:	6f437365 	svcvs	0x00437365
 6d0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 6d4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0x156
 6d8:	62640065 	rsbvs	r0, r4, #101	; 0x65
 6dc:	37663838 			; <UNDEFINED> instruction: 0x37663838
 6e0:	30585838 	subscc	r5, r8, r8, lsr r8
 6e4:	32766572 	rsbscc	r6, r6, #478150656	; 0x1c800000
 6e8:	6f666e49 	svcvs	0x00666e49
 6ec:	72616f42 	rsbvc	r6, r1, #264	; 0x108
 6f0:	72655364 	rsbvc	r5, r5, #-1879048191	; 0x90000001
 6f4:	43736564 	cmnmi	r3, #419430400	; 0x19000000
 6f8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 6fc:	6c615667 	stclvs	6, cr5, [r1], #-412	; 0xfffffe64
 700:	64006575 	strvs	r6, [r0], #-1397	; 0x575
 704:	58383762 	ldmdapl	r8!, {r1, r5, r6, r8, r9, sl, ip, sp}
 708:	6d613036 	wstrhvs	wr3, [r1, #-54]!
 70c:	666e4963 	strbtvs	r4, [lr], -r3, ror #18
 710:	616f426f 	cmnvs	pc, pc, ror #4
 714:	65536472 	ldrbvs	r6, [r3, #-1138]	; 0x472
 718:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 71c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 720:	61566769 	cmpvs	r6, r9, ror #14
 724:	0065756c 	rsbeq	r7, r5, ip, ror #10
 728:	5f637273 	svcpl	0x00637273
 72c:	2f796870 	svccs	0x00796870
 730:	6948766d 	stmdbvs	r8, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr}^
 734:	70536867 	subsvc	r6, r3, r7, ror #16
 738:	45646565 	strbmi	r6, [r4, #-1381]!	; 0x565
 73c:	7053766e 	subsvc	r7, r3, lr, ror #12
 740:	632e6365 	teqvs	lr, #-1811939327	; 0x94000001
 744:	37647200 	strbcc	r7, [r4, -r0, lsl #4]!
 748:	30363438 	eorscc	r3, r6, r8, lsr r4
 74c:	4973616e 	ldmdbmi	r3!, {r1, r2, r3, r5, r6, r8, sp, lr}^
 750:	426f666e 	rsbmi	r6, pc, #115343360	; 0x6e00000
 754:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
 758:	64726553 	ldrbtvs	r6, [r2], #-1363	; 0x553
 75c:	6f437365 	svcvs	0x00437365
 760:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 764:	756c6156 	strbvc	r6, [ip, #-342]!	; 0x156
 768:	70660065 	rsbvc	r0, r6, r5, rrx
 76c:	38386167 	ldmdacc	r8!, {r0, r1, r2, r5, r6, r8, sp, lr}
 770:	58383766 	ldmdapl	r8!, {r1, r2, r5, r6, r8, r9, sl, ip, sp}
 774:	6e493058 	mcrvs	0, 2, r3, cr9, cr8, {2}
 778:	6f426f66 	svcvs	0x00426f66
 77c:	53647261 	cmnpl	r4, #268435462	; 0x10000006
 780:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 784:	6e6f4373 	mcrvs	3, 3, r4, cr15, cr3, {3}
 788:	56676966 	strbtpl	r6, [r7], -r6, ror #18
 78c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
 790:	37647200 	strbcc	r7, [r4, -r0, lsl #4]!
 794:	30363438 	eorscc	r3, r6, r8, lsr r4
 798:	74737563 	ldrbtvc	r7, [r3], #-1379	; 0x563
 79c:	72656d6f 	rsbvc	r6, r5, #7104	; 0x1bc0
 7a0:	6f666e49 	svcvs	0x00666e49
 7a4:	72616f42 	rsbvc	r6, r1, #264	; 0x108
 7a8:	72655364 	rsbvc	r5, r5, #-1879048191	; 0x90000001
 7ac:	43736564 	cmnmi	r3, #419430400	; 0x19000000
 7b0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 7b4:	6c615667 	stclvs	6, cr5, [r1], #-412	; 0xfffffe64
 7b8:	64006575 	strvs	r6, [r0], #-1397	; 0x575
 7bc:	66383862 	ldrtvs	r3, [r8], -r2, ror #16
 7c0:	58583837 	ldmdapl	r8, {r0, r1, r2, r4, r5, fp, ip, sp}^
 7c4:	616f4230 	cmnvs	pc, r0, lsr r2	; <UNPREDICTABLE>
 7c8:	65536472 	ldrbvs	r6, [r3, #-1138]	; 0x472
 7cc:	73656472 	cmnvc	r5, #1912602624	; 0x72000000
 7d0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 7d4:	704d6567 	subvc	r6, sp, r7, ror #10
 7d8:	64007968 	strvs	r7, [r0], #-2408	; 0x968
 7dc:	58383762 	ldmdapl	r8!, {r1, r5, r6, r8, r9, sl, ip, sp}
 7e0:	63703036 	cmnvs	r0, #54	; 0x36
 7e4:	65726361 	ldrbvs	r6, [r2, #-865]!	; 0x361
 7e8:	6e493276 	mcrvs	2, 2, r3, cr9, cr6, {3}
 7ec:	6f426f66 	svcvs	0x00426f66
 7f0:	53647261 	cmnpl	r4, #268435462	; 0x10000006
 7f4:	65647265 	strbvs	r7, [r4, #-613]!	; 0x265
 7f8:	6e6f4373 	mcrvs	3, 3, r4, cr15, cr3, {3}
 7fc:	56676966 	strbtpl	r6, [r7], -r6, ror #18
 800:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
 804:	38626400 	stmdacc	r2!, {sl, sp, lr}^
 808:	38376638 	ldmdacc	r7!, {r3, r4, r5, r9, sl, sp, lr}
 80c:	49305858 	ldmdbmi	r0!, {r3, r4, r6, fp, ip, lr}
 810:	426f666e 	rsbmi	r6, pc, #115343360	; 0x6e00000
 814:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0x16f
 818:	64726553 	ldrbtvs	r6, [r2], #-1363	; 0x553
 81c:	6f437365 	svcvs	0x00437365
 820:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 824:	756c6156 	strbvc	r6, [ip, #-342]!	; 0x156
 828:	61700065 	cmnvs	r0, r5, rrx
 82c:	70003164 	andvc	r3, r0, r4, ror #2
 830:	00326461 	eorseq	r6, r2, r1, ror #8
 834:	35646170 	strbcc	r6, [r4, #-368]!	; 0x170
 838:	64617000 	strbtvs	r7, [r1]
 83c:	61700036 	cmnvs	r0, r6, lsr r0
 840:	70003764 	andvc	r3, r0, r4, ror #14
 844:	00386461 	eorseq	r6, r8, r1, ror #8
 848:	64747570 	ldrbtvs	r7, [r4], #-1392	; 0x570
 84c:	00617461 	rsbeq	r7, r1, r1, ror #8
 850:	54706d74 	ldrbtpl	r6, [r0], #-3444	; 0xd74
 854:	526b6c43 	rsbpl	r6, fp, #17152	; 0x4300
 858:	00657461 	rsbeq	r7, r5, r1, ror #8
 85c:	65526975 	ldrbvs	r6, [r2, #-2421]	; 0x975
 860:	766d0067 	strbtvc	r0, [sp], -r7, rrx
 864:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 868:	63747354 	cmnvs	r4, #1342177281	; 0x50000001
 86c:	64617000 	strbtvs	r7, [r1]
 870:	61700033 	cmnvs	r0, r3, lsr r0
 874:	6d003464 	stcvs	4, cr3, [r0, #-400]	; 0xfffffe70
 878:	765f646f 	ldrbvc	r6, [pc], -pc, ror #8
 87c:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 880:	72615576 	rsbvc	r5, r1, #494927872	; 0x1d800000
 884:	726f5074 	rsbvc	r5, pc, #116	; 0x74
 888:	75700074 	ldrbvc	r0, [r0, #-116]!	; 0x74
 88c:	72747374 	rsbsvc	r7, r4, #-805306367	; 0xd0000001
 890:	00676e69 	rsbeq	r6, r7, r9, ror #28
 894:	72615570 	rsbvc	r5, r1, #469762048	; 0x1c000000
 898:	726f5074 	rsbvc	r5, pc, #116	; 0x74
 89c:	766d0074 			; <UNDEFINED> instruction: 0x766d0074
 8a0:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 8a4:	63747550 	cmnvs	r4, #335544320	; 0x14000000
 8a8:	616c6600 	cmnvs	ip, r0, lsl #12
 8ac:	564d0067 	strbpl	r0, [sp], -r7, rrx
 8b0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
 8b4:	4f505f54 	svcmi	0x00505f54
 8b8:	6d005452 	stcvs	4, cr5, [r0, #-328]	; 0xfffffeb8
 8bc:	72615576 	rsbvc	r5, r1, #494927872	; 0x1d800000
 8c0:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
 8c4:	61620074 	smcvs	8196	; 0x2004
 8c8:	69446475 	stmdbvs	r4, {r0, r2, r4, r5, r6, sl, sp, lr}^
 8cc:	6f736976 	svcvs	0x00736976
 8d0:	766d0072 			; <UNDEFINED> instruction: 0x766d0072
 8d4:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 8d8:	63746547 	cmnvs	r4, #297795584	; 0x11c00000
 8dc:	63727300 	cmnvs	r2, #0
 8e0:	6974755f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
 8e4:	766d2f6c 	strbtvc	r2, [sp], -ip, ror #30
 8e8:	74726155 	ldrbtvc	r6, [r2], #-341	; 0x155
 8ec:	6c00632e 	stcvs	3, cr6, [r0], {46}	; 0x2e
 8f0:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xe65
 8f4:	65640068 	strbvs	r0, [r4, #-104]!	; 0x68
 8f8:	756e5f63 	strbvc	r5, [lr, #-3939]!	; 0xf63
 8fc:	766d006d 	strbtvc	r0, [sp], -sp, rrx
 900:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
 904:	616c6544 	cmnvs	ip, r4, asr #10
 908:	77740079 			; <UNDEFINED> instruction: 0x77740079
 90c:	61446973 	hvcvs	18067	; 0x4693
 910:	72546174 	subsvc	r6, r4, #29
 914:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 918:	74007469 	strvc	r7, [r0], #-1129	; 0x469
 91c:	41697377 	smcmi	38711	; 0x9737
 920:	37726464 	ldrbcc	r6, [r2, -r4, ror #8]!
 924:	53746942 	cmnpl	r4, #1081344	; 0x108000
 928:	70007465 	andvc	r7, r0, r5, ror #8
 92c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
 930:	7000676e 	andvc	r6, r0, lr, ror #14
 934:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
 938:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
 93c:	6c620065 	wstrhvs	wr0, [r2], #-101
 940:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
 944:	52657a69 	rsbpl	r7, r5, #430080	; 0x69000
 948:	65740064 	ldrbvs	r0, [r4, #-100]!	; 0x64
 94c:	6f00706d 	svcvs	0x0000706d
 950:	6c426666 	mcrrvs	6, 6, r6, r2, cr6
 954:	006b636f 	rsbeq	r6, fp, pc, ror #6
 958:	69737774 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 95c:	67726154 			; <UNDEFINED> instruction: 0x67726154
 960:	664f7465 	strbvs	r7, [pc], -r5, ror #8
 964:	65537366 	ldrbvs	r7, [r3, #-870]	; 0x366
 968:	77740074 			; <UNDEFINED> instruction: 0x77740074
 96c:	64416973 	strbvs	r6, [r1], #-2419	; 0x973
 970:	30317264 	eorscc	r7, r1, r4, ror #4
 974:	53746942 	cmnpl	r4, #1081344	; 0x108000
 978:	62007465 	andvs	r7, r0, #1694498816	; 0x65000000
 97c:	6b636f6c 	blvs	18dc734 <MV_CPU_LE+0x18dc733>
 980:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0x953
 984:	62007257 	andvs	r7, r0, #1879048197	; 0x70000005
 988:	6b636f6c 	blvs	18dc740 <MV_CPU_LE+0x18dc73f>
 98c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0x953
 990:	74636100 	strbtvc	r6, [r3], #-256	; 0x100
 994:	466c6175 			; <UNDEFINED> instruction: 0x466c6175
 998:	00716572 	rsbseq	r6, r1, r2, ror r5
 99c:	65446975 	strbvs	r6, [r4, #-2421]	; 0x975
 9a0:	0079616c 	rsbseq	r6, r9, ip, ror #2
 9a4:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0x361
 9a8:	004e6c61 	subeq	r6, lr, r1, ror #24
 9ac:	69737774 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 9b0:	47737453 			; <UNDEFINED> instruction: 0x47737453
 9b4:	70007465 	andvc	r7, r0, r5, ror #8
 9b8:	69737754 	ldmdbvs	r3!, {r2, r4, r6, r8, r9, sl, ip, sp, lr}^
 9bc:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
 9c0:	61686300 	cmnvs	r8, r0, lsl #6
 9c4:	6d754e6e 	ldclvs	14, cr4, [r5, #-440]!	; 0xfffffe48
 9c8:	54766d00 	ldrbtpl	r6, [r6], #-3328	; 0xd00
 9cc:	53697377 	cmnpl	r9, #-603979775	; 0xdc000001
 9d0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0x174
 9d4:	53746942 	cmnpl	r4, #1081344	; 0x108000
 9d8:	6d007465 	stcvs	4, cr7, [r0, #-404]	; 0xfffffe6c
 9dc:	73775476 	cmnvc	r7, #1979711488	; 0x76000000
 9e0:	69725769 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, ip, lr}^
 9e4:	6f006574 	svcvs	0x00006574
 9e8:	69536666 	ldmdbvs	r3, {r1, r2, r5, r6, r9, sl, sp, lr}^
 9ec:	6d00657a 	stcvs	5, cr6, [r0, #-488]	; 0xfffffe18
 9f0:	73775476 	cmnvc	r7, #1979711488	; 0x76000000
 9f4:	696e4969 	stmdbvs	lr!, {r0, r3, r5, r6, r8, fp, lr}^
 9f8:	6d5f0074 	wldrhvs	wr0, [pc, #-116]
 9fc:	73775476 	cmnvc	r7, #1979711488	; 0x76000000
 a00:	646d4369 	strbtvs	r4, [sp], #-873	; 0x369
 a04:	43697500 	cmnmi	r9, #0
 a08:	656c6379 	strbvs	r6, [ip, #-889]!	; 0x379
 a0c:	72730073 	rsbsvc	r0, r3, #115	; 0x73
 a10:	74755f63 	ldrbtvc	r5, [r5], #-3939	; 0xf63
 a14:	6d2f6c69 	stcvs	12, cr6, [pc, #-420]!	; 878 <MV_CPU_LE+0x877>
 a18:	77745f76 			; <UNDEFINED> instruction: 0x77745f76
 a1c:	632e6973 	teqvs	lr, #1884160	; 0x1cc000
 a20:	54697500 	strbtpl	r7, [r9], #-1280	; 0x500
 a24:	006b6c63 	rsbeq	r6, fp, r3, ror #24
 a28:	7754766d 	ldrbvc	r7, [r4, -sp, ror #12]
 a2c:	74536973 	ldrbvc	r6, [r3], #-2419	; 0x973
 a30:	6942706f 	stmdbvs	r2, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
 a34:	74655374 	strbtvc	r5, [r5], #-884	; 0x374
 a38:	6e656700 	cdpvs	7, 6, cr6, cr5, cr0, {0}
 a3c:	6c617265 	stclvs	2, cr7, [r1], #-404	; 0xfffffe6c
 a40:	6c6c6143 	wstrdvs	wr6, [ip], #-268	; 0xfffffef4
 a44:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
 a48:	6400656c 	strvs	r6, [r0], #-1388	; 0x56c
 a4c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 a50:	64644165 	strbtvs	r4, [r4], #-357	; 0x165
 a54:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
 a58:	73777400 	cmnvc	r7, #0
 a5c:	74614469 	strbtvc	r4, [r1], #-1129	; 0x469
 a60:	63655261 	cmnvs	r5, #268435462	; 0x10000006
 a64:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0x965
 a68:	54766d00 	ldrbtpl	r6, [r6], #-3328	; 0xd00
 a6c:	52697377 	rsbpl	r7, r9, #-603979775	; 0xdc000001
 a70:	00646165 	rsbeq	r6, r4, r5, ror #2
 a74:	7754766d 	ldrbvc	r7, [r4, -sp, ror #12]
 a78:	64416973 	strbvs	r6, [r1], #-2419	; 0x973
 a7c:	65537264 	ldrbvs	r7, [r3, #-612]	; 0x264
 a80:	616d0074 	smcvs	53252	; 0xd004
 a84:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 a88:	73777400 	cmnvc	r7, #0
 a8c:	746e4969 	strbtvc	r4, [lr], #-2409	; 0x969
 a90:	43676c46 	cmnmi	r7, #17920	; 0x4600
 a94:	7000726c 	andvc	r7, r0, ip, ror #4
 a98:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 a9c:	6f70006b 	svcvs	0x0070006b
 aa0:	00726577 	rsbseq	r6, r2, r7, ror r5
 aa4:	69737774 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 aa8:	6e69614d 	cdpvs	1, 6, cr6, cr9, cr13, {2}
 aac:	47746e49 	ldrbmi	r6, [r4, -r9, asr #28]!
 ab0:	69007465 	stmdbvs	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
 ab4:	746e4973 	strbtvc	r4, [lr], #-2419	; 0x973
 ab8:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
 abc:	73777400 	cmnvc	r7, #0
 ac0:	6d695469 	stclvs	4, cr5, [r9, #-420]!	; 0xfffffe5c
 ac4:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xf65
 ac8:	006b6843 	rsbeq	r6, fp, r3, asr #16
 acc:	545f564d 	ldrbpl	r5, [pc], #-1613	; ad4 <MV_CPU_LE+0xad3>
 ad0:	5f495357 	svcpl	0x00495357
 ad4:	54495257 	strbpl	r5, [r9], #-599	; 0x257
 ad8:	72660045 	rsbvc	r0, r6, #69	; 0x45
 adc:	61757165 	cmnvs	r5, r5, ror #2
 ae0:	0079636e 	rsbseq	r6, r9, lr, ror #6
 ae4:	4d6e696d 	stclmi	9, cr6, [lr, #-436]!	; 0xfffffe4c
 ae8:	69677261 	stmdbvs	r7!, {r0, r5, r6, r9, ip, sp, lr}^
 aec:	6361006e 	cmnvs	r1, #110	; 0x6e
 af0:	6c617574 	stclvs	5, cr7, [r1], #-464	; 0xfffffe30
 af4:	7774004d 	ldrbvc	r0, [r4, -sp, asr #32]!
 af8:	63416973 	movtvs	r6, #6515	; 0x1973
 afc:	7469426b 	strbtvc	r4, [r9], #-619	; 0x26b
 b00:	00746553 	rsbseq	r6, r4, r3, asr r5
 b04:	69737774 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 b08:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0x552
 b0c:	564d0074 			; <UNDEFINED> instruction: 0x564d0074
 b10:	005a485f 	subseq	r4, sl, pc, asr r8
 b14:	545f564d 	ldrbpl	r5, [pc], #-1613	; b1c <MV_CPU_LE+0xb1b>
 b18:	5f495357 	svcpl	0x00495357
 b1c:	44414552 	strbmi	r4, [r1], #-1362	; 0x552
 b20:	5f564d00 	svcpl	0x00564d00
 b24:	49535754 	ldmdbmi	r3, {r2, r4, r6, r8, r9, sl, ip, lr}^
 b28:	444d435f 	strbmi	r4, [sp], #-863	; 0x35f
 b2c:	6d6f6300 	stclvs	3, cr6, [pc]	; b34 <MV_CPU_LE+0xb33>
 b30:	646e616d 	strbtvs	r6, [lr], #-365	; 0x16d
 b34:	6d697400 	stclvs	4, cr7, [r9]
 b38:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xf65
 b3c:	63727300 	cmnvs	r2, #0
 b40:	6974755f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
 b44:	74752f6c 	ldrbtvc	r2, [r5], #-3948	; 0xf6c
 b48:	2e736c69 	cdpcs	12, 7, cr6, cr3, cr9, {3}
 b4c:	65640063 	strbvs	r0, [r4, #-99]!	; 0x63
 b50:	6d007473 	stcvs	4, cr7, [r0, #-460]	; 0xfffffe34
 b54:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xd65
 b58:	656d0074 	strbvs	r0, [sp, #-116]!	; 0x74
 b5c:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
 b60:	65737500 	ldrbvs	r7, [r3, #-1280]!	; 0x500
 b64:	72730063 	rsbsvc	r0, r3, #99	; 0x63
 b68:	74755f63 	ldrbtvc	r5, [r5], #-3939	; 0xf63
 b6c:	742f6c69 	strtvc	r6, [pc], #-3177	; b74 <MV_CPU_LE+0xb73>
 b70:	2e656d69 	cdpcs	13, 6, cr6, cr5, cr9, {3}
 b74:	6e630063 	cdpvs	0, 6, cr0, cr3, cr3, {3}
 b78:	43726d74 	cmnmi	r2, #7424	; 0x1d00
 b7c:	006c7274 	rsbeq	r7, ip, r4, ror r2
 b80:	616c6564 	cmnvs	ip, r4, ror #10
 b84:	63697479 	cmnvs	r9, #2030043136	; 0x79000000
 b88:	5f00736b 	svcpl	0x0000736b
 b8c:	6564755f 	strbvs	r7, [r4, #-1375]!	; 0x55f
 b90:	0079616c 	rsbseq	r6, r9, ip, ror #2

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	wstrbvc	wr0, [r2], #-1
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	400040ac 	andmi	r4, r0, ip, lsr #1
  1c:	0000001c 	andeq	r0, r0, ip, lsl r0
  20:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  24:	180e4101 	stmdane	lr, {r0, r8, lr}
  28:	00070d41 	andeq	r0, r7, r1, asr #26
  2c:	00000014 	andeq	r0, r0, r4, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	400040c8 	andmi	r4, r0, r8, asr #1
  38:	00000010 	andeq	r0, r0, r0, lsl r0
  3c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  40:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	00000000 	andeq	r0, r0, r0
  4c:	400040d8 	ldrdmi	r4, [r0], -r8
  50:	00000036 	andeq	r0, r0, r6, lsr r0
  54:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  58:	41028701 	tstmi	r2, r1, lsl #14
  5c:	0000070d 	andeq	r0, r0, sp, lsl #14
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	40004110 	andmi	r4, r0, r0, lsl r1
  6c:	00000026 	andeq	r0, r0, r6, lsr #32
  70:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  74:	41028701 	tstmi	r2, r1, lsl #14
  78:	0d41100e 	wstrheq	wr1, [r1, #-14]
  7c:	00000007 	andeq	r0, r0, r7
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	40004138 	andmi	r4, r0, r8, lsr r1
  8c:	0000008c 	andeq	r0, r0, ip, lsl #1
  90:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  94:	41028701 	tstmi	r2, r1, lsl #14
  98:	0c41380e 	mcrreq	8, 0, r3, r1, cr14
  9c:	00003007 	andeq	r3, r0, r7
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	00000000 	andeq	r0, r0, r0
  a8:	400041c4 	andmi	r4, r0, r4, asr #3
  ac:	000000f8 	strdeq	r0, [r0], -r8
  b0:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  b4:	41028701 	tstmi	r2, r1, lsl #14
  b8:	0c41380e 	mcrreq	8, 0, r3, r1, cr14
  bc:	00003007 	andeq	r3, r0, r7
  c0:	00000014 	andeq	r0, r0, r4, lsl r0
  c4:	00000000 	andeq	r0, r0, r0
  c8:	400042bc 			; <UNDEFINED> instruction: 0x400042bc
  cc:	00000018 	andeq	r0, r0, r8, lsl r0
  d0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  d4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	400042d4 	ldrdmi	r4, [r0], -r4	; <UNPREDICTABLE>
  e4:	00000074 	andeq	r0, r0, r4, ror r0
  e8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
  ec:	41028701 	tstmi	r2, r1, lsl #14
  f0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  f4:	00000007 	andeq	r0, r0, r7
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	40004348 	andmi	r4, r0, r8, asr #6
 104:	0000002c 	andeq	r0, r0, ip, lsr #32
 108:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 10c:	41028701 	tstmi	r2, r1, lsl #14
 110:	0d41100e 	wstrheq	wr1, [r1, #-14]
 114:	00000007 	andeq	r0, r0, r7
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	40004374 	andmi	r4, r0, r4, ror r3
 124:	000001c4 	andeq	r0, r0, r4, asr #3
 128:	8e0c0e41 	cdphi	14, 0, cr0, cr12, cr1, {2}
 12c:	84028701 	strhi	r8, [r2], #-1793	; 0x701
 130:	300e4103 	andcc	r4, lr, r3, lsl #2
 134:	00070d41 	andeq	r0, r7, r1, asr #26
 138:	00000018 	andeq	r0, r0, r8, lsl r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	40004538 	andmi	r4, r0, r8, lsr r5
 144:	0000006e 	andeq	r0, r0, lr, rrx
 148:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 14c:	41028701 	tstmi	r2, r1, lsl #14
 150:	0000070d 	andeq	r0, r0, sp, lsl #14
 154:	00000018 	andeq	r0, r0, r8, lsl r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	400045a8 	andmi	r4, r0, r8, lsr #11
 160:	0000006e 	andeq	r0, r0, lr, rrx
 164:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 168:	41028701 	tstmi	r2, r1, lsl #14
 16c:	0000070d 	andeq	r0, r0, sp, lsl #14
 170:	0000001c 	andeq	r0, r0, ip, lsl r0
 174:	00000000 	andeq	r0, r0, r0
 178:	40004618 	andmi	r4, r0, r8, lsl r6
 17c:	0000004c 	andeq	r0, r0, ip, asr #32
 180:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 184:	41028701 	tstmi	r2, r1, lsl #14
 188:	0d41100e 	wstrheq	wr1, [r1, #-14]
 18c:	00000007 	andeq	r0, r0, r7
 190:	00000018 	andeq	r0, r0, r8, lsl r0
 194:	00000000 	andeq	r0, r0, r0
 198:	40004664 	andmi	r4, r0, r4, ror #12
 19c:	00000046 	andeq	r0, r0, r6, asr #32
 1a0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 1a4:	100e4101 	andne	r4, lr, r1, lsl #2
 1a8:	00070d41 	andeq	r0, r7, r1, asr #26
 1ac:	00000020 	andeq	r0, r0, r0, lsr #32
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	400046ac 	andmi	r4, r0, ip, lsr #13
 1b8:	00001f30 	andeq	r1, r0, r0, lsr pc
 1bc:	8e0c0e41 	cdphi	14, 0, cr0, cr12, cr1, {2}
 1c0:	84028701 	strhi	r8, [r2], #-1793	; 0x701
 1c4:	e00e4203 	and	r4, lr, r3, lsl #4
 1c8:	070c410b 	streq	r4, [ip, -fp, lsl #2]
 1cc:	00000bd8 	ldrdeq	r0, [r0], -r8
 1d0:	0000000c 	andeq	r0, r0, ip
 1d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1d8:	7c020001 	wstrbvc	wr0, [r2], #-1
 1dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1e0:	00000018 	andeq	r0, r0, r8, lsl r0
 1e4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 1e8:	400065dc 	ldrdmi	r6, [r0], -ip
 1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 1f4:	180e4101 	stmdane	lr, {r0, r8, lr}
 1f8:	00070d41 	andeq	r0, r7, r1, asr #26
 1fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 200:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 204:	400065f8 	strdmi	r6, [r0], -r8
 208:	000000cc 	andeq	r0, r0, ip, asr #1
 20c:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 210:	41028701 	tstmi	r2, r1, lsl #14
 214:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 218:	00000007 	andeq	r0, r0, r7
 21c:	00000018 	andeq	r0, r0, r8, lsl r0
 220:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 224:	400066c4 	andmi	r6, r0, r4, asr #13
 228:	00000034 	andeq	r0, r0, r4, lsr r0
 22c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 230:	180e4101 	stmdane	lr, {r0, r8, lr}
 234:	00070d41 	andeq	r0, r7, r1, asr #26
 238:	0000001c 	andeq	r0, r0, ip, lsl r0
 23c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 240:	400066f8 	strdmi	r6, [r0], -r8
 244:	00000040 	andeq	r0, r0, r0, asr #32
 248:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 24c:	41028701 	tstmi	r2, r1, lsl #14
 250:	0d41100e 	wstrheq	wr1, [r1, #-14]
 254:	00000007 	andeq	r0, r0, r7
 258:	0000001c 	andeq	r0, r0, ip, lsl r0
 25c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 260:	40006738 	andmi	r6, r0, r8, lsr r7
 264:	000000b6 	strheq	r0, [r0], -r6
 268:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 26c:	41028701 	tstmi	r2, r1, lsl #14
 270:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 274:	00000007 	andeq	r0, r0, r7
 278:	00000018 	andeq	r0, r0, r8, lsl r0
 27c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 280:	400067f0 	strdmi	r6, [r0], -r0
 284:	00000032 	andeq	r0, r0, r2, lsr r0
 288:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 28c:	100e4101 	andne	r4, lr, r1, lsl #2
 290:	00070d41 	andeq	r0, r7, r1, asr #26
 294:	00000018 	andeq	r0, r0, r8, lsl r0
 298:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 29c:	40006824 	andmi	r6, r0, r4, lsr #16
 2a0:	00000026 	andeq	r0, r0, r6, lsr #32
 2a4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 2a8:	100e4101 	andne	r4, lr, r1, lsl #2
 2ac:	00070d41 	andeq	r0, r7, r1, asr #26
 2b0:	0000000c 	andeq	r0, r0, ip
 2b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2b8:	7c020001 	wstrbvc	wr0, [r2], #-1
 2bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2c0:	00000018 	andeq	r0, r0, r8, lsl r0
 2c4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2c8:	4000684c 	andmi	r6, r0, ip, asr #16
 2cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2d0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 2d4:	180e4101 	stmdane	lr, {r0, r8, lr}
 2d8:	00070d41 	andeq	r0, r7, r1, asr #26
 2dc:	00000018 	andeq	r0, r0, r8, lsl r0
 2e0:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2e4:	40006868 	andmi	r6, r0, r8, ror #16
 2e8:	0000002a 	andeq	r0, r0, sl, lsr #32
 2ec:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 2f0:	100e4101 	andne	r4, lr, r1, lsl #2
 2f4:	00070d41 	andeq	r0, r7, r1, asr #26
 2f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2fc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 300:	40006894 	mulmi	r0, r4, r8
 304:	0000010c 	andeq	r0, r0, ip, lsl #2
 308:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 30c:	41028701 	tstmi	r2, r1, lsl #14
 310:	0d41200e 	wstrheq	wr2, [r1, #-14]
 314:	00000007 	andeq	r0, r0, r7
 318:	0000001c 	andeq	r0, r0, ip, lsl r0
 31c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 320:	400069a0 	andmi	r6, r0, r0, lsr #19
 324:	000000f8 	strdeq	r0, [r0], -r8
 328:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 32c:	41028701 	tstmi	r2, r1, lsl #14
 330:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 334:	00000007 	andeq	r0, r0, r7
 338:	0000001c 	andeq	r0, r0, ip, lsl r0
 33c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 340:	40006a98 	mulmi	r0, r8, sl
 344:	00000048 	andeq	r0, r0, r8, asr #32
 348:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 34c:	41028701 	tstmi	r2, r1, lsl #14
 350:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 354:	00000007 	andeq	r0, r0, r7
 358:	0000001c 	andeq	r0, r0, ip, lsl r0
 35c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 360:	40006ae0 	andmi	r6, r0, r0, ror #21
 364:	0000005a 	andeq	r0, r0, sl, asr r0
 368:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 36c:	41028701 	tstmi	r2, r1, lsl #14
 370:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 374:	00000007 	andeq	r0, r0, r7
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 380:	40006b3c 	andmi	r6, r0, ip, lsr fp
 384:	00000052 	andeq	r0, r0, r2, asr r0
 388:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 38c:	41028701 	tstmi	r2, r1, lsl #14
 390:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 394:	00000007 	andeq	r0, r0, r7
 398:	0000001c 	andeq	r0, r0, ip, lsl r0
 39c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3a0:	40006b90 	mulmi	r0, r0, fp
 3a4:	0000020c 	andeq	r0, r0, ip, lsl #4
 3a8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 3ac:	41028701 	tstmi	r2, r1, lsl #14
 3b0:	0d41400e 	wstrheq	wr4, [r1, #-14]
 3b4:	00000007 	andeq	r0, r0, r7
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3c0:	40006d9c 	mulmi	r0, ip, sp
 3c4:	00000032 	andeq	r0, r0, r2, lsr r0
 3c8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 3cc:	41028701 	tstmi	r2, r1, lsl #14
 3d0:	0d41100e 	wstrheq	wr1, [r1, #-14]
 3d4:	00000007 	andeq	r0, r0, r7
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3e0:	40006dd0 	ldrdmi	r6, [r0], -r0
 3e4:	00000036 	andeq	r0, r0, r6, lsr r0
 3e8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 3ec:	41028701 	tstmi	r2, r1, lsl #14
 3f0:	0d41100e 	wstrheq	wr1, [r1, #-14]
 3f4:	00000007 	andeq	r0, r0, r7
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 400:	40006e08 	andmi	r6, r0, r8, lsl #28
 404:	00000050 	andeq	r0, r0, r0, asr r0
 408:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 40c:	41028701 	tstmi	r2, r1, lsl #14
 410:	0d41100e 	wstrheq	wr1, [r1, #-14]
 414:	00000007 	andeq	r0, r0, r7
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 420:	40006e58 	andmi	r6, r0, r8, asr lr
 424:	0000017c 	andeq	r0, r0, ip, ror r1
 428:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 42c:	41028701 	tstmi	r2, r1, lsl #14
 430:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 434:	00000007 	andeq	r0, r0, r7
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 440:	40006fd4 	ldrdmi	r6, [r0], -r4
 444:	000000d4 	ldrdeq	r0, [r0], -r4
 448:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 44c:	41028701 	tstmi	r2, r1, lsl #14
 450:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 454:	00000007 	andeq	r0, r0, r7
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 460:	400070a8 	andmi	r7, r0, r8, lsr #1
 464:	00000118 	andeq	r0, r0, r8, lsl r1
 468:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 46c:	41028701 	tstmi	r2, r1, lsl #14
 470:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 474:	00000007 	andeq	r0, r0, r7
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 480:	400071c0 	andmi	r7, r0, r0, asr #3
 484:	00000178 	andeq	r0, r0, r8, ror r1
 488:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 48c:	41028701 	tstmi	r2, r1, lsl #14
 490:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
 494:	00000007 	andeq	r0, r0, r7
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 4a0:	40007338 	andmi	r7, r0, r8, lsr r3
 4a4:	00000058 	andeq	r0, r0, r8, asr r0
 4a8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 4ac:	41028701 	tstmi	r2, r1, lsl #14
 4b0:	0d41200e 	wstrheq	wr2, [r1, #-14]
 4b4:	00000007 	andeq	r0, r0, r7
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 4c0:	40007390 	mulmi	r0, r0, r3
 4c4:	00000120 	andeq	r0, r0, r0, lsr #2
 4c8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 4cc:	41028701 	tstmi	r2, r1, lsl #14
 4d0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 4d4:	00000007 	andeq	r0, r0, r7
 4d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4dc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 4e0:	400074b0 			; <UNDEFINED> instruction: 0x400074b0
 4e4:	000000d8 	ldrdeq	r0, [r0], -r8
 4e8:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 4ec:	41028701 	tstmi	r2, r1, lsl #14
 4f0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 4f4:	00000007 	andeq	r0, r0, r7
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 500:	40007588 	andmi	r7, r0, r8, lsl #11
 504:	00000094 	muleq	r0, r4, r0
 508:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 50c:	41028701 	tstmi	r2, r1, lsl #14
 510:	0d41200e 	wstrheq	wr2, [r1, #-14]
 514:	00000007 	andeq	r0, r0, r7
 518:	0000000c 	andeq	r0, r0, ip
 51c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 520:	7c020001 	wstrbvc	wr0, [r2], #-1
 524:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 528:	00000018 	andeq	r0, r0, r8, lsl r0
 52c:	00000518 	andeq	r0, r0, r8, lsl r5
 530:	4000761c 	andmi	r7, r0, ip, lsl r6
 534:	00000048 	andeq	r0, r0, r8, asr #32
 538:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 53c:	200e4101 	andcs	r4, lr, r1, lsl #2
 540:	00070d41 	andeq	r0, r7, r1, asr #26
 544:	00000018 	andeq	r0, r0, r8, lsl r0
 548:	00000518 	andeq	r0, r0, r8, lsl r5
 54c:	40007664 	andmi	r7, r0, r4, ror #12
 550:	00000054 	andeq	r0, r0, r4, asr r0
 554:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 558:	200e4101 	andcs	r4, lr, r1, lsl #2
 55c:	00070d41 	andeq	r0, r7, r1, asr #26
 560:	0000000c 	andeq	r0, r0, ip
 564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 568:	7c020001 	wstrbvc	wr0, [r2], #-1
 56c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 570:	00000018 	andeq	r0, r0, r8, lsl r0
 574:	00000560 	andeq	r0, r0, r0, ror #10
 578:	400076b8 			; <UNDEFINED> instruction: 0x400076b8
 57c:	0000001c 	andeq	r0, r0, ip, lsl r0
 580:	87040e41 	strhi	r0, [r4, -r1, asr #28]
 584:	180e4101 	stmdane	lr, {r0, r8, lr}
 588:	00070d41 	andeq	r0, r7, r1, asr #26
 58c:	0000001c 	andeq	r0, r0, ip, lsl r0
 590:	00000560 	andeq	r0, r0, r0, ror #10
 594:	400076d4 	ldrdmi	r7, [r0], -r4
 598:	00000098 	muleq	r0, r8, r0
 59c:	8e080e41 	cdphi	14, 0, cr0, cr8, cr1, {2}
 5a0:	41028701 	tstmi	r2, r1, lsl #14
 5a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 5a8:	00000007 	andeq	r0, r0, r7
 5ac:	0000000c 	andeq	r0, r0, ip
 5b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5b4:	7c010001 	wstrbvc	wr0, [r1], #-1
 5b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5bc:	0000000c 	andeq	r0, r0, ip
 5c0:	000005ac 	andeq	r0, r0, ip, lsr #11
 5c4:	4000776c 	andmi	r7, r0, ip, ror #14
 5c8:	000001ec 	andeq	r0, r0, ip, ror #3
