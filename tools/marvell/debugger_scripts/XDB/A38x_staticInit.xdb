
set option /memory=long


!print "Configure PCIe interface #1 to X1"
!print "Set the capabilities register"
set val /size=long 0xD004006c = 0x7ac12


!print "STEP-0 Configure the MUX select for PCIe-1 on Serdes Lane 2"
set val /size=long 0xD00183fc = 0x40

!print "STEP-1 Set values that should be constant from beginning of sequence"
set val /size=long 0xD0018350 = 0x04470004
set val /size=long 0xD0018354 = 0x00000058
set val /size=long 0xD001835c = 0x0000000d

!print "STEP-2 Assert reset"
! Nothing to do as both bit 13, 14 are asserted to reset by default

!print "STEP-3 Deassert reset"
set val /size=long 0xD0018350 = 0x04476004

!print "STEP-4"
set val /size=long 0xD00A1004 = 0x0000fc60

!print "STEP-5 PHY gen max"
set val /size=long 0xD00A1094 = 0x000017ff

!print "STEP-6"
set val /size=long 0xD00A1704 = 0x00000025

!7. Irrelevent - USB device mode only

!print "STEP-8, not needed - only for simulation"
!set val /size=long 0xD00A1200 = 0x00001000

!print "STEP-9 " ; bit 7 = 1.bit 6=0
set val /size=long 0xD00A113c = 0x0000a08a

!print "STEP-10, not needed - only for simulation"
!set val /size=long 0xD00A1144 = 0x00000304 ; check if we need to write to this register

!print "Release phy reset"
set val /size=long 0xD00A1704 = 0x00000024

!print "Enable PCIe interface"
set val /size=long 0xD0018204 = 0x0707c0f2
CUSTOM "DELAY(1000)"
!data.in 0xd00a1004 /LONG
!data.in 0xd0041a64 /LONG
!data.in 0xd0040070 /LONG

	! 667 MHZ DDR
	print ""
	print "Starting DRAM initialization:"
	! dram init
	set val /size=long 0xD0001400 = 0x7B00Ca28 !  DDR SDRAM Configuration Register
	set val /size=long 0xD0001404 = 0x36301820 !  Dunit Control Low Register - kw40 bit11 high
	set val /size=long 0xD0001408 = 0x43149997 !  DDR SDRAM Timing (Low) Register
	set val /size=long 0xD000140C = 0x38411bc7 !  DDR SDRAM Timing (High) Register
	set val /size=long 0xD0001410 = 0x14300000 !  DDR SDRAM Address Control Register
	set val /size=long 0xD0001414 = 0x00000700 !  DDR SDRAM Open Pages Control Register
	!set val /size=long 0xD0001418 = 0x00000e00 !  DDR SDRAM Operation Register
	!set val /size=long 0xD000141C = 0x00000672 !  DDR SDRAM Mode Register
	!set val /size=long 0xD0001420 = 0x00000004 !  DDR SDRAM Extended Mode Register
	set val /size=long 0xD0001424 = 0x0060f3ff !  Dunit Control High Register ( 2 :1 - bits 15:12 = 0xD )
	set val /size=long 0xD0001428 = 0x000F8830 !  Dunit Control High Register
	set val /size=long 0xD000142C = 0x28c50f8 !  Dunit Control High Register  ( 2:1 -  bit 29 = '1' )
	set val /size=long 0xD000147C = 0x0000c671 !

	! 2:1
	!set val /size=long 0xD00014a8 = 0x00000100 ! DSMP "101"
	!set val /size=long 0xD0020220 = 0x00000006 ! DSMP 7

	set val /size=long 0xD0001494 = 0x00030000 !  DDR SDRAM ODT Control (Low) Register
	!set val /size=long 0xD0001498 = 0x00000000 !  DDR SDRAM ODT Control (High) Register
	!set val /size=long 0xD000149C = 0x00000003 !  DDR Dunit ODT Control Register
	set val /size=long 0xD000149C = 0x00000300 !  DDR Dunit ODT Control Register

	set val /size=long 0xD00014a8 = 0x00000000 !
        set val /size=long 0xD00014cc = 0xbd09000d !
        set val /size=long 0xD0001474 = 0x00000000 !

	set val /size=long 0xD0001538 = 0x00000009 !  Read Data Sample Delays Register
	set val /size=long 0xD000153C = 0x0000000c !  Read Data Ready Delay Register

	set val /size=long 0xD0001504 = 0xFFFFFFF1 !
        set val /size=long 0xD000150c = 0xFFFFFFE5 !
	set val /size=long 0xD0001514 = 0x00000000 !
        set val /size=long 0xD000151c = 0x0!

	set val /size=long 0xD00015D0 = 0x00000650 !  MR0
	set val /size=long 0xD00015D4 = 0x00000046 !  MR1
	set val /size=long 0xD00015D8 = 0x00000010 !  MR2
	set val /size=long 0xD00015DC = 0x00000000 !  MR3

        set val /size=long 0xD00015E0 = 0x23 !
	set val /size=long 0xD00015E4 = 0x00203c18!  ZQC Configuration Register
	set val /size=long 0xD00015EC = 0xf8000019!  DDR PHY

	print " [Done]"

        set val /size=long 0xD00016A0 = 0xe8243dfe ! ZNR / SPR
	set val /size=long 0xD00016A0 = 0xe8280434 ! disable clamp	and Vref

	set val /size=long 0xD00016A0 = 0x281020da ! Clock skew
	set val /size=long 0xD00016A0 = 0xe8260cb2
	set val /size=long 0xD00016A0 = 0xe8290000
	set val /size=long 0xD00016A0 = 0xf810001f

	set val /size=long 0xD00016A0 = 0xC0005847


!	&status=Data.Long(SD:0xD00016A0)
!	&status=&status&(1<<31)
!	WHILE (&status>0)
!	(
!		&status=Data.Long(SD:0xD00016A0)
!		&status=&status&(1<<31)
!	)
	DEFINE SYMBOL /TYPE="unsigned int" /ADDRESS=0xD00016A0 PrfaReq
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END


	set val /size=long 0xD00016A0 = 0xC0406049
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC080704d
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC0C0a85b
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC002008d
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END


	set val /size=long 0xD00016A0 = 0xC0420084
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC082009f
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC0c20099
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC003000F
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC043000f
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC083000f
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD00016A0 = 0xC0C3000f
	WHILE PrfaReq & 0x80000000 THEN
		CUSTOM "DELAY(1)"
	END

	set val /size=long 0xD0001480 = 0x00000001 !  DDR SDRAM Initialization Control Register
	CUSTOM "DELAY(2000)"



	print "Init Done :-)\n"

	set val /size=long 0xD00015B0 = 0x80100008 ! WL
	set val /size=long 0xD00015B0 = 0x80100002 ! Load pattern !
	set val /size=long 0xD00015B0 = 0x80100040 ! RL

	set val /size=long 0xD0018000 = 0x11 ! RL

	set val /size=long 0xD00200e8 = 0x0! RL
	set val /size=long 0xD0020184 = 0x0FFFFFE1 ! RL
	set val /size=long 0xD00182e4 = 0xfffdffff ! RL
!enddo
